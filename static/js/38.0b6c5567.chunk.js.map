{"version":3,"sources":["Component/user/Form/Item/ItemCaptcha.tsx","Component/user/Form/Item/ItemUsername.tsx","Component/user/Form/Item/ItemEmail.tsx","Component/common/Reconfirm.tsx","Type/Iuser.tsx","Component/user/Form/Item/ItemNickname.tsx","Component/user/Form/Item/ItemStudentId.tsx","Component/user/Form/Item/ItemGender.tsx","Component/user/Form/Item/ItemPhone.tsx","Component/user/Form/Item/ItemRoles.tsx","../node_modules/@ant-design/icons-svg/es/asn/RedoOutlined.js","../node_modules/@ant-design/icons/es/icons/RedoOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/QuestionOutlined.js","../node_modules/@ant-design/icons/es/icons/QuestionOutlined.js","Component/common/LoadingData.tsx","Pages/Client/CUser.tsx","../node_modules/@ant-design/icons-svg/es/asn/ManOutlined.js","../node_modules/@ant-design/icons/es/icons/ManOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/WomanOutlined.js","../node_modules/@ant-design/icons/es/icons/WomanOutlined.js"],"names":["withTranslation","props","useState","image","setImage","getCaptcha","CApi","then","data","captcha","setImgId","captchaId","useEffect","content","span","onChange","e","undefined","setCaptcha","target","value","offset","src","height","icon","onClick","map","Item","name","label","t","rules","required","editable","notRequired","message","getFieldValue","validator","_","ExistCheck","isExist","username","Promise","resolve","reject","catch","hasFeedback","disabled","bordered","canSend","setCanSend","modalVis","setModalVis","imgId","email","setEmail","intervalId","setInterval","clearInterval","needVerify","notCheck","type","title","visible","maskClosable","destroyOnClose","onOk","sendVerificationEmail","event","emailVerifyType","res","success","onCancel","emailTitle","test","checkExist","onPressEnter","addonAfter","getEmail","error","setValue","btnProps","beforeCheck","btnText","className","footer","block","danger","confirm","API","todo","style","fontWeight","showIcon","marginBottom","Sex","sex","initialValue","options","color","Male","Female","Unknown","Group","optionType","mode","allowClear","Option","RedoOutlined","ref","React","AntdIcon","_objectSpread","RedoOutlinedSvg","displayName","QuestionOutlined","QuestionOutlinedSvg","LoadingData","loading","size","CUser","ref1","createRef","ref2","ref3","this","isLogin","console","log","history","replace","UrlPrefix","location","pathname","prevProps","prevState","snapshot","userInfo","textAlign","margin","maxWidth","marginTop","initialValues","ItemUsername","ItemNickname","ItemStudentId","SubmitButton","a","current","validateFields","updateProfile","getProfile","setUserInfo","ItemGender","ItemPhone","ItemEmail","ItemRoles","layout","ItemPassword","oldpass","updatePassword","resetFields","newpass","noConfirm","updateEmail","marginLeft","Avatar","href","isValueEmpty","sduId","Reconfirm","thirdPartyUnbinding","thirdParty","Component","connect","state","UState","UserReducer","dispatch","withRouter","ManOutlined","ManOutlinedSvg","WomanOutlined","WomanOutlinedSvg"],"mappings":"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","file":"static/js/38.0b6c5567.chunk.js","sourcesContent":["import {Button, Col, Form, Image, Input, Row} from \"antd\";\nimport React, {useEffect, useState} from \"react\";\nimport {withTranslation} from \"react-i18next\";\nimport CApi from \"Utils/API/c-api\"\nimport {RedoOutlined} from \"@ant-design/icons\"\n\nconst ItemCaptcha = (props: any) => {\n\n    const [image, setImage] = useState<string>()\n\n    const getCaptcha = () => {\n        CApi.getCaptcha().then((data: any) => {\n            setImage(data.captcha)\n            props.setImgId(data.captchaId)\n        })\n    }\n\n    useEffect(() => {\n        getCaptcha()\n    }, [])\n\n    const content = (\n        <Row>\n            <Col span={14}>\n                <Input onChange={(e) => {\n                    if (props.setCaptcha !== undefined)\n                        props.setCaptcha(e.target.value)\n                }}/>\n            </Col>\n            <Col offset={1} span={8}>\n                <Image src={image} height={32}/>\n            </Col>\n            <Col span={1}>\n                <Button\n                    icon={<RedoOutlined/>}\n                    onClick={() => {\n                        getCaptcha()\n                    }}/>\n            </Col>\n        </Row>\n    )\n\n    return (\n        <>\n            {\n                [''].map(() => {\n                    if (props.setCaptcha !== undefined) {\n                        return content\n                    } else {\n                        return (\n                            <Form.Item\n                                name=\"captcha\"\n                                label={props.t(\"captcha\")}\n                                rules={[\n                                    {required: true},\n                                ]}\n                            >\n                                {content}\n                            </Form.Item>\n                        )\n                    }\n                })\n            }\n        </>\n    )\n}\n\nexport default withTranslation()(ItemCaptcha)\n","import {Form, Input} from \"antd\";\nimport React from \"react\";\nimport {withTranslation} from \"react-i18next\";\nimport CApi from \"../../../../Utils/API/c-api\";\n\nconst ItemUsername = (props: any) => {\n    return (\n        <Form.Item\n            name=\"username\"\n            label={props.t(\"username\")}\n            rules={\n                [\n                    {\n                        required:\n                            props.editable !== false && props.notRequired !== true,\n                        message: props.t(\"usernameEmpty\")\n                    },\n                    ({getFieldValue}) => ({\n                        validator(_, value) {\n                            if (props.ExistCheck === true) {\n                                return CApi.isExist({username: value}).then((data: any) => {\n                                    if (data === false) return Promise.resolve()\n                                    else if (data === true) return Promise.reject(\"用户名已存在\")\n                                    return Promise.reject(\"检验失败\")\n                                }).catch((e: any) => {\n                                    return Promise.reject(e)\n                                })\n                            }\n                            return Promise.resolve()\n                        },\n                    }),\n                ]\n            }\n            hasFeedback>\n            <Input\n                disabled={props.editable === false}\n                bordered={props.editable}\n            />\n        </Form.Item>\n    )\n}\n\nexport default withTranslation()(ItemUsername)","import {Button, Form, Input, message, Modal} from \"antd\";\nimport React, {useEffect, useState} from \"react\";\nimport {withTranslation} from \"react-i18next\";\nimport CApi from \"Utils/API/c-api\"\nimport ItemCaptcha from \"./ItemCaptcha\";\nimport {emailType} from \"../../../../Type/types\";\n\nexport interface ItemEmailProps {\n    needVerify: boolean\n    editable: boolean\n    getEmail: any\n    emailVerifyType: emailType  // 邮箱验证类型\n    checkExist?: boolean        // 是否检查邮箱是否存在\n    emailTitle?: string         // 标题\n    onPressEnter?: any\n}\n\nconst ItemEmail = (props: ItemEmailProps & any) => {\n    const [canSend, setCanSend] = useState<number>(0);\n    const [modalVis, setModalVis] = useState<boolean>(false);\n    const [imgId, setImgId] = useState<string>(\"\")\n    const [captcha, setCaptcha] = useState<string>(\"\")\n    const [email, setEmail] = useState<string>(\"\")\n\n    const reduce = () => {\n        if (canSend > 0) {\n            setCanSend(canSend - 1)\n        }\n    }\n\n    useEffect(() => {\n        let intervalId = setInterval(() => reduce(), 1000)\n        return () => clearInterval(intervalId)\n    })\n\n    return (\n        <>\n            {props.needVerify === false && (\n                <Form.Item name=\"email\" label={props.t(\"email\")}\n                           rules={props.notCheck !== true ? [\n                               {type: 'email', message: props.t('emailError')},\n                               {required: props.editable !== false}\n                           ] : undefined}\n                           hasFeedback>\n                    <Input\n                        disabled={props.editable === false}\n                        bordered={props.editable !== false}\n                    />\n                </Form.Item>\n            )}\n            {props.needVerify === true && (\n                <>\n                    <Modal\n                        title={\"人机身份认证\"}\n                        visible={modalVis}\n                        maskClosable={false}\n                        destroyOnClose={true}\n                        onOk={() => {\n                            CApi.sendVerificationEmail({\n                                email: email,\n                                captcha: captcha,\n                                captchaId: imgId,\n                                event: props.emailVerifyType\n                            }).then((res) => {\n                                message.success(\"验证码已发送至您的邮箱\")\n                                setCanSend(60);\n                                setModalVis(false)\n                            })\n                        }}\n                        onCancel={() => {\n                            setModalVis(false)\n                        }}\n                    >\n                        <ItemCaptcha\n                            setImgId={setImgId}\n                            setCaptcha={setCaptcha}\n                        />\n                    </Modal>\n                    <Form.Item\n                        name=\"email\"\n                        label={props.emailTitle ?? props.t(\"new email\")}\n                        rules={[\n                            {required: true},\n                            ({getFieldValue}) => ({\n                                validator(_, value) {\n                                    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n                                    if (!emailRegex.test(value)) {\n                                        return Promise.reject(props.t('emailError'));\n                                    }\n                                    if (props.checkExist === false) return Promise.resolve()\n                                    return CApi.isExist({email: value}).then((data: any) => {\n                                        if (data === false) return Promise.resolve()\n                                        else if (data === true) return Promise.reject(props.t(\"邮箱已存在\"))\n                                        return Promise.reject(props.t(\"检验失败\"))\n                                    }).catch((e: any) => {\n                                        return Promise.reject(e)\n                                    })\n                                },\n                            }),\n                        ]}>\n                        <Input\n                            disabled={props.editable === false || canSend > 0}\n                            bordered={props.editable !== false}\n                            onPressEnter={props.onPressEnter}\n                            addonAfter={\n                                <Button\n                                    type={\"text\"}\n                                    disabled={canSend !== 0}\n                                    onClick={() => {\n                                        props.getEmail().then((data: string) => {\n                                            setEmail(data)\n                                            setModalVis(true)\n                                        }).catch(() => {\n                                            message.error(\"邮箱不合法\")\n                                        })\n                                    }}\n                                >\n                                    {(canSend !== 0 ? canSend + \"s\" : props.t(\"Verify\"))}\n                                </Button>\n                            }/>\n                    </Form.Item>\n                    <Form.Item name=\"emailCode\" label={props.t(\"emailCode\")}\n                               rules={[{required: true}]}>\n                        <Input onPressEnter={props.onPressEnter}/>\n                    </Form.Item>\n                </>\n            )}\n        </>\n    )\n}\n\nexport default withTranslation()(ItemEmail)\n","import {withTranslation} from \"react-i18next\";\nimport {Alert, Button, Input, message, Modal} from \"antd\";\nimport {useState} from \"react\";\nimport \"Assert/css/Reconfirm.css\"\n\ninterface ReconfirmProps{\n    btnProps: any\n    btnText: any\n    confirm: string\n    API: any\n    todo: string\n    beforeCheck?: any\n}\n\nconst Reconfirm = (props: ReconfirmProps) => {\n\n    const [modalVis, setModalVis] = useState<boolean>(false)\n    const [value, setValue] = useState<string>(\"\")\n\n    return (\n        <>\n            <Button\n                {...props.btnProps}\n                onClick={() => {\n                    if(props.beforeCheck !== undefined){\n                        props.beforeCheck().then(()=>{\n                            setModalVis(true)\n                        }).catch(()=>{\n                            message.error(\"表单不完整\")\n                        })\n                    }else{\n                        setModalVis(true)\n                    }\n                }}>{props.btnText}</Button>\n            <Modal\n                title={\"操作确认\"}\n                visible={modalVis}\n                className={\"Reconfirm-Modal\"}\n                onCancel={() => {\n                    setModalVis(false)\n                }}\n                footer={[\n                    <Button\n                        block={true}\n                        danger={true}\n                        disabled={props.confirm !== value}\n                        onClick={() => {\n                            props.API !== undefined && props.API()\n                            setValue(\"\")\n                            setModalVis(false)\n                        }}\n                    > 我确定要{props.todo} </Button>\n                ]}\n            >\n                <Alert message={<span style={{fontWeight: \"bold\"}}>您确定要{props.todo}吗？</span>} type=\"warning\" showIcon style={{marginBottom: 10}}/>\n                <div className={\"Reconfirm-Modal-Input\"}>\n                    请输入 <span style={{fontWeight: \"bold\"}}>{props.confirm}</span> 进行确认。\n                    <Input\n                        value={value}\n                        onChange={(e) => {\n                            setValue(e.target.value)\n                        }}\n                    />\n                </div>\n            </Modal>\n        </>\n\n    )\n}\n\nexport default withTranslation()(Reconfirm)","import {WithTranslation} from \"react-i18next\";\n\nexport enum Sex {\n    Unknown = 2,\n    Male = 1,\n    Female = 0\n}\n\n\nexport type Role = \"superadmin\" | \"admin\" | \"user\"\n\nexport enum sex {\n    boy = 0,\n    girl = 1\n}\n\n\nexport interface IUser {\n    id: number\n    student_id?: string\n    sdu_id?: string\n    username: string\n    nickname?: string\n    sex?: Sex\n    email?: string\n    roles: Role[]\n}\n\n\nexport interface IUserPropCbk extends WithTranslation {\n    ids?: number[]\n    callback: any\n    obj?: any\n}\n\n\nexport interface IUserPropRoles extends WithTranslation {\n    id: number\n    roles: Role[]\n    obj?: any\n    data?: any\n}\n\nexport interface IUserPropAvatar {\n    id: number\n    email: string\n    username: string\n}\n\n\nexport interface UserInfo{\n    userId: string\n    username: string\n    nickname: string\n    realName?: string\n    email?: string | null\n    studentId: string\n    roles: Role[]\n    sduId?: string | null\n    groups?: string[]\n    ipv4?: string\n    userAgent?: string\n    features?: any\n    gender?:any\n}\n\nexport interface UserState{\n    isLogin: boolean\n    userInfo?: UserInfo\n}\n\nexport interface thirdPartyLoginDataSDUCAS{\n    ticket: string\n}\n\nexport type thirdPartyLoginType = \"SDUCAS\" | \"QQ\" | \"WeChat\"\nexport type thirdPartyLoginData = thirdPartyLoginDataSDUCAS\n\n\nexport interface thirdPartyLoginAction{\n    type: thirdPartyLoginType\n    data: thirdPartyLoginData\n}\n\nexport interface thirdPartyLoginResponse{\n    sduId: string\n    sduRealName: string\n    thirdParty: string\n    token: string\n    user: any\n}\n\n","import {Form, Input} from \"antd\";\nimport React from \"react\";\nimport {withTranslation} from \"react-i18next\";\n\nconst ItemNickname = (props: any) => {\n    return (\n        <Form.Item\n            name=\"nickname\"\n            label={props.t(\"nickname\")}\n            initialValue={props.value}\n        >\n            <Input/>\n        </Form.Item>\n    )\n}\n\nexport default withTranslation()(ItemNickname)","import {Form, Input} from \"antd\";\nimport React from \"react\";\nimport {withTranslation} from \"react-i18next\";\n\nconst ItemStudentId = (props: any) => {\n    return (\n        <Form.Item\n            name=\"studentId\"\n            label={props.t(\"student_id\")}\n            initialValue={props.value}\n        >\n            <Input/>\n        </Form.Item>\n    )\n}\n\nexport default withTranslation()(ItemStudentId)","import {Form, Radio} from \"antd\";\nimport React from \"react\";\nimport {withTranslation} from \"react-i18next\";\nimport {Sex} from \"../../../../Type/Iuser\";\nimport {ManOutlined, QuestionOutlined, WomanOutlined} from \"@ant-design/icons\";\n\nconst ItemGender = (props: any) => {\n    const options = [\n        {label: <ManOutlined style={{color: \"rgb(30,112,185)\"}}/>, value: Sex.Male},\n        {label: <WomanOutlined style={{color: \"rgb(230,0,126)\"}}/>, value: Sex.Female},\n        {label: <QuestionOutlined/>, value: Sex.Unknown},\n    ];\n    return (\n        <Form.Item name=\"gender\" label={props.t(\"sex\")}>\n            <Radio.Group\n                options={options}\n                optionType=\"button\"\n            />\n        </Form.Item>\n    )\n}\n\nexport default withTranslation()(ItemGender)","import {Form, Input} from \"antd\";\nimport React from \"react\";\nimport {withTranslation} from \"react-i18next\";\n\nconst ItemPhone = (props: any) => {\n    return (\n        <Form.Item\n            name=\"phone\"\n            label={props.t(\"phone\")}\n            initialValue={props.value}\n            rules={[{\n                required: props.required\n            }]}\n        >\n            <Input/>\n        </Form.Item>\n    )\n}\n\nexport default withTranslation()(ItemPhone)","import {Form, Select} from \"antd\";\nimport React from \"react\";\nimport {withTranslation} from \"react-i18next\";\n\nconst ItemRoles = (props: any) => {\n    return (\n        <Form.Item\n            name=\"roles\"\n            label={props.t(\"roles\")}\n            rules={[{required: props.editable, message: 'Please select roles!'}]}\n            initialValue={props.value}\n        >\n            <Select mode=\"multiple\" allowClear\n                    disabled={props.editable === false}\n                    bordered={props.editable}\n            >\n                <Select.Option value={\"user\"}>{props.t(\"user\")}</Select.Option>\n                <Select.Option value={\"admin\"}>{props.t(\"admin\")}</Select.Option>\n                <Select.Option value={\"superadmin\"}>{props.t(\"superadmin\")}</Select.Option>\n            </Select>\n        </Form.Item>\n    )\n}\n\nexport default withTranslation()(ItemRoles)","// This icon file is generated automatically.\nvar RedoOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M758.2 839.1C851.8 765.9 912 651.9 912 523.9 912 303 733.5 124.3 512.6 124 291.4 123.7 112 302.8 112 523.9c0 125.2 57.5 236.9 147.6 310.2 3.5 2.8 8.6 2.2 11.4-1.3l39.4-50.5c2.7-3.4 2.1-8.3-1.2-11.1-8.1-6.6-15.9-13.7-23.4-21.2a318.64 318.64 0 01-68.6-101.7C200.4 609 192 567.1 192 523.9s8.4-85.1 25.1-124.5c16.1-38.1 39.2-72.3 68.6-101.7 29.4-29.4 63.6-52.5 101.7-68.6C426.9 212.4 468.8 204 512 204s85.1 8.4 124.5 25.1c38.1 16.1 72.3 39.2 101.7 68.6 29.4 29.4 52.5 63.6 68.6 101.7 16.7 39.4 25.1 81.3 25.1 124.5s-8.4 85.1-25.1 124.5a318.64 318.64 0 01-68.6 101.7c-9.3 9.3-19.1 18-29.3 26L668.2 724a8 8 0 00-14.1 3l-39.6 162.2c-1.2 5 2.6 9.9 7.7 9.9l167 .8c6.7 0 10.5-7.7 6.3-12.9l-37.3-47.9z\" } }] }, \"name\": \"redo\", \"theme\": \"outlined\" };\nexport default RedoOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport RedoOutlinedSvg from \"@ant-design/icons-svg/es/asn/RedoOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar RedoOutlined = function RedoOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: RedoOutlinedSvg\n  }));\n};\n\nRedoOutlined.displayName = 'RedoOutlined';\nexport default /*#__PURE__*/React.forwardRef(RedoOutlined);","// This icon file is generated automatically.\nvar QuestionOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M764 280.9c-14-30.6-33.9-58.1-59.3-81.6C653.1 151.4 584.6 125 512 125s-141.1 26.4-192.7 74.2c-25.4 23.6-45.3 51-59.3 81.7-14.6 32-22 65.9-22 100.9v27c0 6.2 5 11.2 11.2 11.2h54c6.2 0 11.2-5 11.2-11.2v-27c0-99.5 88.6-180.4 197.6-180.4s197.6 80.9 197.6 180.4c0 40.8-14.5 79.2-42 111.2-27.2 31.7-65.6 54.4-108.1 64-24.3 5.5-46.2 19.2-61.7 38.8a110.85 110.85 0 00-23.9 68.6v31.4c0 6.2 5 11.2 11.2 11.2h54c6.2 0 11.2-5 11.2-11.2v-31.4c0-15.7 10.9-29.5 26-32.9 58.4-13.2 111.4-44.7 149.3-88.7 19.1-22.3 34-47.1 44.3-74 10.7-27.9 16.1-57.2 16.1-87 0-35-7.4-69-22-100.9zM512 787c-30.9 0-56 25.1-56 56s25.1 56 56 56 56-25.1 56-56-25.1-56-56-56z\" } }] }, \"name\": \"question\", \"theme\": \"outlined\" };\nexport default QuestionOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport QuestionOutlinedSvg from \"@ant-design/icons-svg/es/asn/QuestionOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar QuestionOutlined = function QuestionOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: QuestionOutlinedSvg\n  }));\n};\n\nQuestionOutlined.displayName = 'QuestionOutlined';\nexport default /*#__PURE__*/React.forwardRef(QuestionOutlined);","import {Spin} from \"antd\";\n\nconst LoadingData = (props: any)=>{\n    if(props.loading === true){\n        return (\n            <div className={\"page-center\"}>\n                <Spin size={\"large\"}/>\n            </div>\n        )\n    }else{\n        return props.content\n    }\n}\n\nexport default LoadingData","import React, {Component, Dispatch} from \"react\";\nimport {withRouter} from \"react-router-dom\";\nimport {Card, Col, Divider, Form, FormInstance, message, Row} from \"antd\";\nimport Avatar from \"../../Component/user/Avatar\";\nimport ItemEmail from \"../../Component/user/Form/Item/ItemEmail\";\nimport ItemUsername from \"../../Component/user/Form/Item/ItemUsername\";\nimport {UserState} from \"../../Type/Iuser\";\nimport {connect} from \"react-redux\";\nimport {withTranslation} from \"react-i18next\";\nimport ItemNickname from \"../../Component/user/Form/Item/ItemNickname\";\nimport ItemStudentId from \"../../Component/user/Form/Item/ItemStudentId\";\nimport ItemGender from \"../../Component/user/Form/Item/ItemGender\";\nimport ItemPhone from \"../../Component/user/Form/Item/ItemPhone\";\nimport ItemRoles from \"../../Component/user/Form/Item/ItemRoles\";\nimport CApi from \"Utils/API/c-api\"\nimport SubmitButton from \"../../Component/common/SubmitButton\";\nimport ItemPassword from \"../../Component/user/Form/Item/ItemPassword\";\nimport Reconfirm from \"../../Component/common/Reconfirm\";\nimport {isValueEmpty} from \"../../Utils/empty\";\nimport LoadingData from \"../../Component/common/LoadingData\";\nimport {UrlPrefix} from \"../../Config/constValue\";\n\nclass CUser extends Component<any, any> {\n\n    ref1 = React.createRef<FormInstance<any>>()\n    ref2 = React.createRef<FormInstance<any>>()\n    ref3 = React.createRef<FormInstance<any>>()\n\n    componentDidMount() {\n        if (!this.props.isLogin) {\n            console.log(\"not login\")\n            this.props.history.replace(UrlPrefix + \"/login?to=\" + this.props.location.pathname)\n        }\n    }\n\n    componentDidUpdate(prevProps: Readonly<any>, prevState: Readonly<any>, snapshot?: any) {\n        if (!this.props.isLogin) {\n            this.props.history.replace(UrlPrefix + \"/login?to=\" + this.props.location.pathname)\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <LoadingData loading={this.props.userInfo === undefined} content={\n                    <div style={{textAlign: \"center\", margin: \"0 auto\"}}>\n                        <div style={{textAlign: \"left\", maxWidth: \"1500px\", margin: \"0 auto\"}}>\n                            <Row style={{marginTop: 0}}>\n                                <Col span={16}>\n                                    <Card\n                                        title={this.props.t(\"Profile\")}\n                                    >\n                                        <Form\n                                            initialValues={this.props.userInfo}\n                                            ref={this.ref1}\n                                        >\n                                            <Row>\n                                                <Col span={11}>\n                                                    <ItemUsername editable={false}/>\n                                                    <ItemNickname/>\n                                                    <ItemStudentId/>\n                                                    <SubmitButton\n                                                        API={async () => {\n                                                            return this.ref1.current?.validateFields().then((data: any) => {\n                                                                return CApi.updateProfile(data).then((res) => {\n                                                                    CApi.getProfile().then((res: any) => {\n                                                                        this.props.setUserInfo(res)\n                                                                    })\n                                                                    return Promise.resolve(this.props.t(\"success\"))\n                                                                })\n                                                            }).catch((e: any) => {\n                                                                return Promise.reject(e)\n                                                            })\n                                                        }}\n                                                        btnProps={{type: \"default\"}}\n                                                        btnText={this.props.t(\"update\")}\n                                                    />\n\n                                                </Col>\n                                                <Col span={11} offset={1}>\n                                                    <ItemGender/>\n                                                    <ItemPhone/>\n                                                    <ItemEmail needVerify={false} editable={false}/>\n                                                    <ItemRoles editable={false}/>\n                                                </Col>\n                                            </Row>\n\n                                        </Form>\n                                    </Card>\n                                    <Card\n                                        style={{marginTop: 30}}\n                                        title={this.props.t(\"ChangePass\")}\n                                    >\n                                        <Form\n                                            ref={this.ref2}\n                                            layout={\"vertical\"}\n                                        >\n                                            <Row>\n                                                <Col span={11}>\n                                                    <ItemPassword oldpass={true}/>\n                                                    <SubmitButton\n                                                        API={async () => {\n                                                            return this.ref2.current?.validateFields().then((data: any) => {\n                                                                return CApi.updatePassword(data).then((res) => {\n                                                                    this.ref2.current?.resetFields()\n                                                                    return Promise.resolve(this.props.t(\"success\"))\n                                                                })\n                                                            }).catch((e: any) => {\n                                                                return Promise.reject(e)\n                                                            })\n                                                        }}\n                                                        btnProps={{type: \"default\"}}\n                                                        btnText={this.props.t(\"update\")}\n                                                    />\n                                                </Col>\n                                                <Col offset={1} span={11}>\n                                                    <ItemPassword newpass={true}/>\n                                                </Col>\n                                            </Row>\n                                        </Form>\n\n                                    </Card>\n                                    <Card\n                                        style={{marginTop: 30}}\n                                        title={this.props.t(\"modifyEmail\")}\n                                    >\n                                        <Form\n                                            ref={this.ref3}\n                                            layout={\"vertical\"}\n                                        >\n                                            <Row>\n                                                <Col span={11}>\n                                                    <ItemPassword noConfirm={true}/>\n                                                    <SubmitButton\n                                                        API={async () => {\n                                                            return this.ref3.current?.validateFields().then((data: any) => {\n                                                                // console.log(data)\n                                                                return CApi.updateEmail(data).then((res) => {\n                                                                    this.ref3.current?.resetFields()\n                                                                    return Promise.resolve(this.props.t(\"success\"))\n                                                                })\n                                                            }).catch((e: any) => {\n                                                                return Promise.reject(e)\n                                                            })\n                                                        }}\n                                                        btnProps={{type: \"default\"}}\n                                                        btnText={this.props.t(\"update\")}\n                                                    />\n                                                </Col>\n                                                <Col offset={1} span={11}>\n                                                    <ItemEmail\n                                                        needVerify={true} emailVerifyType={\"updateEmail\"}\n                                                        getEmail={async () => {\n                                                            return this.ref3.current?.validateFields([\"email\"]).then((data: any) => {\n                                                                return Promise.resolve(data.email)\n                                                            }).catch(() => {\n                                                                return Promise.reject()\n                                                            })\n                                                        }}\n                                                    />\n                                                </Col>\n                                            </Row>\n                                        </Form>\n                                    </Card>\n                                </Col>\n                                <Col span={7} style={{marginLeft: \"30px\"}}>\n                                    <Card>\n                                        <div style={{textAlign: \"center\", margin: \"0 auto\"}}>\n                                            <div>\n                                                <Avatar email={this.props.userInfo?.email} size={150}/><br/>\n                                            </div>\n                                            <div style={{marginTop: 25}}>\n                                                {this.props.t(\"weUse\")} <a\n                                                href={\"https://cravatar.cn/\"}>Cravatar</a> {this.props.t(\"toPresentYourAvatarIcon\")}\n                                            </div>\n\n                                        </div>\n                                    </Card>\n                                    {\n                                        [\"\"].map(() => {\n                                            if (!isValueEmpty(this.props.userInfo?.sduId)) {\n                                                return (\n                                                    <Card\n                                                        title={`SDUCAS（${this.props.t(\"sduUnifiedIdentityPlatform\")}）`}\n                                                        style={{marginTop: 30}}\n                                                    >\n                                                        <div style={{textAlign: \"center\", margin: \"0 auto\"}}>\n                                                            {this.props.userInfo.sduId}\n                                                            <Divider type={\"vertical\"}/>\n                                                            <Reconfirm\n                                                                btnProps={{size: \"small\", type: \"link\"}}\n                                                                btnText={this.props.t(\"unbinding\")}\n                                                                todo={this.props.t(\"unbindSdusForUnifiedAuthentication\")}\n                                                                confirm={this.props.userInfo.sduId}\n                                                                API={() => {\n                                                                    CApi.thirdPartyUnbinding({thirdParty: \"SDUCAS\"}).then((res: any) => {\n                                                                        CApi.getProfile().then((res: any) => {\n                                                                            this.props.setUserInfo(res)\n                                                                        })\n                                                                        message.success(this.props.t(\"unwindingSuccessful\"))\n                                                                    })\n                                                                }}\n                                                            />\n                                                        </div>\n                                                    </Card>\n                                                )\n                                            }\n                                            return undefined\n                                        })\n                                    }\n                                </Col>\n                            </Row>\n                        </div>\n                    </div>}\n                />\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state: any) => {\n    const UState: UserState = state.UserReducer\n    return {\n        isLogin: UState.isLogin,\n        userInfo: UState.userInfo\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\n    setUserInfo: (data: any) => dispatch({type: \"setUserInfo\", data: data}),\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(\n    withTranslation()(\n        withRouter(CUser)\n    ))\n","// This icon file is generated automatically.\nvar ManOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M874 120H622c-3.3 0-6 2.7-6 6v56c0 3.3 2.7 6 6 6h160.4L583.1 387.3c-50-38.5-111-59.3-175.1-59.3-76.9 0-149.3 30-203.6 84.4S120 539.1 120 616s30 149.3 84.4 203.6C258.7 874 331.1 904 408 904s149.3-30 203.6-84.4C666 765.3 696 692.9 696 616c0-64.1-20.8-124.9-59.2-174.9L836 241.9V402c0 3.3 2.7 6 6 6h56c3.3 0 6-2.7 6-6V150c0-16.5-13.5-30-30-30zM408 828c-116.9 0-212-95.1-212-212s95.1-212 212-212 212 95.1 212 212-95.1 212-212 212z\" } }] }, \"name\": \"man\", \"theme\": \"outlined\" };\nexport default ManOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ManOutlinedSvg from \"@ant-design/icons-svg/es/asn/ManOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar ManOutlined = function ManOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: ManOutlinedSvg\n  }));\n};\n\nManOutlined.displayName = 'ManOutlined';\nexport default /*#__PURE__*/React.forwardRef(ManOutlined);","// This icon file is generated automatically.\nvar WomanOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M712.8 548.8c53.6-53.6 83.2-125 83.2-200.8 0-75.9-29.5-147.2-83.2-200.8C659.2 93.6 587.8 64 512 64s-147.2 29.5-200.8 83.2C257.6 200.9 228 272.1 228 348c0 63.8 20.9 124.4 59.4 173.9 7.3 9.4 15.2 18.3 23.7 26.9 8.5 8.5 17.5 16.4 26.8 23.7 39.6 30.8 86.3 50.4 136.1 57V736H360c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h114v140c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V812h114c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8H550V629.5c61.5-8.2 118.2-36.1 162.8-80.7zM512 556c-55.6 0-107.7-21.6-147.1-60.9C325.6 455.8 304 403.6 304 348s21.6-107.7 60.9-147.1C404.2 161.5 456.4 140 512 140s107.7 21.6 147.1 60.9C698.4 240.2 720 292.4 720 348s-21.6 107.7-60.9 147.1C619.7 534.4 567.6 556 512 556z\" } }] }, \"name\": \"woman\", \"theme\": \"outlined\" };\nexport default WomanOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport WomanOutlinedSvg from \"@ant-design/icons-svg/es/asn/WomanOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar WomanOutlined = function WomanOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: WomanOutlinedSvg\n  }));\n};\n\nWomanOutlined.displayName = 'WomanOutlined';\nexport default /*#__PURE__*/React.forwardRef(WomanOutlined);"],"sourceRoot":""}