{"version":3,"sources":["Utils/API/request.ts","Assert/img/memory.svg","Assert/img/bomb.svg","Assert/img/output.svg","Component/submission/TestCase.tsx","Utils/deepClone.ts","Utils/API/c-api.ts","Utils/API/apiAddress.ts","Utils/judgeAhtu.ts","Component/submission/Func/ReJudge.tsx","Utils/initLanguage.ts","Utils/API/m-api.ts","Utils/Time.ts","Config/i18n.tsx","Component/submission/SyncJudging.tsx","Utils/Loading.tsx","Config/router/router.tsx","Component/common/CodeHighlight.tsx","Type/ISubmission.ts","Utils/empty.ts","Component/submission/Processing/Running.tsx","Component/submission/Processing/JudgeResult.tsx","Component/submission/Func/Invalidate.tsx","Component/submission/Func/DownloadTestCase.tsx","Component/submission/Processing/Summary.tsx","Component/submission/Processing/Processing.tsx","Component/submission/Processing/ModalProcessing.tsx","App.tsx","Redux/Reducer/table.ts","Redux/Reducer/exam.ts","Redux/Reducer/config.ts","Redux/Reducer/problem.ts","Redux/Reducer/user.ts","Redux/Reducer/manage.ts","Redux/Reducer/submission.ts","Redux/Reducer/contest.ts","Redux/Reducer/problemSet.ts","Redux/Reducer/common.ts","Redux/Store/rootReducer.ts","Redux/Store/index.ts","reportWebVitals.ts","index.tsx","Config/constValue.ts"],"names":["baseUrl","apiAddress","CLIENT_SERVER","service","axios","create","baseURL","timeout","defaults","withCredentials","getZipFile","url","data","config","filename","a","post","responseType","response","blob","Blob","type","Url","window","URL","createObjectURL","link","document","createElement","href","download","Date","now","click","revokeObjectURL","Promise","reject","resolve","messageDisabledList","dealResponse","resp","localStorage","setItem","timestamp","Math","abs","location","replace","UrlPrefix","message","error","code","undefined","indexOf","request","get","params","headers","_defs","_path","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgMemory","_ref","svgRef","title","titleId","props","t","className","viewBox","xmlns","id","xmlnsXlink","width","height","ref","d","ForwardRef","SvgBomb","_path2","_path3","_path4","_path5","SvgOutput","TestCase","state","MouseIn","NameList","StateList","CaseList","Pending","icon","ClockCircleOutlined","text","textAll","color","Running","SyncOutlined","spin","Accepted","CheckCircleOutlined","tagColor","TimeLimitExceeded","FieldTimeOutlined","MemoryLimitExceeded","Icon","component","Memory","OutputLimitExceeded","OLE","WrongAnswer","CloseCircleOutlined","RuntimeError","RE","CompilationError","PresentationError","SystemError","Queueing","Compiling","Judging","End","Cancelled","caseType","visible","caseTime","caseMemory","caseScore","content","strong","floor","scoreMod","TestCaseStates","map","onMouseEnter","setState","onMouseLeave","zIndex","caseIndex","level","ck","textLevel","append","Component","withTranslation","deepClone","obj","_toString","toString","nodeType","cloneNode","getTime","flags","global","push","multiline","ignoreCase","RegExp","join","result","Array","isArray","constructor","cApi","getCopyright","login","logout","register","forgetPassword","getProfile","updateProfile","updatePassword","updateEmail","sendVerificationEmail","resetPassword","getCaptcha","isExist","queryParticipateContest","thirdPartyLogin","thirdPartyUnbinding","thirdPartyRegister","thirdPartyBinding","uploadFile","uploadSingleFile","getFileByMD5","getFileDownloadUrl","name","getContestList","invalidateContestSubmission","getUpcomingContest","getContestProblem","getContestAcProblem","participateContest","submitContestProblem","getContestInfo","getContestSubmissionList","rejudgeInContest","getContestSubmissionInfo","getRank","submitInContest","getContestReport","createQuestion","replyQuestion","deleteQuestion","getQuestionList","getQuestionDetail","publicQuestion","getAnnouncementList","getAnnouncement","rejudge","getSubmissionInfo","getSubmissionList","getACProblem","invalidateSubmission","submit","getProblemList","getProblemInfo","getGroupInfo","getMyGroup","getGroupList","joinGroupApply","quitGroup","getProblemSetInfo","getProblemSetProblem","submitProblemSetProblem","getProblemSetProblemAS","markObjectiveProblem","updateProblemSetProblemCollect","getProblemSetSubmissionList","getProblemSetSubmissionInfo","finishProblemSet","getJudgeList","getJudgeInfo","updateJudgeInfo","getProblemSummary","getProblemSetProPreview","getProblemSetLabelList","getProblemSetList","getProblemSetPublic","addPublicCheckpoints","getPublicCheckpoints","delPublicCheckpoints","addPsPublicCheckpoints","getPsPublicCheckpoints","delPsPublicCheckpoints","MANAGE_SERVER","EXAM_SERVER","FRONT_SERVER","SOCKET_SERVER","judgeAuth","roles","minRole","ok","v","includes","onClick","RejudgeNumber","submissionIds","API","then","res","success","afterSuccess","initLanguage","lang","getItem","navigator","language","substr","toLowerCase","mApi","getContestListByGroupId","getStudentListByGroupId","getUserList","updateUserInfo","updateUserPasswd","addUsers","deleteUsers","getProblem","updateProblemInfo","createProblem","getProblemDescriptionList","getProblemDescription","updateDescription","createDescription","deleteDescription","uploadSingleCheckpoint","uploadCheckpointFiles","getCheckpointList","problemCode","getCheckpointPreview","checkpointId","updateProblemCheckpoints","getContest","updateContest","createContest","exportComprehensive","ret","elink","err","getOneTemplate","pageTemplateList","getJudgeTemplateList","createTemplate","updateTemplate","queryTemplateTitle","zipDownload","zipDownloadFast","createGroup","updateGroup","getGroupDetail","updateUserStatus","addUsersToGroup","deleteGroup","queryGroupTitle","getExamList","getExamInfo","examId","createExam","updateExam","judgeExam","getExamSubmission","getChoiceList","createChoiceProblem","updateChoiceProblem","getChoiceInfo","getChoiceProblem","createAnnouncement","updateAnnouncement","deleteAnnouncement","addCodesToHub","createProblemGroup","editProblemGroup","getProblemGroupInfo","getProblemGroupList","getProblemGroupSearch","createObjective","editObjective","getObjective","createSubjective","editSubjective","getSubjective","createProblemSet","editProblemSet","updatePublicCheckpoints","reArrangeCheckpoints","updatePsPublicCheckpoints","reArrangePsCheckpoints","TimeRangeState","start","end","parseInt","getDiffSecond","Start","moment","diff","TimeDiff","h","m","s","diffSecond","unix2Time","time","format","unix2Date","languageMap","zhCN","enUS","defLang","id_","findIndex","item","locale","i18n","use","initReactI18next","init","resources","en","translation","require","zh","lng","debug","interpolation","escapeValue","SyncJudging","useWebSocket","share","open","sendMessage","lastMessage","readyState","useEffect","JSON","parse","x","dataHandle","ReadyState","OPEN","stringify","queryList","Loading","delay","size","routerCLayout","num","path","exact","lazy","routerLayout","getRouterPath","router","copyable","tooltips","style","darcula","showLineNumbers","RunningResultList","SubmissionMap","langMap","v1","v2","isValueEmpty","value","e","y","connect","UState","UserReducer","SubState","SubmissionReducer","userInfo","RejudgeAPI","TopSubmissionInfo","InvalidateAPI","dispatch","Step","Steps","RunningState","RunningResult","submissionInfo","TestCaseStateList","PublicTestCaseStateList","testcaseMod","getRunningIcon","w","LoadingOutlined","getRunningState","status","marginTop","judgeLog","description","showIcon","ReJudge","submissionId","refresh","textAlign","paddingTop","loading","Title","scoreAC","Tcl","add","getACScore","JudgedNum","percent","fontSize","display","justifyContent","flexWrap","JudgeResult","info","numList","ACNumber","firstRejectId","caseID","AC","SumAll","sumScore","CaseNumber","getInfo","fontWeight","extra","useDownload","danger","checkpoint","inputFileId","downloadFilename","inputFilename","outputFileId","outputFilename","span","defaultActiveKey","tabPosition","index","TabPane","tab","val","CloseOutlined","DownloadOutlined","scoreSum","mxTime","mxMem","SumTime","SumMem","firstUnACCaseNumber","caseMem","SumRunning","AvgMem","getCaseInfo","marginBottom","pagination","dataSource","judgeResult","gmtCreate","gmtModified","judgeTemplateTitle","showHeader","columns","dataIndex","offset","username","userId","problemTitle","direction","TimeLimit","margin","suffix","MemoryLimit","TopSubmissionId","QuerySubmissionAPI","withRouter","useState","currentStep","setCurrentStep","showStep","setShowStep","setRunningState","setRunningResult","setTestCaseStateList","setPublicTestCaseStateList","setSubmissionInfo","webSocketOpen","setWebSocketOpen","webSocketQueryList","setWebSocketQueryList","preDealCheckpointSet","resData","Score","Time","Index","initCaseData","setCaseValue","TestCaseInit","PublicTestCaseInit","checkpointNum","publicCheckpointNum","nameList","getStatus","NameIndex","getDisabled","getIcon","sf","steps","disabled","cssClass","CodeHighlight","zipFileId","running","summary","timeLimit","memoryLimit","submissionIdHex","checkpointType","checkpointIndex","judgeScore","usedTime","usedMemory","active","current","onChange","submissionModalVis","SubmissionModalVis","setSubmissionModalVis","useTranslation","destroyOnClose","onCancel","overflow","footer","local","ConfigReducer","fallback","r","initState","tableData","examInfo","examProListInfo","examAnswerSheetInfo","langCode","mode","copyRight","ProblemInfo","isLogin","manageInitData","submissionListInfo","contestInfo","minWidth","afterContestSubmission","sliderTime","allowSliderMove","openSliderMove","exportData","problemSetInfo","keyValueData","rootReducers","combineReducers","TableReduce","action","State","initTableData","selectedRowKeys","tableVersion","tableInfo","nv","ExamReducer","ProblemReducer","ManageReducer","submissionID","ContestReducer","ProblemSetReducer","CommonReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById","defaultPageSize","MaxCodeLength","PREDEFINED_CHECKERS","SPJ_Code","SPJ_Config","NEWLINE_CONVERT_INDEX","DEFAULT","DOS2UNIX","UNIX2DOS","NEWLINE_CONVERT"],"mappings":"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","file":"static/js/main.97ea2537.chunk.js","sourcesContent":["import apiAddress from \"./apiAddress\";\nimport axios, {AxiosRequestConfig} from \"axios\";\nimport {Get, GetError, Post} from \"../../Type/types\";\nimport {message} from \"antd\";\nimport {UrlPrefix} from \"../../Config/constValue\";\n\nconst baseUrl = apiAddress().CLIENT_SERVER + '/api'\n\nconst service = axios.create({\n    baseURL: baseUrl,\n    timeout: 30000,\n})\nservice.defaults.withCredentials = true\n\n\nconst getZipFile: any = async (url: string, data: object, config?: AxiosRequestConfig, filename?: string) => {\n    const response = await service.post(url, data, {\n        ...config, responseType: 'blob'\n    });\n    try {\n        let blob = new Blob([response.data], {type: 'application/zip'})\n        let Url = window.URL.createObjectURL(blob)\n        const link = document.createElement('a')\n        link.href = Url\n        link.download = filename ?? `${Date.now()}-TestCase.zip`\n        link.click()\n        URL.revokeObjectURL(Url)\n    } catch (e) {\n        return Promise.reject(e)\n    }\n    return Promise.resolve()\n}\n\n\nconst messageDisabledList = [\n    \"/user/getProfile\",\n    \"/submit/queryACProblem\",\n    \"/group/my\"\n]\n\nconst dealResponse = async (resp: any, url: string) => {\n\n    try {\n        const response = await resp;\n        localStorage.setItem('server-time', response.data.timestamp)\n        if (Math.abs(response.data.timestamp - Date.now()) > 60000) {\n            window.location.replace(UrlPrefix + \"/error/time\")\n            message.error(\"本地时间异常\")\n            return Promise.reject(\"本地时间异常\")\n        }\n        switch (response.data.code) {\n            case 0:\n                return response.data.data\n            default:\n                message.error(response.data.message);\n                return Promise.reject(response.data.message)\n        }\n    } catch (e: any) {\n        const response = e.response\n        if (response === undefined) {\n            message.error(\"服务器不可达\")\n            return Promise.reject(\"服务器不可达\")\n        }\n        switch (response.data.code) {\n            default:\n                if (messageDisabledList.indexOf(url) === -1)\n                    message.error(response.data.message);\n                return Promise.reject(response.data.message)\n        }\n    }\n}\n\nconst get: Get | GetError = async (url: string, params?: object, config?: AxiosRequestConfig) => {\n    return await dealResponse(service.get(url, {\n        ...{headers: {\"Cache-Control\": \"no-cache, no-store, must-revalidate\"}}, params, ...config,\n    }), url)\n}\n\nconst post: Post | GetError = async (url: string, data: object, config?: AxiosRequestConfig) => {\n    return await dealResponse(service.post(url, data, {\n        ...{headers: {\"Cache-Control\": \"no-cache, no-store, must-revalidate\"}}, ...config\n    }), url);\n}\n\nconst request = {\n    get,\n    post,\n    getZipFile\n}\nexport default request;\n","var _defs, _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgMemory(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    t: 1630745856328,\n    className: \"icon\",\n    viewBox: \"0 0 1024 1024\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"p-id\": 7765,\n    id: \"mx_n_1630745856329\",\n    \"data-spm-anchor-id\": \"a313x.7781069.0.i4\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 200,\n    height: 200,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }))), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M640 384H384v256h256V384z m-85.333333 170.666667h-85.333334v-85.333334h85.333334v85.333334z m341.333333-85.333334V384h-85.333333V298.666667c0-46.933333-38.4-85.333333-85.333334-85.333334h-85.333333V128h-85.333333v85.333333h-85.333334V128H384v85.333333H298.666667c-46.933333 0-85.333333 38.4-85.333334 85.333334v85.333333H128v85.333333h85.333333v85.333334H128v85.333333h85.333333v85.333333c0 46.933333 38.4 85.333333 85.333334 85.333334h85.333333v85.333333h85.333333v-85.333333h85.333334v85.333333h85.333333v-85.333333h85.333333c46.933333 0 85.333333-38.4 85.333334-85.333334v-85.333333h85.333333v-85.333333h-85.333333v-85.333334h85.333333z m-170.666667 256H298.666667V298.666667h426.666666v426.666666z\",\n    \"p-id\": 7766,\n    \"data-spm-anchor-id\": \"a313x.7781069.0.i5\",\n    className: \"\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMemory);\nexport default __webpack_public_path__ + \"static/media/memory.c49f2d62.svg\";\nexport { ForwardRef as ReactComponent };","var _defs, _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgBomb(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    t: 1630748477848,\n    className: \"icon\",\n    viewBox: \"0 0 1024 1024\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"p-id\": 8485,\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 200,\n    height: 200,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }))), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M352.75992 413.811573q-4.897178-12.242946-16.650407-17.140124t-23.996174 0q-52.889527 21.547585-93.536107 62.194166t-62.194166 93.536107q-4.897178 12.242946 0 23.996174t17.140125 16.650406q6.366332 2.448589 11.753228 2.448589 20.568149 0 29.38307-19.588713 16.650407-41.136298 48.237207-72.723099t72.723099-48.237207q12.242946-5.386896 17.140125-17.140125t0-23.996174z m461.314203-174.33955l22.527021 22.527021-119.491153 119.001434 33.300813 33.300813q9.304639 9.304639 9.304639 22.282162t-9.304639 22.282162l-31.341941 31.341941q43.584888 78.844572 43.584887 167.973219 0 70.029651-27.17934 133.937829t-73.457675 110.186513-110.186514 73.457676-133.937829 27.17934-133.937829-27.17934-110.186513-73.457676-73.457676-110.186513-27.17934-133.937829 27.17934-133.937829 73.457676-110.186514 110.186513-73.457675 133.937829-27.17934q89.128647 0 167.973219 43.584887l31.341941-31.341941q9.304639-9.304639 22.282162-9.304639t22.282162 9.304639l33.300813 33.300813z m3.917743-27.424199q-4.897178 4.897178-10.773792 4.897178-6.366332 0-11.263511-4.897178l-44.564323-44.074605q-4.407461-4.897178-4.40746-11.263511t4.40746-11.26351q4.897178-4.407461 11.26351-4.407461t11.263511 4.407461l44.074605 44.564323q4.897178 4.407461 4.897178 11.018652t-4.897178 11.018651z m112.635103 112.635103q-5.386896 4.407461-11.26351 4.40746t-11.263511-4.40746l-44.074605-44.564323q-4.897178-4.407461-4.897178-11.018652t4.897178-11.018651q4.407461-4.897178 11.018651-4.897179t11.018652 4.897179l44.564323 44.074605q4.407461 4.897178 4.40746 11.263511t-4.40746 11.26351z m20.078431-89.618365q0 6.85605-4.40746 11.263511t-11.263511 4.40746h-47.012912q-6.85605 0-11.26351-4.40746t-4.407461-11.263511 4.407461-11.26351 11.26351-4.40746h47.012912q6.85605 0 11.263511 4.40746t4.40746 11.26351z m-94.025825-94.025825v47.012913q0 6.85605-4.40746 11.26351t-11.263511 4.407461-11.26351-4.407461-4.40746-11.26351v-47.012913q0-6.85605 4.40746-11.26351t11.26351-4.40746 11.263511 4.40746 4.40746 11.26351z m73.947394 26.934482l-44.564323 44.074605q-4.897178 4.897178-10.773793 4.897178-6.366332 0-11.26351-4.897178-4.897178-4.407461-4.897178-11.018651t4.897178-11.018652l44.074605-44.564323q4.897178-4.407461 11.263511-4.407461t11.26351 4.407461q4.407461 4.897178 4.40746 11.26351t-4.40746 11.263511z\",\n    \"p-id\": 8486\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBomb);\nexport default __webpack_public_path__ + \"static/media/bomb.4a8e9152.svg\";\nexport { ForwardRef as ReactComponent };","var _defs, _path, _path2, _path3, _path4, _path5;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgOutput(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    t: 1630750148457,\n    className: \"icon\",\n    viewBox: \"0 0 1024 1024\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"p-id\": 9369,\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 200,\n    height: 200,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }))), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M854 65c19.722 0 35.732 15.856 36 35.503v0.596l-1 363c-0.055 19.882-16.217 35.956-36.1 35.9-19.683-0.053-35.633-15.894-35.897-35.503l-0.003-0.595 0.901-326.901H208v721h240c19.683 0 35.677 15.797 35.995 35.405L484 894c0 19.683-15.797 35.677-35.405 36H172c-19.683 0-35.677-15.797-36-35.405V101c0-19.683 15.797-35.677 35.405-36H854z\",\n    \"p-id\": 9370\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M704 284c19.882 0 36 16.118 36 36 0 19.683-15.797 35.677-35.405 35.995L704 356H320c-19.882 0-36-16.118-36-36 0-19.683 15.797-35.677 35.405-35.995L320 284h384zM320.594 429.5l192.5 0.5c19.882 0.052 35.958 16.211 35.906 36.094-0.051 19.683-15.89 35.636-35.498 35.903l-0.596 0.003-192.5-0.5c-19.882-0.052-35.958-16.211-35.906-36.094 0.051-19.683 15.89-35.636 35.498-35.903l0.596-0.003z\",\n    \"p-id\": 9371\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M512 686m37.5 0l300 0q37.5 0 37.5 37.5l0 0q0 37.5-37.5 37.5l-300 0q-37.5 0-37.5-37.5l0 0q0-37.5 37.5-37.5Z\",\n    \"p-id\": 9372\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M754.123846 575.090837m26.516504 26.516504l94.752309 94.752309q26.516504 26.516504 0 53.033009l0 0q-26.516504 26.516504-53.033009 0l-94.752309-94.752309q-26.516504-26.516504 0-53.033009l0 0q26.516504-26.516504 53.033009 0Z\",\n    \"p-id\": 9373\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M754.123856 871.909188m26.516504-26.516505l94.752309-94.752308q26.516504-26.516504 0-53.033009l0 0q-26.516504-26.516504-53.033009 0l-94.752308 94.752309q-26.516504 26.516504 0 53.033008l0 0q26.516504 26.516504 53.033008 0Z\",\n    \"p-id\": 9374\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgOutput);\nexport default __webpack_public_path__ + \"static/media/output.d92b4fe9.svg\";\nexport { ForwardRef as ReactComponent };","import {Component} from \"react\";\nimport {Popover, Tag, Tooltip} from \"antd\";\nimport Icon, {\n    CheckCircleOutlined,\n    ClockCircleOutlined,\n    CloseCircleOutlined,\n    FieldTimeOutlined,\n    SyncOutlined\n} from '@ant-design/icons';\n\nimport {ReactComponent as Memory} from \"Assert/img/memory.svg\"\nimport {ReactComponent as RE} from \"Assert/img/bomb.svg\"\nimport {ReactComponent as OLE} from \"Assert/img/output.svg\"\nimport {withTranslation, WithTranslation} from \"react-i18next\";\nimport Title from \"antd/lib/typography/Title\";\nimport Text from \"antd/lib/typography/Text\";\nimport {displayType, StateList, TestCaseStates} from \"../../Type/ISubmission\";\nimport {ck} from \"../../Utils/empty\";\n\n\ninterface ViewType {\n    type?: \"tag\" | \"text\" | \"tag-simple\" | \"index\"\n}\n\nexport interface TestCaseProp {\n    caseIndex?: number\n    caseType: TestCaseStates\n    caseScore?: number\n    caseTime?: number\n    caseMemory?: number\n    casePreview?: string\n    append?: string\n    textLevel?: number\n    scoreMod?: displayType\n    caseID?: string\n}\n\ninterface ITestCaseProp extends WithTranslation, TestCaseProp, ViewType {\n}\n\nclass TestCase extends Component<ITestCaseProp, any> {\n\n\n    constructor(props: Readonly<ITestCaseProp> | ITestCaseProp) {\n        super(props);\n        this.state = {\n            MouseIn: false\n        }\n    }\n\n    render() {\n        const NameList = StateList\n        const {t} = this.props\n        const CaseList: { [key: string]: any } = {\n            Pending: {\n                icon: <ClockCircleOutlined/>,\n                text: \"Pending\",\n                textAll: t(\"Pending\"),\n                color: undefined,\n            },\n            Running: {\n                icon: <SyncOutlined spin/>,\n                text: \"Running\",\n                textAll: t(\"Running\"),\n                color: 'blue'\n            },\n            Accepted: {\n                icon: <CheckCircleOutlined/>,\n                text: \"AC\",\n                textAll: t(\"Accepted\"),\n                color: \"success\",\n                type: \"success\",\n                tagColor: \"#3ad506\"\n            },\n            TimeLimitExceeded: {\n                icon: <FieldTimeOutlined/>,\n                text: \"TLE\",\n                textAll: t(\"TimeLimitExceeded\"),\n                color: \"orange\",\n                type: \"warning\",\n                tagColor: \"#d46b08\"\n            },\n            MemoryLimitExceeded: {\n                icon: <Icon component={Memory}/>,\n                text: \"MLE\",\n                textAll: t(\"MemoryLimitExceeded\"),\n                color: \"orange\",\n                type: \"warning\",\n                tagColor: \"#d46b08\"\n            },\n            OutputLimitExceeded: {\n                icon: <Icon component={OLE}/>,\n                text: \"OLE\",\n                textAll: t(\"OutputLimitExceeded\"),\n                color: \"orange\",\n                type: \"warning\",\n                tagColor: \"#d46b08\"\n            },\n            WrongAnswer: {\n                icon: <CloseCircleOutlined/>,\n                text: \"WA\",\n                textAll: t(\"WrongAnswer\"),\n                color: \"error\",\n                type: \"danger\",\n                tagColor: \"#ff1500\"\n            },\n            RuntimeError: {\n                icon: <Icon component={RE}/>,\n                text: \"RE\",\n                textAll: t(\"RuntimeError\"),\n                color: \"error\",\n                type: \"danger\",\n                tagColor: \"#531dab\"\n            },\n            CompilationError: {\n                icon: <CloseCircleOutlined/>,\n                text: \"CE\",\n                textAll: t(\"compilationError\"),\n                color: \"error\",\n                type: \"warning\",\n                tagColor: \"#c46304\"\n            },\n            PresentationError: {\n                icon: <CloseCircleOutlined/>,\n                text: \"PE\",\n                textAll: t(\"formatError\"),\n                color: \"error\",\n                type: \"danger\",\n                tagColor: \"#ff1500\"\n            },\n            SystemError: {\n                icon: <CloseCircleOutlined/>,\n                text: \"SE\",\n                textAll: t(\"SystemError\"),\n                color: \"error\",\n                type: \"danger\",\n                tagColor: \"#ff1500\"\n            },\n            Queueing: {\n                icon: <ClockCircleOutlined/>,\n                text: \"Queueing\",\n                textAll: t(\"Pending\"),\n                color: undefined\n            },\n            Compiling: {\n                icon: <SyncOutlined spin/>,\n                text: \"Compiling\",\n                textAll: t(\"Compiling\"),\n                color: 'blue'\n            },\n            Judging: {\n                icon: <SyncOutlined spin/>,\n                text: \"Judging\",\n                textAll: t(\"judging\"),\n                color: 'blue'\n            },\n            End: {\n                icon: <CloseCircleOutlined/>,\n                text: \"END\",\n                textAll: t(\"End\"),\n                color: undefined,\n            },\n            Cancelled: {\n                icon: <CloseCircleOutlined/>,\n                text: \"Cancelled\",\n                textAll: t(\"canceled\"),\n                color: \"black\"\n            }\n        }\n\n        const type = NameList[this.props.caseType]\n\n        const visible =\n            !(this.props.caseTime === undefined &&\n                this.props.caseMemory === undefined &&\n                this.props.caseScore === undefined)\n\n        const content: any = visible ? (\n            <>\n                {\n                    this.props.caseTime !== undefined && (\n                        <>\n                            <Text strong>\n                                {this.props.t(\"Time\")}\n                            </Text> : {this.props.caseTime} ms\n                        </>\n                    )\n                }\n                {\n                    this.props.caseMemory !== undefined && (\n                        <>\n                            <br/>\n                            <Text strong>\n                                {this.props.t(\"Memory\")}\n                            </Text> : {Math.floor(this.props.caseMemory / 1024)} MB\n                        </>\n                    )\n                }\n                {\n                    this.props.caseScore !== undefined && this.props.scoreMod === \"show\" && (\n                        <>\n                            <br/>\n                            <Text strong>\n                                {this.props.t(\"Score\")}\n                            </Text> : {this.props.caseType === TestCaseStates.Accepted ? this.props.caseScore : 0}\n                        </>\n                    )\n                }\n            </>\n        ) : <></>\n\n        return (\n            <>\n                {[''].map(() => {\n                    switch (this.props.type) {\n                        case undefined:\n                        case \"tag\":\n                            return (\n                                <span\n                                    onMouseEnter={() => {\n                                        this.setState({MouseIn: true})\n                                    }}\n                                    onMouseLeave={() => {\n                                        this.setState({MouseIn: false})\n                                    }}\n                                    className={\"test-case-e\"}\n                                >\n                                <Popover content={content} visible={visible && this.state.MouseIn}\n                                         zIndex={2001}>\n                                    <Tag icon={CaseList[type].icon} color={CaseList[type].color}>\n                                        #{this.props.caseIndex} {CaseList[type].text}\n                                    </Tag>\n                                </Popover>\n                            </span>\n                            )\n                        case \"tag-simple\":\n                            return (\n                                <Tooltip title={CaseList[type].textAll}>\n                                    <Tag color={CaseList[type].tagColor} className={\"tag-simple\"}>\n                                        {CaseList[type].text}\n                                    </Tag>\n                                </Tooltip>\n                            )\n\n                        case \"text\":\n                            return (\n                                <Title\n                                    level={ck(this.props.textLevel, 5)}\n                                    type={CaseList[type].type}\n                                    className={\"TestCase-text\"}\n                                >\n                                    {CaseList[type].textAll + (this.props.append !== undefined ? this.props.append : \"\")}\n                                </Title>\n                            )\n                        case \"index\":\n                            return (\n                                <span\n                                    onMouseEnter={() => {\n                                        this.setState({MouseIn: true})\n                                    }}\n                                    onMouseLeave={() => {\n                                        this.setState({MouseIn: false})\n                                    }}\n                                    className={\"test-case\"}\n                                >\n                                        <Popover content={content} visible={visible && this.state.MouseIn}\n                                                 zIndex={2001}>\n                                             <Tag color={CaseList[type].color}> #{this.props.caseIndex} </Tag>\n                                        </Popover>\n                                    </span>\n                            )\n                    }\n                    return undefined\n                })}\n            </>\n        )\n    }\n}\n\nexport default withTranslation()(TestCase)\n","export default function deepClone(obj: any) {\n    const _toString = Object.prototype.toString;\n    // null, undefined, non-object, function\n    if (!obj || typeof obj !== 'object') {\n        return obj;\n    }\n    // DOM Node\n    if (obj.nodeType && 'cloneNode' in obj) {\n        return obj.cloneNode(true);\n    }\n    // Date\n    if (_toString.call(obj) === '[object Date]') {\n        return new Date(obj.getTime());\n    }\n    // RegExp\n    if (_toString.call(obj) === '[object RegExp]') {\n        let flags = [];\n        if (obj.global) {\n            flags.push('g');\n        }\n        if (obj.multiline) {\n            flags.push('m');\n        }\n        if (obj.ignoreCase) {\n            flags.push('i');\n        }\n        return new RegExp(obj.source, flags.join(''));\n    }\n    let result = Array.isArray(obj) ? [] :\n        obj.constructor ? new obj.constructor() : {};\n    for (const key in obj) {\n        result[key] = deepClone(obj[key]);\n    }\n    return result;\n}","import {\n    forgetInfo,\n    loginInfo,\n    problemListQuery,\n    profileInfo,\n    registerInfo,\n    thirdPartyLogin,\n    updatePassWord,\n    verificationEmail\n} from '../../Type/types'\nimport request from \"./request\";\nimport apiAddress from \"./apiAddress\";\n\n\nconst cApi = {\n    // Config\n    async getCopyright() {\n        return request.get<string>('/site/getCopyright');\n    },\n\n\n    // User\n    async login(data: loginInfo) {\n        return request.post('/user/login', data)\n    },\n    async logout() {\n        return request.get('/user/logout')\n    },\n    async register(data: registerInfo) {\n        return request.post('/user/register', data)\n    },\n    async forgetPassword(data: forgetInfo) {\n        return request.post('/user/forgetPassword', data)\n    },\n    async getProfile() {\n        return request.get(\"/user/getProfile\")\n    },\n    async updateProfile(data: profileInfo) {\n        return request.post('/user/updateProfile', data)\n    },\n    async updatePassword(data: updatePassWord) {\n        return request.post('/user/updatePassword', data)\n    },\n    async updateEmail(data: any) {\n        return request.post(\"/user/updateEmail\", data)\n    },\n    async sendVerificationEmail(data: verificationEmail) {\n        return request.post('/user/sendVerificationEmail', data)\n    },\n    async resetPassword(data: any) {\n        return request.post('/user/resetPassword', data)\n    },\n    async getCaptcha() {\n        return request.get(\"/user/getCaptcha\")\n    },\n    async isExist(data: any) {\n        return request.get(\"/user/isExist\", data)\n    },\n    async queryParticipateContest() {\n        return request.get(\"/user/queryParticipateContest\")\n    },\n\n\n    // 第三方登录相关\n    async thirdPartyLogin(data: thirdPartyLogin) {\n        // await sleep(2000)\n        // return Promise.resolve({\n        //     thirdParty: \"SDUCAS\",\n        //     sduRealName: \"XXX\",\n        //     sduId: \"2018XXXXXXXX\",\n        //     user: null,\n        //     token: \"1111111\"\n        // })\n        return request.get('/user/thirdPartyLogin', data)\n    },\n    async thirdPartyUnbinding(data: { thirdParty: string }) {\n        return request.get(\"/user/thirdPartyUnbinding\", data)\n    },\n    //// 注册新账号并绑定已有账号\n    async thirdPartyRegister(data: any) {\n        return request.post(\"/user/thirdPartyRegister\", data)\n    },\n    //// 绑定已有账号\n    async thirdPartyBinding(data: any) {\n        return request.post(\"/user/thirdPartyBinding\", data)\n    },\n\n\n    // 文件相关\n    async uploadFile(data: any) {\n        return request.post('/filesys/uploadFiles', data, {\n            headers: {\"Content-Type\": \"multipart/form-data\"}\n        });\n    },\n    async uploadSingleFile(data: any) {\n        return request.post('/filesys/upload', data, {\n            headers: {\"Content-Type\": \"multipart/form-data\"}\n        });\n    },\n    async getFileByMD5(data: { md5: string }) {\n        return request.get(\"/filesys/queryByMd5\", data)\n    },\n    getFileDownloadUrl(id: string, name: string) {\n        return apiAddress().CLIENT_SERVER + \"/api/filesys/download/\" + id + \"/\" + name\n    },\n\n    // 比赛相关\n    async getContestList(data: any) {\n        return request.get(\"/contest/list\", data)\n    },\n    async invalidateContestSubmission(data: { submissionId: string, contestId: string }) {\n        return request.get(\"/contest/invalidateSubmission\", data)\n    },\n    async getUpcomingContest(data: any) {\n        return request.get(\"/contest/queryUpcomingContest\", data)\n    },\n    async getContestProblem(data: { contestId: string, problemCode: string }) {\n        return request.get(\"/contest/queryProblem\", data)\n    },\n    async getContestAcProblem(data: { contestId: string }) {\n        return request.get(\"/contest/queryACProblem\", data)\n    },\n    async participateContest(data: { contestId: string, password?: string }) {\n        return request.post(\"/contest/participate\", data)\n    },\n    async submitContestProblem(data: { contestId: string } & any) {\n        return request.post(\"/contest/createSubmission\", data)\n    },\n    async getContestInfo(data: { contestId: string }) {\n        return request.get(\"/contest/query\", data)\n    },\n    async getContestSubmissionList(data: any) {\n        return request.get(\"/contest/listSubmission\", data)\n    },\n    async rejudgeInContest(data: { contestId: string, submissionIds: string[] }) {\n        return request.post(\"/contest/rejudge\", data)\n    },\n    async getContestSubmissionInfo(data: { contestId: string, submissionId: string }) {\n        return request.get(\"/contest/querySubmission\", data)\n    },\n    async getRank(data: { contestId: string }) {\n        return request.get(\"/contest/rank\", data)\n    },\n    async submitInContest(data: { contestId: string } & any) {\n        return request.post(\"/contest/createSubmission\", data)\n    },\n    async getContestReport(data: any) {\n        return request.post(\"/contest/comprehensiveReport\", data)\n    },\n\n\n    // 比赛问答\n    async createQuestion(data: { contestId: string, title: string, message: string }) {\n        return request.post(\"/contest/createQuestion\", data)\n    },\n    async replyQuestion(data: { contestId: string, message: string, rootId: string, parentId: string }) {\n        return request.post(\"/contest/reply\", data)\n    },\n    async deleteQuestion(data: { clarificationId: string }) {\n        return request.get(\"/contest/delete\", data)\n    },\n    async getQuestionList(data: { contestId: string }) {\n        return request.get(\"/contest/listQuestion\", data)\n    },\n    async getQuestionDetail(data: { clarificationId: string }) {\n        return request.get(\"/contest/questionDetail\", data)\n    },\n    async publicQuestion(data: { clarificationId: string }) {\n        //// TODO 此处正确性未知\n        return request.post(\"/contest/publicQuestion\", data)\n    },\n\n\n    // 公告相关\n    async getAnnouncementList(data: any) {\n        data['filter'] = \"default\"\n        return request.get(\"/notice/list\", data)\n    },\n    async getAnnouncement(data: any) {\n        return request.get(\"notice/query\", data)\n    },\n\n\n    // 提交相关\n    async rejudge(data: string[]) {\n        return request.post(\"/submit/rejudge\", data)\n    },\n    async getSubmissionInfo(data: { submissionId: string }) {\n        return request.get(\"/submit/query\", data)\n    },\n    async getSubmissionList(data: any) {\n        return request.get(\"/submit/list\", data)\n    },\n    async getACProblem() {\n        return request.get(\"/submit/queryACProblem\")\n    },\n    async invalidateSubmission(data: { submissionId: string }) {\n        return request.get(\"/submit/invalidateSubmission\", data)\n    },\n    async submit(data: {\n        problemCode: string,\n        judgeTemplateId: string,\n        code?: string\n        zipFileId?: string\n    }) {\n        return request.post(\"/submit/create\", data)\n    },\n\n\n    // 题目相关\n    async getProblemList(data: problemListQuery) {\n        return request.get(\"/problem/list\", data)\n    },\n    async getProblemInfo(data: { problemCode: string, descriptionId?: string }) {\n        return request.get(\"/problem/query\", data)\n    },\n\n\n    // 用户组相关\n    async getGroupInfo(data: { groupId: string }) {\n        return request.get(\"/group/query\", data)\n    },\n    async getMyGroup() {\n        return request.get(\"/group/my\")\n    },\n    async getGroupList(data: any) {\n        return request.get(\"/group/page\", data)\n    },\n    async joinGroupApply(data: { groupId: string }) {\n        return request.get(\"/group/apply\", data)\n    },\n    async quitGroup(data: { groupId: string }) {\n        return request.get(\"/group/quit\", data)\n    },\n\n\n    // 题单相关\n    async getProblemSetInfo(data: any) {\n        return request.post(\"/ps/problem_set/info_c\", data)\n    },\n    // 获取单个题目信息\n    async getProblemSetProblem(data: any) {\n        return request.post(\"/ps/problem_set/pro_info\", data)\n    },\n\n    // 提交题目答案\n    async submitProblemSetProblem(data: any) {\n        return request.post(\"/ps/answer_sheet/answer\", data)\n    },\n    // 获取答题卡信息\n    async getProblemSetProblemAS(data: any) {\n        return request.post(\"/ps/answer_sheet/info\", data)\n    },\n    // 标记客观题选项\n    async markObjectiveProblem(data: any) {\n        return request.post(\"/ps/answer_sheet/mark\", data)\n    },\n    // 标记题目\n    async updateProblemSetProblemCollect(data: any) {\n        return request.post(\"/ps/answer_sheet/collect\", data)\n    },\n\n    // 编程题提交列表\n    async getProblemSetSubmissionList(data: any) {\n        return request.post(\"/ps/answer_sheet/submissionList\", data)\n    },\n    // 编程题提交详情\n    async getProblemSetSubmissionInfo(data: any) {\n        return request.post(\"/ps/answer_sheet/submissionInfo\", data)\n    },\n    // 题单交卷\n    async finishProblemSet(data: any) {\n        return request.post(\"/ps/answer_sheet/finish\", data)\n    },\n\n    // 获取评阅列表\n    async getJudgeList(data: any) {\n        return request.post(\"/ps/judge/list\", data)\n    },\n    // 获取评阅信息\n    async getJudgeInfo(data: any) {\n        return request.post(\"/ps/judge/info\", data)\n    },\n    // 更新评阅信息\n    async updateJudgeInfo(data: any) {\n        return request.post(\"/ps/judge/add\", data)\n    },\n    // 显示题单总结信息，用于显示 Rank\n    async getProblemSummary(data: any) {\n        return request.post(\"/ps/summary/summary\", data)\n    },\n    // 获取榜单的题目预览数据\n    async getProblemSetProPreview(data: any) {\n        return request.post(\"/ps/summary/preview\", data)\n    },\n    // 获取题单的标签列表\n    async getProblemSetLabelList(data: any) {\n        return request.post(\"/ps/problem_set/key\", data)\n    },\n    // 获取题单列表\n    async getProblemSetList(data: any) {\n        return request.post(\"/ps/problem_set/search\", data)\n    },\n    // 获取题单公开信息\n    async getProblemSetPublic(data: any) {\n        return request.post(\"/ps/problem_set/public\", data)\n    },\n\n    //   ---- 公共数据集 -----\n    // 新增一个公共数据\n    async addPublicCheckpoints(data: any) {\n        return request.post(\"/problem/appendCheckpoints\", data)\n    },\n    // 列出题目的检查点\n    async getPublicCheckpoints(data: { problemId: number }) {\n        return request.get(\"/problem/listCheckpoints\", data)\n    },\n    // 删除题目的检查点\n    async delPublicCheckpoints(data: any) {\n        return request.post(\"/problem/deleteCheckpoints\", data)\n    },\n\n    // 新增一个公共数据\n    async addPsPublicCheckpoints(data: any) {\n        return request.post(\"/ps/answer_sheet/pbcp/add\", data)\n    },\n    // 列出题目的检查点\n    async getPsPublicCheckpoints(data: any) {\n        return request.post(\"/ps/answer_sheet/pbcp/get\", data)\n    },\n    // 删除题目的检查点\n    async delPsPublicCheckpoints(data: any) {\n        return request.post(\"/ps/answer_sheet/pbcp/del\", data)\n    },\n}\n\nexport default cApi;\n","export default function apiAddress() {\n    // const port = \"9005\"\n    const port = \"8889\"\n    //jym的测试端口\n    // const port = \"20000\"\n    //sjq开的端口\n    // const port = \"20001\"\n\n    // if (process.env.NODE_ENV === 'development') return {\n    //     CLIENT_SERVER: 'http://api.oj.cs.sdu.edu.cn:8080',\n    //     MANAGE_SERVER: 'http://api.oj.cs.sdu.edu.cn:8080',\n    //     EXAM_SERVER: 'http://api.oj.cs.sdu.edu.cn:8080',\n    //     FRONT_SERVER: 'http://oj.cs.sdu.edu.cn:3000',\n    //     SOCKET_SERVER: \"ws://api.oj.cs.sdu.edu.cn:8080\"\n    // }\n    if (process.env.NODE_ENV === 'development') return {\n        CLIENT_SERVER: 'https://oj.cs.sdu.edu.cn:' + port,\n        MANAGE_SERVER: 'https://oj.cs.sdu.edu.cn:' + port,\n        EXAM_SERVER: 'https://oj.cs.sdu.edu.cn:' + port,\n        FRONT_SERVER: 'https://oj.cs.sdu.edu.cn:3000',\n        SOCKET_SERVER: 'wss://oj.cs.sdu.edu.cn:' + port\n    }\n    // return {\n    //     CLIENT_SERVER: 'http://exam.yhf2000.cn:9000',\n    //     MANAGE_SERVER: 'http://exam.yhf2000.cn:9000',\n    //     EXAM_SERVER: 'http://exam.yhf2000.cn:9000',\n    //     FRONT_SERVER: 'http://exam.yhf2000.cn',\n    //     SOCKET_SERVER: \"ws://exam.yhf2000.cn:9000\"\n    // }\n    return {\n        CLIENT_SERVER: 'https://oj.qd.sdu.edu.cn',\n        MANAGE_SERVER: 'https://oj.qd.sdu.edu.cn',\n        EXAM_SERVER: 'https://oj.qd.sdu.edu.cn',\n        FRONT_SERVER: 'https://oj.qd.sdu.edu.cn',\n        SOCKET_SERVER: \"wss://oj.qd.sdu.edu.cn\"\n    }\n}\n","import {Role} from \"../Type/Iuser\";\n\n\n/**\n * 判断用户当前权限是否满足使用条件\n * @param roles 用户权限\n * @param minRole 最小限制权限\n */\nexport default function judgeAuth(roles: Role[] | undefined, minRole: Role[]): boolean {\n    if (roles === undefined) return false\n    let ok = false;\n    roles.map(v => {\n        if (minRole.includes(v)) ok = true;\n        return undefined\n    })\n    return ok;\n}\n","import {withTranslation} from \"react-i18next\";\nimport {ReloadOutlined} from \"@ant-design/icons\";\nimport {Button, message} from \"antd\";\nimport React from \"react\";\nimport {ck} from \"../../../Utils/empty\";\n\nconst ReJudge = (props: any) => {\n    return (\n        <>\n            <Button\n                icon={<ReloadOutlined/>}\n                onClick={() => {\n                    const RejudgeNumber = ck(props.data.length, props.data?.submissionIds?.length)\n                    if (RejudgeNumber === 0) {\n                        message.error(props.t(\"noItemSelected\"))\n                    } else {\n                        props.API(props.data).then((res: any) => {\n                            message.success(props.t(\"retesting\") + RejudgeNumber + props.t(\"submissionInProgress\"))\n                            props.afterSuccess !== undefined && props.afterSuccess()\n                        })\n                    }\n                }}\n            >\n                {props.t(\"rejudging\")}\n            </Button>\n        </>\n    )\n}\n\nexport default withTranslation()(ReJudge)\n","export function initLanguage() {\n    let lang = localStorage.getItem('language') || navigator.language // 获取浏览器的语言环境，兼容IE的写法\n    if (lang) {\n        lang = lang.substr(0, 2).toLowerCase() // 截取前两位字符，并转化为小写\n        return lang\n    } else {\n        return 'en'\n    }\n}\n","import {\n    checkPointData,\n    examID,\n    groupInfo,\n    groupListQuery,\n    judgeTemplate,\n    loginInfo,\n    modifyProblemsCheckPoint,\n    problemBasic,\n    problemDescription,\n    problemListQuery,\n    query,\n    studentBasic,\n    updateUserStates,\n    userListQuery\n} from '../../Type/types'\nimport {SubmissionQueryType} from \"../../Type/IManage\";\n\nimport request from \"./request\";\nimport {IAddCodesToHub} from \"../../Type/IAnti-cheating\";\n\nconst mApi = {\n    // 配置相关\n    async getCopyright() {\n        return request.get('/site/getCopyright');\n    },\n    // ---------------------- 用户相关 ----------------------\n    /* 通过组号获取比赛列表 */\n    async getContestListByGroupId(params: query) {\n        return request.get('/contest/list', params)\n    },\n\n    /* 通过组号获取组内学生 */\n    async getStudentListByGroupId(params: groupListQuery) {\n        return request.get('/group/query', params)\n    },\n    // 查询用户列表\n    async getUserList(params: userListQuery) {\n        return request.get('/manage/user/list', params);\n    },\n    // 更改用户信息\n    async updateUserInfo(data: studentBasic) {\n        return request.post('/manage/user/update', data);\n    },\n    // 更改用户密码\n    async updateUserPasswd(data: loginInfo) {\n        return request.post('/manage/user/update', data);\n    },\n    // 批量添加用户\n    addUsers: async function (data: (studentBasic & { password: string })[]) {\n        return request.post('/manage/user/addUsers', data);\n    },\n    // 删除用户\n    deleteUsers: async function (data: string[]) {\n        return request.post('/manage/user/delete', data);\n    },\n    // ---------------------- 题目相关 ----------------------\n    // 查询题目列表\n    getProblemList: async function (params: problemListQuery) {\n        return request.get('/manage/problem/list', params);\n    },\n    // 查询题目\n    getProblem: async function (params: { problemCode: string }) {\n        return request.get('/manage/problem/query', params);\n    },\n    // 更新题目信息\n    updateProblemInfo: async function (data: problemBasic) {\n        return request.post('/manage/problem/update', data);\n    },\n    // 创建题目\n    createProblem: async function (data: problemBasic) {\n        return request.post('/manage/problem/create', data);\n    },\n    // ---------------------- 题面相关 ----------------------\n    // 查询题目的描述列表\n    getProblemDescriptionList: async function (params: { problemCode: string }) {\n        return request.get('/manage/problem/queryDescriptionList', params);\n    },\n    // 查询题目描述\n    getProblemDescription: async function (params: { descriptionId: number }) {\n        return request.get('/manage/problem/queryDescription', params);\n    },\n    // 更新题面描述\n    updateDescription: async function (data: problemDescription) {\n        return request.post('/manage/problem/updateDescription', data);\n    },\n    // 创建新题面描述\n    createDescription: async function (data: problemDescription) {\n        return request.post('/manage/problem/createDescription', data);\n    },\n    deleteDescription: async function (params: { id: number }) {\n        return request.get('/manage/problem/deleteDescription', params);\n    },\n    // ---------------------- 测试点相关 ----------------------\n    // checkpoint单点上传\n    uploadSingleCheckpoint: async function (data: checkPointData) {\n        return request.post('/checkpoint/upload', data);\n    },\n    // checkpoint批量上传\n    uploadCheckpointFiles: async function (data: any) {\n        return request.post('/checkpoint/uploadFiles', data,\n            {headers: {\"Content-Type\": \"multipart/form-data\"}}\n        );\n    },\n    // 获取题目的checkpoint列表\n    getCheckpointList: async function (problemCode: string) {\n        return request.get('/manage/checkpoint/list', {problemCode});\n    },\n    // 获取checkpoint详情\n    getCheckpointPreview: async function (checkpointId: string) {\n        return request.get('/checkpoint/query', {checkpointId});\n    },\n    // 全量更新题目的checkpoint\n    updateProblemCheckpoints: async function (data: modifyProblemsCheckPoint) {\n        return request.post('/manage/problem/update', data);\n    },\n    // ---------------------- 比赛相关 ----------------------\n    // 获取比赛列表\n    getContestList: async function (params: query) {\n        return request.get('/manage/contest/page', params);\n    },\n    // 获取单个比赛详情\n    getContest: async function (params: { contestId: number }) {\n        return request.get('/manage/contest/query', params);\n    },\n    // TODO\n    // 更新比赛信息\n    updateContest: async function (data: {}) {\n        return request.post('/manage/contest/update', data);\n    },\n    // 创建比赛\n    createContest: async function (data: {}) {\n        return request.post('/manage/contest/create', data);\n    },\n    // TODO\n    // 综合报表\n    exportComprehensive: async function (data: {}) {\n        return new Promise((resolve, reject) => {\n            request.post<any>('/manage/contest/exportComprehensiveReport', data, {responseType: 'blob'}).then(ret => {\n                resolve(ret);\n                const blob = new Blob([ret.data], {type: ret.headers['content-type']});\n                const elink = document.createElement('a');\n                const filename = new Date().getTime().toString();\n                if ('download' in elink) {\n                    elink.download = filename;\n                    elink.href = URL.createObjectURL(blob);\n                    elink.click();\n                    URL.revokeObjectURL(elink.href);\n                } else {\n                    // window.navigator.msSaveBlob(blob, filename);\n                }\n            }, err => (reject(err)));\n        })\n    },\n    // ----------------- 评测模板相关 -------------------\n    // 查询单个评测模板\n    getOneTemplate: async function (params: any) {\n        return request.get('/manage/judgetemplate/query', params);\n    },\n    // 查询多页评测模板\n    pageTemplateList: async function (params: groupListQuery) {\n        return request.get('/manage/judgetemplate/page', params);\n    },\n    getJudgeTemplateList: async function (params: { type: number, problemCode: string }) {\n        return request.get('/manage/judgetemplate/list', params);\n    },\n    // 创建评测模板\n    createTemplate: async function (data: judgeTemplate) {\n        return request.post('/manage/judgetemplate/create', data);\n    },\n    // 更新评测模板\n    updateTemplate: async function (data: judgeTemplate) {\n        return request.post('/manage/judgetemplate/update', data);\n    },\n    // 评测模板title右模糊匹配\n    queryTemplateTitle: async function (title: string) {\n        return request.get('/manage/judgetemplate/listByTitle', {title});\n    },\n    // ----------------- 评测模板相关 -------------------\n    // 单文件上传\n    // singleUpload: async function (data: { file: any }) {\n    //     return request.post('/filesys/upload', data);\n    // },\n    // 多文件上传\n    // multiUpload: async function (data: { files: any }) {\n    //     return request.post('/filesys/uploadFiles', data);\n    // },\n    // 用 md5 查文件\n    // checkMD5: async function (md5: string) {\n    //     return request.get('/filesys/queryByMd5', {md5});\n    // },\n    // 以zip包下载多个文件\n    zipDownload: async function (data: any, filename?: string) {\n        return request.getZipFile(\"/filesys/zipDownload\", data, {}, filename)\n    },\n    // 以较低地压缩率，较高的速度完成压缩\n    zipDownloadFast: async function (data: any, filename?: string) {\n        return request.getZipFile(\"/filesys/zipDownloadWithoutCompression\", data, {}, filename)\n    },\n    /* ************ group ****************** */\n    createGroup: async function (data: groupInfo) {\n        return request.post('/manage/group/create', data);\n    },\n    updateGroup: async function (data: any) {\n        return request.post('/manage/group/update', data);\n    },\n    getGroupDetail: async function (params: { groupId: number }) {\n        return request.get('/manage/group/query', params);\n    },\n    getGroupList: async function (params: groupInfo) {\n        return request.get('/manage/group/page', params);\n    },\n    updateUserStatus: async function (data: updateUserStates) {\n        return request.post('/manage/group/updateUserStatus', data);\n    },\n    addUsersToGroup: async function (data: { groupId: number, usernames: string[] }) {\n        return request.post('/manage/group/addUser', data);\n    },\n    deleteGroup: async function (params: { groupId: number }) {\n        return request.get('/manage/group/delete', params);\n    },\n    queryGroupTitle: async function (params: { title: string }) {\n        return request.get('/manage/group/listByTitle', params);\n    },\n    /* ************ EXAM ****************** */\n    getExamList: async function (data: any) {\n        return request.post(\"/manage/exam/getInfo\", data);\n    },\n    getExamInfo: async function (examId: examID) {\n        return request.get(\"/manage/exam/getInfo/\" + examId)\n    },\n    createExam: async function (data: any) {\n        return request.post(\"/manage/exam/create\", data)\n    },\n    updateExam: async function (data: any) {\n        return request.post(\"/manage/exam/update\", data)\n    },\n    judgeExam: async function (examId: examID) {\n        return request.get(\"/manage/exam/judge/\" + examId)\n    },\n    getExamSubmission: async function (data: SubmissionQueryType & { examId: examID }) {\n        return request.post(\"/manage/exam/querySubmissionList\", data)\n    },\n    /* ************ 选择题 ****************** */\n    getChoiceList: async function (data: any) {\n        return request.post(\"/manage/exam/choiceProblem/listChoiceProblem\", data)\n    },\n    createChoiceProblem: async function (data: any) {\n        return request.post(\"/manage/exam/choiceProblem/createChoiceProblem\", data)\n    },\n    updateChoiceProblem: async function (data: any) {\n        return request.post(\"/manage/exam/choiceProblem/updateChoiceProblem\", data)\n    },\n    getChoiceInfo: async function (data: string) {\n        return request.get(\"/manage/exam/choiceProblem/queryChoiceProblem?problemCode=\" + data)\n    },\n    getChoiceProblem: async function (params: { problemCode: string }) {\n        return request.get(\"/manage/exam/choiceProblem/queryChoiceProblem\", params)\n    },\n    /* ************ 公告 ****************** */\n    createAnnouncement: async function (data: any) {\n        return request.post(\"/manage/notice/create\", data)\n    },\n    updateAnnouncement: async function (data: any) {\n        return request.post(\"/manage/notice/update\", data)\n    },\n    async getAnnouncementList(data: any) {\n        data['filter'] = \"default\"\n        return request.get(\"/manage/notice/list\", data)\n    },\n    deleteAnnouncement: async function (data: any) {\n        return request.get(\"/manage/notice/delete\", data)\n    },\n    // ----------------- 查重相关 -------------------\n    // 批量添加代码到代码仓库\n    async addCodesToHub(data: IAddCodesToHub[]) {\n        return request.post(\"/manage/codesim/-\", data)\n    },\n\n    // ----------------- 主观题相关 -------------------\n    // async getSubjectiveList(data: any[]) {\n    //     return request.get(\"/manage/subjectiveproblem/list\", data)\n    // },\n    // async createSubjective(data: any) {\n    //     return request.post(\"/manage/subjectiveproblem/create\", data)\n    // },\n    // async updateSubjective(data: any) {\n    //     return request.post(\"/manage/subjectiveproblem/update\", data)\n    // },\n    // async getSubjectiveInfo(data: any) {\n    //     return request.get(\"/manage/subjectiveproblem/query\", data)\n    // },\n\n    // ----------------- 题单相关 -------------------\n    // async getProblemSetList(data: any) {\n    //     return request.post(\"/manage/problemset/list\", data)\n    // },\n    // async createProblemSet(data: any){\n    //     return request.post(\"/manage/problemset/create\", data)\n    // },\n    // async updateProblemSet(data: any){\n    //     return request.post(\"/manage/problemset/update\", data)\n    // },\n    // async getProblemSetInfo(data: any){\n    //     return request.get(\"/manage/problemset/query\", data)\n    // },\n    // -------------- 题单中的题组相关 ------------------\n    // async getProblemSetGroupList(data: any){\n    //     return request.get(\"\", data)\n    // },\n    // async createProblemSetGroup(data: any){\n    //     return request.post(\"/manage/problemset/addProblemGroup\", data)\n    // },\n    // async updateProblemSetGroup(data: any){\n    //     return request.post(\"/manage/problemset/updateProblemGroup\", data)\n    // },\n    // async getProblemSetGroupInfo(data: any){\n    //     return request.get(\"/manage/problemset/queryProblemGroup\", data)\n    // },\n    // async deleteProblemSetGroup(data: any){\n    //     return request.post(\"/manage/problemset/deleteProblem\", data)\n    // },\n    // async updateOrderProblemSetGroup(data: any){\n    //     return request.post(\"/manage/problemset/updateOrder\", data)\n    // },\n    // -------------- 新版题单组件相关 ------------------\n    async createProblemGroup(data: any) {\n        return request.post(\"/ps/group/add\", data)\n    },\n    async editProblemGroup(data: any) {\n        return request.post(\"/ps/group/edit\", data)\n    },\n    async getProblemGroupInfo(data: any) {\n        return request.post(\"/ps/group/info\", data)\n    },\n    async getProblemGroupList(data: any) {\n        return request.post(\"/ps/group/list\", data)\n    },\n    async getProblemGroupSearch(data: any) {\n        return request.post(\"/ps/group/search\", data)\n    },\n\n    async createObjective(data: any) {\n        return request.post(\"/ps/objective/add\", data)\n    },\n    async editObjective(data: any) {\n        return request.post(\"/ps/objective/edit\", data)\n    },\n    async getObjective(data: any) {\n        return request.post(\"/ps/objective/info\", data)\n    },\n\n    async createSubjective(data: any) {\n        return request.post(\"/ps/subjective/add\", data)\n    },\n    async editSubjective(data: any) {\n        return request.post(\"/ps/subjective/edit\", data)\n    },\n    async getSubjective(data: any) {\n        return request.post(\"/ps/subjective/info\", data)\n    },\n\n    async getProblemSetList(data: any) {\n        return request.post(\"/ps/problem_set/list\", data)\n    },\n    async getProblemSetInfo(data: any) {\n        return request.post(\"/ps/problem_set/info\", data)\n    },\n    async createProblemSet(data: any) {\n        return request.post(\"/ps/problem_set/add\", data)\n    },\n    async editProblemSet(data: any) {\n        return request.post(\"/ps/problem_set/edit\", data)\n    },\n\n    // 公共数据集相关\n    // 更新公共数据集测试点信息\n    async updatePublicCheckpoints(data: any) {\n        return request.post(\"/manage/problem/updateCheckpoints\", data)\n    },\n    // 重新排序测试点\n    async reArrangeCheckpoints(data: any) {\n        return request.post(\"/manage/problem/rearrangeCheckpoints\", data)\n    },\n    // 更新公共数据集测试点信息\n    async updatePsPublicCheckpoints(data: any) {\n        return request.post(\"/ps/answer_sheet/pbcp/upd\", data)\n    },\n    // 重新排序测试点\n    async reArrangePsCheckpoints(data: any) {\n        return request.post(\"/ps/answer_sheet/pbcp/reArr\", data)\n    }\n\n\n}\n\nexport default mApi;\n","import moment from \"moment\";\n\n\nexport function TimeRangeState(start: number | string, end: number | string) {\n    if (typeof start === \"string\") start = parseInt(start)\n    if (typeof end === \"string\") end = parseInt(end)\n    if (start > Date.now()) return \"wait\"\n    if (end < Date.now()) return \"end\"\n    return \"running\"\n}\n\nexport function getDiffSecond(start: number | string, end: number | string) {\n    if (typeof start === \"string\") start = parseInt(start)\n    if (typeof end === \"string\") end = parseInt(end)\n    const Start: any = moment(start)\n    const End: any = moment(end)\n    return End.diff(Start, \"second\")\n}\n\nexport function TimeDiff(start: number | string, end: number | string, d: string = \"天\", h: string = \"时\", m: string = \"分\", s: string = \"秒\") {\n    if (typeof start === \"string\") start = parseInt(start)\n    if (typeof end === \"string\") end = parseInt(end)\n    const diffSecond: number = getDiffSecond(start, end)\n    let res = \"\"\n    if (Math.floor(diffSecond / 3600 / 24) !== 0)\n        res += Math.floor(diffSecond / 3600 / 24).toString() + d\n    if (Math.floor((diffSecond % (3600 * 24)) / 3600) !== 0)\n        res += Math.floor((diffSecond % (3600 * 24)) / 3600).toString() + h\n    if (Math.floor((diffSecond % 3600) / 60) !== 0)\n        res += Math.floor((diffSecond % 3600) / 60).toString() + m\n    if (diffSecond % 60 !== 0)\n        res += (diffSecond % 60).toString() + s\n    if (res === \"\") res = \"0\" + s\n    return res\n}\n\nexport function unix2Time(time: number | string) {\n    if (typeof time === \"string\") time = parseInt(time)\n    return moment(time).format('YYYY-MM-DD HH:mm:ss')\n}\n\nexport function unix2Date(time: number | string) {\n    if (typeof time === \"string\") time = parseInt(time)\n    return moment(time).format('YYYY-MM-DD')\n}","import i18n from \"i18next\";\nimport {initReactI18next} from 'react-i18next';\nimport enUS from 'antd/lib/locale/en_US';\nimport zhCN from 'antd/lib/locale/zh_CN';\nimport {Locale} from \"antd/lib/locale-provider\";\nimport {initLanguage} from \"../Utils/initLanguage\";\nimport moment from \"moment/moment\";\n\ninterface ILanguage {\n    id: string\n    name: string\n    code: string,\n    time: string\n}\n\nexport const language: ILanguage[] = [\n    {\n        id: \"en\",\n        name: \"English\",\n        code: \"en_US\",\n        time: \"en\"\n    },\n    {\n        id: \"zh\",\n        name: \"简体中文\",\n        code: \"zh_CN\",\n        time: \"zh-cn\"\n    }\n]\n\nexport const languageMap: { [key: string]: Locale } = {\n    \"zh\": zhCN,\n    \"en\": enUS\n}\n\nconst defLang = initLanguage();\nconst id_ = language.findIndex((item) => {\n    return item.id === defLang\n})\nmoment.locale(language[id_].time);\n\ni18n.use(initReactI18next) //init i18next\n    .init({\n        //引入资源文件\n        resources: {\n            en: {\n                translation: require(\"../Assert/lang/en.json\"),\n            },\n            zh: {\n                translation: require(\"../Assert/lang/zh.json\"),\n            }\n        },\n        //选择默认语言，选择内容为上述配置中的key，即en/zh\n        lng: defLang,\n        debug: false,\n        interpolation: {\n            escapeValue: false, // not needed for react as it escapes by default\n        },\n    })\n\nexport default i18n;\n","import React, {useEffect} from 'react';\nimport useWebSocket, {ReadyState} from 'react-use-websocket';\nimport apiAddress from \"../../Utils/API/apiAddress\";\n\nexport interface IWebSocket {\n    queryList: string[]\n    dataHandle: any\n    open: boolean\n}\n\nexport const SyncJudging = (props: IWebSocket) => {\n    const {sendMessage, lastMessage, readyState} = useWebSocket(\n        apiAddress().SOCKET_SERVER + \"/ws/submission\", {share: false}, props.open\n    );\n\n    useEffect(() => {\n        if (lastMessage !== null) {\n            if (lastMessage.data.length > 2) {\n                const data = JSON.parse(lastMessage.data)\n                if (data instanceof Array && data[0] instanceof Array) {\n                    for (const x of data) props.dataHandle(x)\n                } else {\n                    props.dataHandle(JSON.parse(data))\n                }\n            }\n        }\n    }, [lastMessage]);\n\n    useEffect(() => {\n        if (props.open && readyState === ReadyState.OPEN) {\n            sendMessage(JSON.stringify(props.queryList))\n        }\n    }, [props.queryList, readyState])\n\n    // const connectionStatus = {\n    //     [ReadyState.CONNECTING]: '连接中',\n    //     [ReadyState.OPEN]: '已连接',\n    //     [ReadyState.CLOSING]: '关闭中',\n    //     [ReadyState.CLOSED]: '已关闭',\n    //     [ReadyState.UNINSTANTIATED]: '未知',\n    // }[readyState];\n\n    return (\n        <>\n            {/*<span>(连接状态：{connectionStatus})</span>*/}\n        </>\n    );\n};\n","import React, {Component} from \"react\";\nimport {Spin} from \"antd\";\n\nexport default class Loading extends Component<any, any> {\n    render() {\n        return (\n            <div className={\"page-center\"}>\n                <Spin delay={500} size={\"large\"}> </Spin>\n            </div>\n        )\n    }\n}","import {lazy} from \"react\";\nimport {UrlPrefix} from \"../constValue\";\n\n\nexport interface IBaseRouter {\n    id: number\n    path: string\n    exact?: boolean\n    component?: any\n}\n\nexport interface IRouter extends IBaseRouter {\n    title_i18n: string\n    exact?: boolean\n    icon?: any\n    children?: IRouter[]\n}\n\n// 名称，是否为独立页面\nconst routerCLayoutData: any = [\n    [\"home\", false],\n    [\"problem\", false],\n    [\"contest\", false],\n    [\"problemSet\", false],\n    [\"problemSetPublic\", false],\n    [\"submission\", false],\n    [\"group\", false],\n    // 用户信息页面\n    [\"user\", true],\n    // 账户相关的单独页面\n    [\"login\", true],\n    [\"thirdPartyLogin\", true],\n    [\"resetpass\", true],\n    [\"test\", false],\n    [\"hws\", false],\n]\nlet routerCLayout: IBaseRouter[] = []\nlet num = 100;\nfor (const x of routerCLayoutData) {\n    num += 1;\n    routerCLayout.push({\n        id: num,\n        path: UrlPrefix + \"/\" + x[0],\n        exact: x[1],\n        component: lazy(() => import(\"../../Component/layout/CLayout\"))\n    })\n}\n\n\nexport const routerLayout: IBaseRouter[] = [\n    // Layout 大块\n    {\n        id: 0,\n        path: UrlPrefix + \"/manage\",\n        exact: false,\n        component: lazy(() => import('../../Component/layout/MLayout'))\n    },\n    {\n        id: 1,\n        path: UrlPrefix + \"/exam\",\n        exact: false,\n        component: lazy(() => import('../../Component/layout/ELayout'))\n    },\n    {\n        id: 4,\n        path: UrlPrefix,\n        exact: true,\n        component: lazy(() => import('../../Component/layout/CLayout'))\n    },\n    ...routerCLayout,\n    {\n        id: 14,\n        path: UrlPrefix + \"/error/time\",\n        exact: true,\n        component: lazy(() => import('../../Pages/Error/TimeError'))\n    },\n    {\n        id: 15,\n        path: UrlPrefix + \"/error/browser\",\n        exact: true,\n        component: lazy(() => import('../../Pages/Error/BrowserVersionError'))\n    },\n    // {\n    //     id: 998244353,\n    //     path: UrlPrefix + \"/summary/2022cxsjswysj\",\n    //     exact: true,\n    //     component: lazy(() => import('../../Pages/Temp/TSummary'))\n    // },\n    // {\n    //     id: 998244354,\n    //     path: UrlPrefix + \"/contestSubmissionCancel\",\n    //     exact: true,\n    //     component: lazy(() => import('../../Pages/Temp/TCancel'))\n    // },\n    // {\n    //     id: 16,\n    //     path: UrlPrefix + \"/review/:problemSetId/:problemGroup/:problemId/:userId\",\n    //     exact: false,\n    //     component: lazy(() => import('../../Pages/Client/Review'))\n    // },\n]\n\n\nexport function getRouterPath(router: any[], id: number) {\n    for (const x of router) {\n        if (x.id === id) return x.path\n    }\n    return ''\n}\n","import {Prism as SyntaxHighlighter} from 'react-syntax-highlighter';\nimport {darcula} from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport Paragraph from \"antd/lib/typography/Paragraph\";\nimport React from \"react\";\nimport {withTranslation} from \"react-i18next\";\n\n\nexport interface ICodeHighlight {\n    lang: string\n    code: string\n}\n\nconst CodeHighlight = (props: ICodeHighlight & any) => {\n    //  TODO  此处有 bug，该软件发布的版本过低，其依赖中包含有 bug\n    // 该 bug 由 wrapLines={true} wrapLongLines={true} 引起\n\n    return (\n        <>\n            <Paragraph\n                className={\"SyntaxHighlighter-Copy\"}\n                copyable={\n                    {\n                        tooltips: [props.t(\"Copy\"), props.t(\"Copied\")],\n                        text: props.code\n                    }}\n            />\n            <SyntaxHighlighter\n                language={props.lang}\n                style={darcula}\n                showLineNumbers={true}\n                // wrapLines={true}\n                // wrapLongLines={true}\n            >\n                {props.code}\n            </SyntaxHighlighter>\n        </>\n\n    );\n};\n\nexport default withTranslation()(CodeHighlight)","export type TestCaseType =\n    \"Pending\" | \"Running\" | \"Accepted\" |\n    \"WrongAnswer\" | \"TimeLimitExceeded\" | \"MemoryLimitExceeded\" |\n    \"RuntimeError\" | \"OutputLimitExceeded\"\n\nexport type RunningStateType = \"-4\" | \"-3\" | \"-2\" | \"-1\"\nexport type RunningResultType = \"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\" | \"9\" | \"99\"\nexport const RunningResultList = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"99\"]\n\nexport const SubmissionMap: any = {\n    \"-4\": \"Queueing\",\n    \"-3\": \"Compiling\",\n    \"-2\": \"Judging\",\n    \"-1\": \"End\",\n    \"0\": \"Pending\",\n    \"1\": \"Accepted\",\n    \"2\": \"TimeLimitExceeded\",\n    \"3\": \"MemoryLimitExceeded\",\n    \"4\": \"RuntimeError\",\n    \"5\": \"SystemError\",\n    \"6\": \"WrongAnswer\",\n    \"7\": \"PresentationError\",\n    \"8\": \"CompilationError\",\n    \"9\": \"OutputLimitExceeded\",\n    \"99\": \"Cancelled\"\n}\n\nexport enum TestCaseStates {\n    \"Pending\",\n    \"Running\",\n    \"Accepted\",\n    \"WrongAnswer\",\n    \"TimeLimitExceeded\",\n    \"MemoryLimitExceeded\",\n    \"RuntimeError\",\n    \"OutputLimitExceeded\",\n    \"CompilationError\",\n    \"PresentationError\",\n    \"SystemError\",\n    \"Queueing\",\n    \"Compiling\",\n    \"Judging\",\n    \"End\",\n    \"Cancelled\"\n}\n\n\nexport const StateList =\n    [\"Pending\", \"Running\", \"Accepted\", \"WrongAnswer\", \"TimeLimitExceeded\",\n        \"MemoryLimitExceeded\", \"RuntimeError\", \"OutputLimitExceeded\", \"CompilationError\",\n        \"PresentationError\", \"SystemError\", \"Queueing\", \"Compiling\", \"Judging\", \"End\", \"Cancelled\"]\n\n\nexport const langMap: any = {\n    \"C++11\": \"cpp\",\n    \"C11\": \"c\",\n    \"Java8\": \"java\",\n    \"Python3\": \"python\",\n    \"cpp11\": \"cpp\"\n}\n\nexport interface checkPointType {\n    RunningResult: RunningResultType\n    Score: number\n    Time: number\n    Memory: number\n}\n\nexport interface submissionInfoType {\n    timeLimit?: number\n    memoryLimit?: number\n    sumScore?: number\n    checkpointNum: number\n    checkpointResults: checkPointType[]\n    code: string | null\n    codeLength: number\n    gmtCreate?: string\n    gmtModified?: string\n    isPublic: number\n    judgeLog: string\n    judgeResult: number\n    judgeScore: number\n    judgeTemplateId: string\n    judgeTemplateTitle: string\n    judgeTemplateType: number\n    problemCode: string\n    problemId: string\n    problemTitle: string\n    submissionId: string\n    usedMemory: number\n    usedTime: number\n    userId: string\n    username: string\n    valid: number\n    zipFileId: string | null\n}\n\n// 对于分数：\n//          完全显示\n//          显示【未通过，部分通过，通过】对应【0分，部分分，满分】\n//          不显示\n// 对于测试点：\n//          完全显示\n//          显示【总测试点数量】与【第一个错误的测试点编号】\n//          不显示\nexport type displayType = \"show\" | \"partial\" | \"disable\"\n\nexport interface TopSubmissionInfoType {\n    title: string\n    TimeLimit?: number\n    MemoryLimit?: number\n    // 对分数的显示模式\n    scoreMod: displayType\n    sumScore?: number   // 在 scoreMod 不是 disable 时，需要提供题目的总分\n    // 对测试点数据的显示模式\n    testcaseMod: displayType\n    // 下载 testcase 的API\n    downloadAPI: any\n    // 请求 Submission 信息的 API\n    QuerySubmissionAPI: any\n    // 重测 API\n    RejudgeAPI?: any\n    // 取消成绩 API\n    InvalidateAPI?: any\n}\n\nexport interface RunningSubmissionInfo {\n    SubmissionId: string\n    TestCaseNumber: number\n    TestCaseInfo: any[]\n}\n\nexport interface SubmissionState {\n    TopSubmissionId?: string\n    TopSubmissionInfo?: TopSubmissionInfoType\n    SubmissionModalVis: boolean\n    submissionListInfo: {[key: string]: any}\n}","// 当 v1 为 undefined 时，使用 v2 替换\nexport const ck = (v1: any, v2: any) => {\n    if (v1 !== undefined) return v1\n    return v2\n}\n\nexport const eck = (v1: any, v2: any) => {\n    if (!isValueEmpty(v1)) return v1\n    return v2\n}\n\nexport const isValueEmpty = (value: any)=>{\n    if(value === undefined) return true\n    if(value === null) return true\n    try{\n        return value.toString().length === 0;\n    }catch (e){\n        return false\n    }\n\n}\n\nexport const get = (x:any, y?:string)=>{\n    if(y === undefined) return x;\n    if(x === undefined) return undefined\n    return x[y]\n}","import {withTranslation} from \"react-i18next\";\nimport {Alert, Progress, Steps} from \"antd\";\nimport {ClimbingBoxLoader} from \"react-spinners\";\nimport Title from \"antd/es/typography/Title\";\nimport {RunningStateType, SubmissionState, TestCaseStates} from \"../../../Type/ISubmission\";\nimport TestCase from \"../TestCase\";\nimport {LoadingOutlined} from \"@ant-design/icons\";\nimport {isValueEmpty} from \"../../../Utils/empty\";\nimport cApi from \"../../../Utils/API/c-api\";\nimport ReJudge from \"../Func/ReJudge\";\nimport judgeAuth from \"../../../Utils/judgeAhtu\";\nimport {connect} from \"react-redux\";\nimport {UserState} from \"../../../Type/Iuser\";\nimport {Dispatch} from \"react\";\n\nconst Running = (props: any) => {\n    const {Step} = Steps\n    const {\n        RunningState,\n        RunningResult,\n        submissionInfo,\n        TestCaseStateList,\n        PublicTestCaseStateList,\n        scoreMod,\n        testcaseMod\n    } = props\n\n    const getRunningIcon = (w: RunningStateType) => {\n        if (w === RunningState) return <LoadingOutlined/>\n        return undefined\n    }\n    const getRunningState = (w: RunningStateType) => {\n        // 处理编译错误\n        if (RunningState === \"-1\" && RunningResult === \"8\") {\n            if (w === \"-4\") return \"finish\"\n            if (w === \"-3\") return \"error\"\n            if (w === \"-2\") return \"wait\"\n            // 处理系统错误\n        } else if (RunningState === \"-1\" && RunningResult === \"5\") {\n            if (w === \"-4\") return \"finish\"\n            if (w === \"-3\") return \"finish\"\n            if (w === \"-2\") return \"error\"\n        } else {\n            if (w === RunningState) return \"process\"\n            if (parseInt(w) < parseInt(RunningState)) return \"finish\"\n            return \"wait\"\n        }\n    }\n    const getACScore = () => {\n        let scoreAC = 0\n        const Tcl = TestCaseStateList\n        for (let i = 0; i < Tcl.length; i++) {\n            const add: number = Tcl[i].caseScore === undefined ? 0 : Tcl[i].caseScore\n            if (Tcl[i].caseType === TestCaseStates.Accepted) scoreAC += add\n        }\n        return scoreAC\n    }\n    return (\n        <>\n            <Steps>\n                <Step status={getRunningState(\"-4\")} title=\"Queueing\" icon={getRunningIcon(\"-4\")}/>\n                <Step status={getRunningState(\"-3\")} title=\"Compiling\" icon={getRunningIcon(\"-3\")}/>\n                <Step status={getRunningState(\"-2\")} title=\"Judging\" icon={getRunningIcon(\"-2\")}/>\n            </Steps>\n\n            {/*\n                显示评测 log\n            */}\n            <div style={{marginTop: \"30px\"}}>\n                {[\"\"].map(() => {\n                    if (submissionInfo !== undefined) {\n                        if (!isValueEmpty(submissionInfo.judgeLog)) {\n                            let obj: {\n                                message: string,\n                                type: \"error\" | \"info\" | \"success\" | \"warning\" | undefined\n                            }\n                            if (RunningResult === \"8\") obj = {message: props.t(\"CompileFailed\"), type: \"error\"}\n                            else if (RunningResult === \"5\") obj = {message: props.t(\"SystemError\"), type: \"error\"}\n                            else obj = {message: props.t(\"judgingLog\"), type: \"info\"}\n                            return (\n                                <Alert\n                                    description={<pre className=\"preAutoLine\">{submissionInfo.judgeLog}</pre>}\n                                    showIcon={true}\n                                    {...obj}\n                                />\n                            )\n                        }\n                    }\n                    return undefined\n                })}\n            </div>\n\n            {judgeAuth(props.roles, [\"admin\", \"superadmin\"])\n                && (RunningState !== \"-4\" && RunningState !== \"-3\" && RunningState !== \"-2\") &&\n                (\n                    <div style={{marginTop: \"30px\"}}>\n                        <ReJudge\n                            API={props.RejudgeAPI ?? cApi.rejudge}\n                            data={[submissionInfo.submissionId]}\n                            afterSuccess={props.refresh}\n                        />\n                    </div>\n                )}\n\n            {/*\n                排队中的提示\n            */}\n            <div style={{marginTop: \"30px\"}}>\n                {(RunningState === \"-4\" || RunningState === \"-3\") && (\n                    <div style={{textAlign: \"center\", paddingTop: \"100px\"}}>\n                        <ClimbingBoxLoader color={\"#99CCFF\"} loading={true} size={15}/>\n                        <div style={{marginTop: \"50px\"}}>\n                            {RunningState === \"-4\" && (<>{props.t(\"inQueue,PleaseWait...\")}</>)}\n                            {RunningState === \"-3\" && (<>{props.t(\"compilationInProgress,PleaseWait...\")}</>)}\n                        </div>\n                    </div>\n                )}\n            </div>\n\n            {/*\n                当前获得的分数\n            */}\n            <div style={{marginTop: \"30px\"}}>\n                {\n                    RunningState === \"-2\" && scoreMod === \"show\" && (\n                        <>\n                            <Title level={4}> {props.t(\"CurrentScore\")} </Title>\n                            <Title level={5}> {getACScore()} </Title>\n                        </>\n                    )\n                }\n            </div>\n\n            {/*\n                显示评测进度\n            */}\n            <div style={{marginTop: \"30px\"}}>\n                {\n                    RunningResult !== \"8\" &&\n                    RunningResult !== \"5\" &&\n                    testcaseMod !== \"show\" && (\n                        [''].map(() => {\n                            let JudgedNum = 0\n                            for (const x of TestCaseStateList) {\n                                if (x.caseType !== TestCaseStates.Pending) JudgedNum += 1\n                            }\n                            return (\n                                <>\n                                    <Title level={4}> {props.t(\"testingProgress\")} </Title>\n                                    <div style={{textAlign: \"center\"}}>\n                                        <Progress\n                                            percent={JudgedNum / TestCaseStateList.length * 100}\n                                            type=\"dashboard\" status=\"normal\"\n                                            format={() => {\n                                                return (\n                                                    <span style={{fontSize: 18}}>\n                                                        {Math.floor(JudgedNum / TestCaseStateList.length * 100)} / 100%\n                                                    </span>\n                                                )\n                                            }}\n                                        />\n                                    </div>\n                                </>\n                            )\n                        })\n                    )\n                }\n            </div>\n\n            {/*显示测试点详细信息*/}\n            <div style={{marginTop: \"30px\"}}>\n                {\n                    (RunningState === \"-2\" || RunningState === \"-1\") &&     // 已经到达了测试点阶段\n                    RunningResult !== \"8\" && RunningResult !== \"5\" &&       // 不是编译错误或系统错误\n                    testcaseMod === \"show\" && (                             // 测试点设置为可显示\n                        <>\n                            {TestCaseStateList.length !== 0 && (\n                                <div>\n                                    <Title level={4}> {props.t(\"TestCaseInfo\")} </Title>\n                                    <div style={{display: \"flex\", justifyContent: \"left\", flexWrap: \"wrap\"}}>\n                                        {TestCaseStateList.map((value: any) => {\n                                            return <TestCase {...value} scoreMod={scoreMod}/>\n                                        })}\n                                    </div>\n\n                                </div>\n                            )}\n                            {PublicTestCaseStateList.length !== 0 && (\n                                <div style={{marginTop: 30}}>\n                                    <Title level={4}> {props.t(\"PublicTestCaseInfo\")} </Title>\n                                    <div style={{display: \"flex\", justifyContent: \"left\", flexWrap: \"wrap\"}}>\n                                        {PublicTestCaseStateList.map((value: any) => {\n                                            return <TestCase {...value} scoreMod={scoreMod}/>\n                                        })}\n                                    </div>\n                                </div>\n                            )}\n                        </>\n                    )\n                }\n            </div>\n        </>\n    )\n}\n\nconst mapStateToProps = (state: any) => {\n    const UState: UserState = state.UserReducer\n    const SubState: SubmissionState = state.SubmissionReducer\n\n    return {\n        roles: UState.userInfo?.roles,\n        RejudgeAPI: SubState.TopSubmissionInfo?.RejudgeAPI,\n        InvalidateAPI: SubState.TopSubmissionInfo?.InvalidateAPI\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withTranslation()(Running))\n","import {Component} from \"react\";\nimport {Button, Card, Col, Progress, Row, Space, Tabs} from \"antd\";\nimport {WithTranslation, withTranslation} from \"react-i18next\";\nimport TestCase, {TestCaseProp} from \"../TestCase\";\nimport {displayType, StateList, TestCaseStates} from \"../../../Type/ISubmission\";\nimport mApi from \"../../../Utils/API/m-api\";\n\n\ninterface IJudgeResult extends WithTranslation {\n    data: TestCaseProp[]\n    sumScore: number\n    scoreMod: displayType\n    title: string,\n    useDownload: boolean\n}\n\nclass JudgeResult extends Component<IJudgeResult, any> {\n\n\n    render() {\n\n        const getInfo = () => {\n            const {data} = this.props\n            let numList = Array(StateList.length)\n            let scoreAC = 0, ACNumber = 0, firstRejectId: string = \"\"\n            for (let i = 0; i < StateList.length; i++) numList[i] = []\n            for (let i = 0; i < data.length; i++) {\n                // @ts-ignore\n                const add: number = data[i].caseScore === undefined ? 0 : data[i].caseScore\n                numList[data[i].caseType].push(data[i])\n                scoreAC += add\n                if (data[i].caseType === TestCaseStates.Accepted) {\n                    ACNumber++;\n                } else {\n                    if (firstRejectId.length === 0)\n                        firstRejectId = data[i].caseID ?? \"\"\n                }\n\n            }\n            return {\n                numList: numList, AC: scoreAC, SumAll: this.props.sumScore,\n                ACNumber: ACNumber, CaseNumber: data.length,\n                firstRejectId: firstRejectId\n            }\n        }\n        const info = getInfo()\n\n        return (\n            <Card\n                size=\"small\"\n                title={<span style={{fontWeight: \"bold\"}}>{this.props.title}</span>}\n                className={\"card\"}\n                extra={<>\n                    {info.firstRejectId.length !== 0 && this.props.useDownload && (\n                        <Button type={\"dashed\"} size={\"small\"}  danger onClick={() => {\n                            mApi.getCheckpointPreview(info.firstRejectId).then((checkpoint: any) => {\n                                // TODO 先查询积分是否足够，\n                                // 如果足够，直接扣除，并给作者增加积分\n                                mApi.zipDownload([\n                                    {\n                                        id: checkpoint.inputFileId,\n                                        downloadFilename: checkpoint.inputFilename ?? `${info.firstRejectId}.in`\n                                    },\n                                    {\n                                        id: checkpoint.outputFileId,\n                                        downloadFilename: checkpoint.outputFilename ?? `${info.firstRejectId}.out`\n                                    }\n                                ])\n                            })\n\n                        }}>\n                            {this.props.t(\"DownloadFirstRejectCase\")}\n                        </Button>\n                    )}\n                </>}\n            >\n                <Row>\n                    <Col span={18}>\n                        <Tabs defaultActiveKey=\"0\" tabPosition={\"left\"} className={\"JudgeResult-tab\"}>\n                            {info.numList.map((value, index) => {\n                                if (value.length !== 0) {\n                                    return (\n                                        <Tabs.TabPane\n                                            tab={(\n                                                <Space>\n                                                    <TestCase type={\"tag-simple\"} caseType={index}/>\n                                                    <span> x {value.length}</span>\n                                                </Space>\n                                            )}\n                                            key={index}\n                                        >\n                                            {value.length !== 0 && (\n                                                <Card\n                                                    size={\"small\"}\n                                                    title={<TestCase type={\"text\"} caseType={index}/>}\n                                                >\n                                                    <div style={{\n                                                        display: \"flex\",\n                                                        justifyContent: \"left\",\n                                                        flexWrap: \"wrap\"\n                                                    }}>\n                                                        {value.map((val: any) => {\n                                                            return <TestCase type={\"index\"} {...val}/>\n                                                        })}\n                                                    </div>\n\n                                                </Card>\n                                            )}\n                                        </Tabs.TabPane>\n                                    )\n                                }\n                                return undefined\n                            })}\n                        </Tabs>\n                    </Col>\n                    <Col span={6} className={\"Progress-set\"}>\n                        {this.props.scoreMod === \"show\" && (\n                            <>\n                                <Progress\n                                    success={{percent: info.AC / info.SumAll * 100}}\n                                    type=\"dashboard\"\n                                    format={() => `${info.AC} / ${info.SumAll}`}\n                                />\n                                <span>{this.props.t(\"Score\")}</span>\n                            </>\n                        )}\n                        {this.props.scoreMod !== \"show\" && (\n                            <>\n                                <Progress\n                                    success={{percent: info.ACNumber / info.CaseNumber * 100}}\n                                    type=\"dashboard\"\n                                    format={() => `${info.ACNumber} / ${info.CaseNumber}`}\n                                />\n                                <span>{this.props.t(\"acceptedNumber\")}</span>\n                            </>\n                        )}\n                    </Col>\n                </Row>\n            </Card>\n        )\n    }\n}\n\n\nexport default withTranslation()(JudgeResult)\n","import {withTranslation} from \"react-i18next\";\nimport {Button, message} from \"antd\";\nimport {CloseOutlined} from \"@ant-design/icons\";\n\nconst Invalidate = (props: any)=>{\n    return (\n        <>\n            <Button\n                icon={<CloseOutlined />}\n                onClick={()=>{\n                    props.API(props.data).then((res: any)=>{\n                        message.success(props.t(\"canceledResults\"))\n                        props.afterSuccess !== undefined && props.afterSuccess()\n                    })\n                }}\n            >\n                {props.t(\"cancelResults\")}\n            </Button>\n        </>\n    )\n}\n\nexport default withTranslation()(Invalidate)\n","import {withTranslation} from \"react-i18next\";\nimport {Button} from \"antd\";\nimport {DownloadOutlined} from \"@ant-design/icons\"\n\nconst DownloadTestCase = (props: any) =>{\n    return (\n        <>\n            <Button icon={<DownloadOutlined />}>\n                {props.t(\"downloadData\")}\n            </Button>\n        </>\n    )\n}\n\nexport default withTranslation()(DownloadTestCase)\n","import {withTranslation} from \"react-i18next\";\nimport Title from \"antd/es/typography/Title\";\nimport {Card, Col, Progress, Row, Space, Statistic, Table} from \"antd\";\nimport JudgeResult from \"./JudgeResult\";\nimport {StateList, SubmissionMap, SubmissionState, TestCaseStates} from \"../../../Type/ISubmission\";\nimport {unix2Time} from \"../../../Utils/Time\";\nimport TestCase from \"../TestCase\";\nimport cApi from \"../../../Utils/API/c-api\";\nimport ReJudge from \"../Func/ReJudge\";\nimport Invalidate from \"../Func/Invalidate\";\nimport DownloadTestCase from \"../Func/DownloadTestCase\";\nimport {connect} from \"react-redux\";\nimport {UserState} from \"../../../Type/Iuser\";\nimport {Dispatch} from \"react\";\nimport judgeAuth from \"../../../Utils/judgeAhtu\";\n\nconst Summary = (props: any) => {\n    const {TestCaseStateList, submissionInfo, PublicTestCaseStateList} = props\n    const getCaseInfo = () => {\n        let scoreAC = 0, scoreSum = 0, mxTime: number = 0, mxMem: number = 0\n        let SumTime = 0, SumMem = 0, firstUnACCaseNumber = undefined\n        const Tcl = TestCaseStateList\n        for (let i = 0; i < Tcl.length; i++) {\n            const add: number = Tcl[i].caseScore === undefined ? 0 : Tcl[i].caseScore\n            // 找到第一个没有 AC 的测试点\n            if (firstUnACCaseNumber === undefined && Tcl[i].caseType !== TestCaseStates.Accepted)\n                firstUnACCaseNumber = i + 1\n            if (Tcl[i].caseType === TestCaseStates.Accepted) {\n                scoreAC += add\n                scoreSum += add\n            } else if (Tcl[i].caseType === TestCaseStates.Pending\n                || Tcl[i].caseType === TestCaseStates.Running) scoreSum += add\n            // scoreAll += add\n            const caseTime: number = Tcl[i].caseTime === undefined ? 0 : Tcl[i].caseTime\n            const caseMem: number = Tcl[i].caseMemory === undefined ? 0 : Tcl[i].caseMemory\n\n            if (mxTime < caseTime) mxTime = caseTime\n            if (mxMem < caseMem) mxMem = caseMem\n            SumTime += caseTime\n            SumMem += caseMem\n        }\n        return {\n            AC: scoreAC, SumRunning: scoreSum, SumAll: props.sumScore,\n            mxTime: mxTime, mxMem: mxMem, SumTime: SumTime, AvgMem: SumMem / Tcl.length,\n            firstUnACCaseNumber: firstUnACCaseNumber\n        }\n    }\n    const info = getCaseInfo()\n    return (\n        <>\n            <Title level={4}> {props.t(\"Overview\")}</Title>\n            <Row style={{marginBottom: 20}}>\n                <Col span={11}>\n                    <Card size={\"small\"}\n                          title={<span style={{fontWeight: \"bold\"}}>{props.t(\"judgingInformation\")}</span>}>\n                        <Table\n                            size={\"small\"}\n                            pagination={false}\n                            dataSource={[\n                                {\n                                    key: props.t(\"conclusion\"),\n                                    value: (\n                                        <Space>\n                                            <TestCase\n                                                type={\"text\"}\n                                                caseType={StateList.indexOf(SubmissionMap[submissionInfo.judgeResult])}\n                                            />\n                                            {props.testcaseMod !== \"disable\" &&\n                                                info.firstUnACCaseNumber !== undefined &&\n                                                submissionInfo.judgeResult !== 99 && (\n                                                    <span>\n                                                    ({props.t(\"OnTestCase\")}{info.firstUnACCaseNumber})\n                                                </span>\n                                                )}\n                                        </Space>\n                                    )\n                                },\n                                {key: props.t(\"index\"), value: submissionInfo.submissionId},\n                                {key: props.t(\"submissionTime\"), value: unix2Time(submissionInfo.gmtCreate)},\n                                {key: props.t(\"judgingTime\"), value: unix2Time(submissionInfo.gmtModified)},\n                                {key: props.t(\"template\"), value: submissionInfo.judgeTemplateTitle},\n                            ]}\n                            showHeader={false}\n                            columns={[\n                                {dataIndex: \"key\"},\n                                {dataIndex: \"value\"}\n                            ]}\n                        />\n                    </Card>\n                </Col>\n                <Col span={12} offset={1}>\n                    <Card size={\"small\"}\n                          title={<span style={{fontWeight: \"bold\"}}>{props.t(\"affiliateInformation\")}</span>}>\n                        <Table\n                            size={\"small\"}\n                            pagination={false}\n                            dataSource={[\n                                {\n                                    key: props.t(\"submitUser\"),\n                                    value: submissionInfo.username + \" (ID: \" + submissionInfo.userId + \")\"\n                                },\n                                {\n                                    key: props.t(\"problemInformation\"),\n                                    value: submissionInfo.problemTitle + \"(\" + submissionInfo.problemCode + \")\"\n                                }\n                            ]}\n                            showHeader={false}\n                            columns={[\n                                {dataIndex: \"key\"},\n                                {dataIndex: \"value\"}\n                            ]}\n                        />\n                    </Card>\n                    {judgeAuth(props.roles, [\"admin\", \"superadmin\"]) && (\n                        <Card\n                            size={\"small\"}\n                            title={<span style={{fontWeight: \"bold\"}}>{props.t(\"operator\")}</span>}\n                            style={{marginTop: 20}}\n                        >\n                            <Space direction={\"horizontal\"}>\n                                <ReJudge\n                                    API={props.RejudgeAPI ?? cApi.rejudge}\n                                    data={[submissionInfo.submissionId]}\n                                    afterSuccess={props.refresh}\n                                />\n                                <Invalidate\n                                    API={props.InvalidateAPI ?? cApi.invalidateSubmission}\n                                    data={{submissionId: submissionInfo.submissionId}}\n                                    afterSuccess={props.refresh}\n                                />\n                                {/*此处需要传入：\n                            1. 获取测试单信息的异步函数\n                            2. 当前的测试点信息\n\n                            实现：\n                            1. 下载第一个错误测试点的数据\n                            2. 打包下载全部测试点（弹窗确认）\n                            3. 选择测试点进行下载（弹窗，可以多选，可以单点下载）\n                            */}\n                                <DownloadTestCase\n                                />\n\n                            </Space>\n                        </Card>\n                    )}\n                </Col>\n            </Row>\n            {props.submissionInfo.judgeResult !== 99 && TestCaseStateList.length !== 0 && (\n                <Card\n                    size=\"small\"\n                    title={<span style={{fontWeight: \"bold\"}}>{props.t(\"Statistics\")}</span>}\n                    className={\"card\"}\n                >\n                    <Row>\n                        {props.scoreMod !== \"disable\" && props.sumScore !== undefined && (\n                            <Col className={\"Progress-set\"} span={6}>\n                                {props.scoreMod === \"show\" && (\n                                    <>\n                                        <Progress\n                                            success={{percent: info.AC / info.SumAll * 100}}\n                                            type=\"dashboard\"\n                                            format={() => `${info.AC} / ${info.SumAll}`}\n                                        />\n                                        <span>{props.t(\"TotalScore\")}</span>\n                                    </>\n                                )}\n                                {props.scoreMod === \"partial\" && (\n                                    <>\n                                        <div style={{marginTop: \"50px\", marginBottom: \"40px\"}}>\n                                            {info.AC === info.SumAll && (\n                                                <Title level={5} style={{color: \"green\"}}>{props.t(\"allPassed\")}</Title>\n                                            )}\n                                            {info.AC !== info.SumAll && info.AC !== 0 && (\n                                                <Title level={5}\n                                                       style={{color: \"orange\"}}>{props.t(\"partiallyPassed\")}</Title>\n                                            )}\n                                            {info.AC === 0 && (\n                                                <Title level={5} style={{color: \"red\"}}>{props.t(\"failed\")}</Title>\n                                            )}\n                                        </div>\n                                        <span>{props.t(\"JudgeResult\")}</span>\n                                    </>\n                                )}\n                            </Col>\n                        )}\n                        {props.TimeLimit === undefined && (\n                            <Col span={6} style={{margin: \"auto\"}}>\n                                <Statistic title={props.t(\"MaximumTime\")}\n                                           value={info.mxTime}\n                                           suffix=\"ms\"/>\n                            </Col>\n                        )}\n                        {props.TimeLimit !== undefined && (\n                            <Col className={\"Progress-set\"} span={6}>\n                                {\n                                    [''].map(() => {\n                                        let obj: any = {\n                                            percent: 100,\n                                            status: \"exception\"\n                                        }\n                                        if (info.mxTime <= props.TimeLimit)\n                                            obj = {success: {percent: info.mxTime / props.TimeLimit * 100}}\n                                        return (\n                                            <Progress\n                                                {...obj}\n                                                type=\"dashboard\"\n                                                format={() => `${info.mxTime} / ${props.TimeLimit} ms`}\n                                            />\n                                        )\n                                    })\n                                }\n                                <span>{props.t(\"MaximumTime\")}</span>\n                            </Col>\n                        )}\n                        {props.MemoryLimit === undefined && (\n                            <Col span={6} style={{margin: \"auto\"}}>\n                                <Statistic title={props.t(\"MaximumMemory\")}\n                                           value={Math.floor(info.mxMem / 1024)}\n                                           suffix=\"MB\"/>\n                            </Col>\n                        )}\n                        {props.MemoryLimit !== undefined && (\n                            <Col className={\"Progress-set\"} span={6}>\n                                {\n                                    [''].map(() => {\n                                        let obj: any = {\n                                            percent: 100,\n                                            status: \"exception\"\n                                        }\n                                        if (info.mxMem <= props.MemoryLimit)\n                                            obj = {success: {percent: info.mxMem / props.MemoryLimit * 100}}\n                                        return (\n                                            <Progress\n                                                {...obj}\n                                                type=\"dashboard\"\n                                                format={() => `${Math.floor(info.mxMem / 1024)} / ${Math.floor(props.MemoryLimit / 1024)} MB`}\n                                            />\n                                        )\n                                    })\n                                }\n                                <span>{props.t(\"MaximumMemory\")}</span>\n                            </Col>\n                        )}\n                        {props.scoreMod !== \"disable\" && props.sumScore !== undefined && (\n                            <Col className={\"Progress-set-Statistic\"} span={6}>\n                                <Statistic title={props.t(\"TotalRunningTime\")}\n                                           value={info.SumTime}\n                                           suffix=\"ms\"/>\n                                <Statistic className={\"Progress-set-Statistic-cell\"}\n                                           title={props.t(\"AvgMemory\")}\n                                           value={Math.floor(info.AvgMem / 1024)}\n                                           suffix=\"MB\"/>\n                            </Col>\n                        )}\n                        {(props.scoreMod === \"disable\" || props.sumScore === undefined) && (\n                            <>\n                                <Col span={6} style={{margin: \"auto\"}}>\n                                    <Statistic title={props.t(\"TotalRunningTime\")}\n                                               value={info.SumTime}\n                                               suffix=\"ms\"/>\n                                </Col>\n                                <Col span={6} style={{margin: \"auto\"}}>\n                                    <Statistic className={\"Progress-set-Statistic-cell\"}\n                                               title={props.t(\"AvgMemory\")}\n                                               value={Math.floor(info.AvgMem / 1024)}\n                                               suffix=\"MB\"/>\n                                </Col>\n                            </>\n                        )}\n\n                    </Row>\n                </Card>\n            )}\n            {props.testcaseMod === \"show\" &&\n                props.submissionInfo.judgeResult !== 99 &&\n                TestCaseStateList.length !== 0 && (\n                    <>\n                        <Title level={4}> {props.t(\"JudgeResult\")}</Title>\n                        <JudgeResult\n                            useDownload={false}\n                            title={props.t(\"evaluationDataSet\")}\n                            data={TestCaseStateList}\n                            scoreMod={props.sumScore === undefined ? \"disable\" : props.scoreMod}\n                            sumScore={props.sumScore}\n                        />\n                        {PublicTestCaseStateList.length !== 0 && (\n                            <JudgeResult\n                                useDownload={true}\n                                title={props.t(\"publicDataSet\")}\n                                data={PublicTestCaseStateList}\n                                scoreMod={props.sumScore === undefined ? \"disable\" : props.scoreMod}\n                                sumScore={props.sumScore}\n                            />\n                        )}\n                    </>\n                )}\n        </>\n    )\n}\n\nconst mapStateToProps = (state: any) => {\n    const UState: UserState = state.UserReducer\n    const SubState: SubmissionState = state.SubmissionReducer\n\n    return {\n        roles: UState.userInfo?.roles,\n        RejudgeAPI: SubState.TopSubmissionInfo?.RejudgeAPI,\n        InvalidateAPI: SubState.TopSubmissionInfo?.InvalidateAPI\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withTranslation()(Summary))\n","import {Dispatch, useEffect, useState} from \"react\";\nimport {Skeleton, Steps} from 'antd';\nimport {withTranslation} from \"react-i18next\";\nimport {LoadingOutlined} from '@ant-design/icons';\nimport {TestCaseProp} from \"../TestCase\";\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router\";\nimport {\n    langMap,\n    RunningResultType,\n    RunningStateType,\n    StateList,\n    submissionInfoType,\n    SubmissionMap,\n    SubmissionState,\n    TestCaseStates\n} from \"../../../Type/ISubmission\";\nimport CodeHighlight from \"../../common/CodeHighlight\";\nimport {SyncJudging} from \"../SyncJudging\";\nimport {ck, isValueEmpty} from \"../../../Utils/empty\";\nimport Running from \"./Running\";\nimport Summary from \"./Summary\";\nimport cApi from \"../../../Utils/API/c-api\";\n\ninterface IProcessingProp {\n    TimeLimit: number\n    MemoryLimit: number,\n}\n\nconst Processing = (props: IProcessingProp & any) => {\n\n    // 当前评测的最新到达的步骤\n    const [currentStep, setCurrentStep] = useState<number>(0)\n    // 当前显示的步骤\n    const [showStep, setShowStep] = useState<number>(0)\n\n    // 评测有 评测进度 与 评测结果 两种\n    // 评测进度\n    const [RunningState, setRunningState] = useState<RunningStateType>(\"-4\")\n    // 评测结果\n    const [RunningResult, setRunningResult] = useState<RunningResultType>(\"0\")\n\n    // 测试点当前评测状态\n    const [TestCaseStateList, setTestCaseStateList] = useState<TestCaseProp[]>([])\n    const [PublicTestCaseStateList, setPublicTestCaseStateList] = useState<TestCaseProp[]>([])\n\n    // 测试结果信息\n    const [submissionInfo, setSubmissionInfo] = useState<submissionInfoType | undefined>()\n\n    // 为了动态显示评测点信息，使用 ws 与后端进行链接\n    // ws 是否打开\n    const [webSocketOpen, setWebSocketOpen] = useState<boolean>(false)\n    // ws 发送的信息（在打开时，当前数据的变更将同步发送至 ws）\n    const [webSocketQueryList, setWebSocketQueryList] = useState<string[]>([])\n\n    const preDealCheckpointSet = (resData: any, key: string) => {\n        if (resData[key] === null) resData[key] = []\n        else {\n            resData[key] = resData[key].map((value: any) => {\n                return {\n                    RunningResult: value[1].toString(),\n                    Score: value[2],\n                    Time: value[3],\n                    Memory: value[4],\n                    Index: value[0]\n                }\n            })\n        }\n    }\n    const initCaseData = (data: TestCaseProp[], num: number) => {\n        for (let i = 1; i <= num; i++) {\n            data.push({\n                caseIndex: i,\n                caseType: TestCaseStates.Pending,\n            })\n        }\n    }\n\n    const setCaseValue = (resData: any, key: string, data: TestCaseProp[]) => {\n        for (let i = 0; i < resData[key].length; i++) {\n            data.push({\n                caseIndex: i + 1,\n                caseType: StateList.indexOf(SubmissionMap[resData[key][i].RunningResult.toString()]),\n                caseScore: resData[key][i].Score,\n                caseTime: resData[key][i].Time,\n                caseMemory: resData[key][i].Memory,\n                caseID: resData[key][i].Index\n            })\n        }\n    }\n\n    const getSubmissionInfo = () => {\n        props.QuerySubmissionAPI(props.submissionId).then((resData: any) => {\n            // 格式化当前测试点信息\n            preDealCheckpointSet(resData, \"checkpointResults\")\n            preDealCheckpointSet(resData, \"publicCheckpointResults\")\n\n            // 根据当前的结果，初始化测试点信息，且调整当前布局\n            // 分 3 类分别处理： 1. 未评测完   2. 已评测完，但结果是编译错误或系统错误   3. 已评测完\n            let TestCaseInit: TestCaseProp[] = []\n            let PublicTestCaseInit: TestCaseProp[] = []\n            if (resData.judgeResult === 8 || resData.judgeResult === 5) {\n                // 当前状态为 系统错误 或 编译错误\n                setSubmissionInfo(resData)\n                setCurrentStep(1)\n                setShowStep(1)\n                setRunningState(\"-1\")\n                setRunningResult(resData.judgeResult.toString())\n            } else if (resData.judgeResult <= 0) { // resData.checkpointResults.length === 0\n                // 当前还在等待状态\n                initCaseData(TestCaseInit, resData.checkpointNum)\n                initCaseData(PublicTestCaseInit, resData.publicCheckpointNum)\n\n                setSubmissionInfo(resData)\n\n                setTestCaseStateList(TestCaseInit)\n                setPublicTestCaseStateList(PublicTestCaseInit)\n\n                setCurrentStep(1)\n                setShowStep(1)\n                setRunningState(resData.judgeResult === 0 ? \"-4\" : resData.judgeResult.toString())\n                setWebSocketOpen(true)\n                setWebSocketQueryList([resData.submissionId])\n            } else {\n                // 当前状态为已完成评测\n                setCaseValue(resData, \"checkpointResults\", TestCaseInit)\n                setCaseValue(resData, \"publicCheckpointResults\", PublicTestCaseInit)\n\n                // 评测已经结束后，当编译信息为空时，显示编译成功\n                if (isValueEmpty(resData.judgeLog)) resData.judgeLog = props.t(\"CompileSuccess\")\n                setSubmissionInfo(resData)\n                setTestCaseStateList(TestCaseInit)\n                setPublicTestCaseStateList(PublicTestCaseInit)\n\n                setCurrentStep(2)\n                setShowStep(2)\n                setRunningState(\"-1\")\n                setRunningResult(resData.judgeResult.toString())\n            }\n        })\n    }\n\n    useEffect(() => {\n        if (props.submissionId !== undefined)\n            getSubmissionInfo()\n    }, [props.submissionId])\n\n\n    const addCaseInfo = (data: any[]) => {\n        const submissionIdHex = data[0]\n        const submissionVersion = data[1]\n        const checkpointType = data[2]\n        const checkpointIndex = data[3]\n        const checkpointId = data[4]\n        const judgeResult = data[5]\n        const judgeScore = data[6]\n        const usedTime = data[7]\n        const usedMemory = data[8]\n\n        // 若测试点信息，不是当前界面的，直接忽略\n        if (submissionIdHex !== props.submissionId) return\n\n        if (checkpointIndex < 0) {  // 小于 0，同步测试点状态\n            setRunningState(checkpointIndex.toString())\n            // -1 表示评测结束\n            if (checkpointIndex === -1) {\n                getSubmissionInfo()\n                setWebSocketOpen(false)\n            }\n        } else { // 否则表示同步测试点信息\n            if (checkpointType === 0) {\n                TestCaseStateList[checkpointIndex] = {\n                    caseIndex: checkpointIndex + 1,\n                    caseType: StateList.indexOf(SubmissionMap[judgeResult.toString()]),\n                    caseScore: judgeScore,\n                    caseTime: usedTime,\n                    caseMemory: usedMemory\n                }\n                setTestCaseStateList([...TestCaseStateList])\n            } else if (checkpointType === 1) {\n                PublicTestCaseStateList[checkpointIndex] = {\n                    caseIndex: checkpointIndex + 1,\n                    caseType: StateList.indexOf(SubmissionMap[judgeResult.toString()]),\n                    caseScore: judgeScore,\n                    caseTime: usedTime,\n                    caseMemory: usedMemory\n                }\n                setPublicTestCaseStateList([...PublicTestCaseStateList])\n            }\n\n        }\n    }\n\n\n    const {Step} = Steps;\n    const nameList = ['code', \"running\", \"summary\"]\n\n    const getStatus = (name: string) => {\n        const res = parseInt(RunningResult)\n        // \"5\": \"System Error\", \"8\": \"Compilation Error\", \"99\": \"Canceled\"\n        if (name === \"running\" && (res === 99)) return \"wait\"\n        if (name === \"running\" && (res === 5 || res === 8))\n            return \"error\"\n        const NameIndex = nameList.indexOf(name)\n        if (currentStep === NameIndex) return \"process\";\n        if (currentStep < NameIndex) return \"wait\";\n        if (currentStep > NameIndex) return \"finish\";\n    }\n    const getDisabled = (name: string) => {\n        return currentStep < nameList.indexOf(name);\n    }\n    const getIcon = (name: string) => {\n        if (name === \"running\" && RunningResult === \"99\") return undefined\n        // 若现在为正在运行的状态\n        return (RunningState !== \"-1\" && currentStep === nameList.indexOf(name)) ?\n            <LoadingOutlined/> : undefined\n    }\n\n    const sf = submissionInfo\n\n    let steps: { [key: string]: any } = {\n        code: {\n            title: props.t(\"Code\"),\n            icon: getIcon(\"code\"),\n            status: getStatus(\"code\"),\n            disabled: getDisabled(\"code\"),\n            cssClass: \"steps-content-pending\",\n            content: (\n                <>\n                    {!isValueEmpty(sf?.code) && sf?.judgeTemplateTitle !== undefined && (\n                        <CodeHighlight code={sf?.code} lang={langMap[sf.judgeTemplateTitle]}/>\n                    )}\n                    {isValueEmpty(sf?.zipFileId) && isValueEmpty(sf?.code) && (\n                        props.t(\"codeIsNotPublic\")\n                    )}\n                    {!isValueEmpty(sf?.zipFileId) && (\n                        <a href={cApi.getFileDownloadUrl(sf?.zipFileId as string, Date.now().toString() + \".zip\")}>{props.t(\"clickToDownload\")}</a>\n                    )}\n                </>\n            )\n        },\n        running: {\n            title: props.t(\"run\"),\n            icon: getIcon(\"running\"),\n            status: getStatus(\"running\"),\n            disabled: getDisabled(\"running\") || RunningResult === \"99\",\n            cssClass: \"steps-content-compile\",\n            content: (\n                <Running\n                    TestCaseStateList={TestCaseStateList}\n                    PublicTestCaseStateList={PublicTestCaseStateList}\n                    scoreMod={props.scoreMod}\n                    testcaseMod={props.testcaseMod}\n                    sumScore={props.sumScore}\n                    RunningState={RunningState}\n                    RunningResult={RunningResult}\n                    submissionInfo={submissionInfo}\n                    refresh={getSubmissionInfo}\n                />\n            )\n        },\n        summary: {\n            title: props.t(\"Summary\"),\n            icon: getIcon(\"summary\"),\n            status: getStatus(\"summary\"),\n            disabled: getDisabled(\"summary\"),\n            cssClass: \"steps-content-summary\",\n            content: (\n                <Summary\n                    TestCaseStateList={TestCaseStateList}\n                    PublicTestCaseStateList={PublicTestCaseStateList}\n                    scoreMod={props.scoreMod}\n                    testcaseMod={props.testcaseMod}\n                    sumScore={props.sumScore}\n                    TimeLimit={ck(props.TimeLimit, sf?.timeLimit)}\n                    MemoryLimit={ck(props.MemoryLimit, sf?.memoryLimit)}\n                    submissionInfo={submissionInfo}\n                    refresh={getSubmissionInfo}\n                />\n            )\n        }\n    }\n\n    return (\n        <>\n            <div className={\"Processing-SyncJudging\"}>\n                <SyncJudging\n                    open={webSocketOpen}\n                    dataHandle={addCaseInfo}\n                    queryList={webSocketQueryList}/>\n            </div>\n\n            <Skeleton active loading={props.submissionId === undefined || sf === undefined}>\n                <Steps type=\"navigation\" current={showStep} onChange={setShowStep}>\n                    {\n                        nameList.map((name) => {\n                            return <Step\n                                title={steps[name].title}\n                                icon={steps[name].icon}\n                                status={steps[name].status}\n                                disabled={steps[name].disabled}\n                            />\n                        })\n                    }\n                </Steps>\n                <div className={`steps-content ${steps[nameList[showStep]].cssClass}`}>\n                    {steps[nameList[showStep]].content}\n                </div>\n            </Skeleton>\n        </>\n    )\n\n\n}\n\nconst mapStateToProps = (state: any) => {\n    const SubState: SubmissionState = state.SubmissionReducer\n    return {\n        submissionId: SubState.TopSubmissionId,\n        TimeLimit: SubState.TopSubmissionInfo?.TimeLimit,\n        MemoryLimit: SubState.TopSubmissionInfo?.MemoryLimit,\n\n        scoreMod: SubState.TopSubmissionInfo?.scoreMod,\n        sumScore: SubState.TopSubmissionInfo?.sumScore,\n\n        testcaseMod: SubState.TopSubmissionInfo?.testcaseMod,\n\n        QuerySubmissionAPI: SubState.TopSubmissionInfo?.QuerySubmissionAPI\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(\n    withTranslation()(\n        withRouter(Processing)\n    ))\n","import React, {Dispatch} from \"react\";\nimport {Button, Modal} from \"antd\";\nimport Processing from \"./Processing\";\nimport {SubmissionState} from \"../../../Type/ISubmission\";\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router-dom\";\nimport {useTranslation} from \"react-i18next\";\n\n\nconst ModalProcessing = (props: any) => {\n    const {t} = useTranslation()\n    return (\n        <Modal\n            title={\n                t(\"submissionDetails\") +\n                (props.title !== undefined ? \"(\" + props.title + \")\" : \"\")\n            }\n            destroyOnClose={true}\n            visible={props.submissionModalVis}\n            onCancel={() => props.setSubmissionModalVis(false)}\n            width={1200}\n            zIndex={2000}\n            style={{overflow: \"hidden\"}}\n            footer={[\n                <Button key=\"back\" onClick={() => {\n                    props.setSubmissionModalVis(false)\n                }}>\n                    关闭\n                </Button>\n            ]}\n        >\n            <Processing/>\n        </Modal>\n    )\n\n}\n\nconst mapStateToProps = (state: any) => {\n    const SubState: SubmissionState = state.SubmissionReducer\n    return {\n        submissionModalVis: SubState.SubmissionModalVis,\n        title: SubState.TopSubmissionInfo?.title\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\n    setSubmissionModalVis: (data: boolean) => dispatch({\n        type: \"setSubmissionModalVis\", data: data\n    })\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withRouter(ModalProcessing))\n","import React, {Dispatch, Suspense} from 'react';\n\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport './Config/i18n'\nimport {ConfigProvider} from \"antd\";\nimport \"vditor/src/assets/less/index.less\";\nimport {connect} from \"react-redux\";\nimport {ConfigState} from \"./Type/IConfig\";\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\nimport Loading from \"./Utils/Loading\";\nimport {routerLayout} from \"./Config/router/router\";\nimport SubmissionModal from \"./Component/submission/Processing/ModalProcessing\";\n\n\nconst App = (props: any) => {\n\n\n    return (\n        // antd 全局化配置  国际化参数\n        <ConfigProvider locale={props.local}>\n            {/*顶级路由*/}\n            <Router>\n                {/*提交详情窗体*/}\n                <SubmissionModal/>\n                <Suspense fallback={<Loading/>}>\n                    {\n                        routerLayout.map((r) => {\n                            return (\n                                <Route key={r.id} path={r.path} exact={r.exact}\n                                       component={r.component}/>\n                            )\n                        })\n                    }\n                </Suspense>\n            </Router>\n        </ConfigProvider>\n    );\n\n}\n\nconst mapStateToProps = (state: any) => {\n    const State: ConfigState = state.ConfigReducer\n    return {\n        local: State.lang,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(App)\n","import {TableAction} from \"../Action/table\";\nimport {TableState} from \"../../Type/ITable\";\n\n// interface MTableState {\n//     Data: []\n//     SelectedRow: []\n// }\n\nconst initState: TableState = {\n    tableData: {}\n}\n\nexport const TableReduce = (state: TableState = initState, action: TableAction) => {\n    let State = {...state}\n    State.tableData = {...State.tableData}\n    const initTableData = (name: string) => {\n        if (State.tableData[name] === undefined)\n            State.tableData[name] = {\n                selectedRowKeys: [],\n                dataSource: [],\n                tableVersion: 0,\n                tableInfo: {}\n            }\n    }\n\n    switch (action.type) {\n        case \"setSelectedRowKeys\":\n            initTableData(action.name)\n            State.tableData[action.name].selectedRowKeys = action.data\n            break\n\n        case \"addTableVersion\":\n            initTableData(action.name)\n            const nv = State.tableData[action.name].tableVersion\n            State.tableData[action.name].tableVersion = Math.abs(nv) + 1\n            break\n\n        case \"setDataSource\":\n            initTableData(action.name)\n            State.tableData[action.name].dataSource = action.data\n            if(action.add) {\n                const nv = State.tableData[action.name].tableVersion\n                State.tableData[action.name].tableVersion = -(Math.abs(nv) + 1)\n            }\n            break\n\n        case \"setTableInfo\":\n            initTableData(action.name)\n            State.tableData[action.name].tableInfo = action.data\n            break\n        case \"clearRedux\":\n            return {\n                tableData: {}\n            };\n\n        default:\n\n    }\n    return State\n}\n","import {ExamAction} from \"../Action/exam\";\nimport {ExamState} from \"../../Type/IExam\";\n\n\nconst initState: ExamState = {\n    examInfo: {},\n    examProListInfo: {},\n    examAnswerSheetInfo: {}\n}\n\n\nexport const ExamReducer = (state: ExamState = initState, action: ExamAction) => {\n    let State: ExamState = {...state}\n    switch (action.type) {\n        case \"setAnswerSheet\":\n            State.examAnswerSheetInfo[action.key] = action.data\n            break\n        case \"setProLists\":\n            State.examProListInfo = {\n                ...State.examProListInfo,\n                ...action.data\n            }\n            break\n        case \"setExamInfo\":\n            State.examInfo[action.key] = action.data\n            break\n        case \"clearRedux\":\n            return {\n                examInfo: {},\n                examProListInfo: {},\n                examAnswerSheetInfo: {}\n            };\n        default:\n            break\n    }\n    return State\n}","import deepClone from \"Utils/deepClone\";\nimport {ConfigState} from \"../../Type/IConfig\";\nimport {ConfigAction} from \"../Action/config\";\nimport {languageMap} from \"../../Config/i18n\";\nimport {initLanguage} from \"../../Utils/initLanguage\";\n\nconst initState: ConfigState = {\n    lang: languageMap[initLanguage()],\n    langCode: \"\",\n    mode: \"exam\",\n    timestamp: Date.now(),\n    copyRight: \"\"\n}\n\n\nexport const ConfigReducer = (state: ConfigState = initState, action: ConfigAction) => {\n    // 此处不做深拷贝，redux无法检测到更新\n    let State = deepClone(state)\n\n    switch (action.type) {\n        case \"updateLanguage\":\n            State.lang = action.lang\n            State.langCode = action.langCode\n            break\n        case \"updateTimestamp\":\n            State.timestamp = action.timestamp\n            break\n\n        case \"setCopyRight\":\n            State.copyRight = action.data\n            break\n\n        case \"clearRedux\":\n            return initState;\n\n        default:\n            break\n    }\n\n    return State\n}\n","import {ProblemState} from \"../../Type/IProblem\";\nimport {ProblemAction} from \"../Action/problem\";\n\nconst initState: ProblemState = {\n    ProblemInfo: {}\n}\n\nexport const ProblemReducer = (state: ProblemState = initState, action: ProblemAction) => {\n    // 此处不做深拷贝，redux无法检测到更新\n    let State = {...state}\n    switch (action.type) {\n        case \"setProblemInfo\":\n            State.ProblemInfo[action.key] = action.data\n            break\n        case \"clearRedux\":\n            return {\n                ProblemInfo: {}\n            };\n    }\n    return State\n}","import deepClone from \"Utils/deepClone\";\nimport {UserState} from \"../../Type/Iuser\";\nimport {UserAction} from \"../Action/user\";\n\nconst initState: UserState = {\n    isLogin: false\n}\n\nexport const UserReducer = (state: UserState = initState, action: UserAction) => {\n    // 此处不做深拷贝，redux无法检测到更新\n    let State: UserState = deepClone(state)\n    switch (action.type) {\n        case \"setUserInfo\":\n            State.userInfo = action.data\n            break\n        case \"userLogin\":\n            State.isLogin = true\n            break\n        case \"userLogout\":\n            State.isLogin = false\n            State.userInfo = undefined\n            // message.info(\"已退出登录\")\n            break\n\n        default:\n            break\n    }\n    return State\n}","import deepClone from \"Utils/deepClone\";\nimport {ManageState} from \"../../Type/IManage\";\nimport {ManageAction} from \"../Action/manage\";\n\n\nconst initState: ManageState = {\n    manageInitData: {}\n}\n\n\nexport const ManageReducer = (state: ManageState = initState, action: ManageAction) => {\n    // 此处不做深拷贝，redux无法检测到更新\n    let State: ManageState = deepClone(state)\n    switch (action.type) {\n        case \"addManageInitData\":\n            State.manageInitData[action.key] = action.data\n            break\n        case \"clearRedux\":\n            return {\n                manageInitData: {}\n            };\n    }\n    return State\n}","import {SubmissionState} from \"../../Type/ISubmission\";\nimport {SubmissionAction} from \"../Action/submission\";\n\nconst initState: SubmissionState = {\n    SubmissionModalVis: false,\n    submissionListInfo: {}\n}\n\nexport const SubmissionReducer = (state: SubmissionState = initState, action: SubmissionAction) => {\n    // 此处不做深拷贝，redux无法检测到更新\n    let State: SubmissionState = {...state}\n    switch (action.type){\n        case \"setTopSubmission\":\n            State.TopSubmissionId = action.submissionID\n            State.TopSubmissionInfo = action.submissionInfo\n            break\n        case \"setSubmissionModalVis\":\n            State.SubmissionModalVis = action.data\n            break\n        case \"setSubmissionListInfo\":\n            State.submissionListInfo[action.key] = action.data\n            break\n        case \"clearRedux\":\n            return initState;\n    }\n    return State\n}","import {ContestAction, ContestState} from \"../Action/contest\";\n\nconst initState: ContestState = {\n    contestInfo: {},\n    minWidth: 0,\n    afterContestSubmission: false,\n    sliderTime: 0,\n    allowSliderMove: false,\n    openSliderMove: false,\n    exportData: []\n}\n\nexport const ContestReducer = (state: ContestState = initState, action: ContestAction) => {\n    let State = {...state}\n    switch (action.type){\n        case \"setContestInfo\":\n            State.contestInfo[action.key] = action.data\n            break\n\n        case \"setExportData\":\n            State.exportData = action.data\n            break\n\n        case \"setMinWidth\":\n            State.minWidth = action.data\n            break\n        case \"setAfterContestSubmission\":\n            State.afterContestSubmission = action.data\n            break\n        case \"setAllowSliderMove\":\n            State.allowSliderMove = action.data\n            break\n        case \"setSliderTime\":\n            State.sliderTime = action.data\n            break\n        case \"setOpenSliderMove\":\n            State.openSliderMove = action.data\n            break\n        case \"clearRedux\":\n            return {\n                contestInfo: {},\n                minWidth: 0,\n                afterContestSubmission: false,\n                sliderTime: 0,\n                allowSliderMove: false,\n                openSliderMove: false\n            };\n    }\n    return State\n}","import {ProblemSetAction, ProblemSetState} from \"../Action/problemSet\";\n\nconst initState: ProblemSetState = {\n    problemSetInfo: {},\n}\n\nexport const ProblemSetReducer = (state: ProblemSetState = initState, action: ProblemSetAction) => {\n    let State = {...state}\n    switch (action.type) {\n        case \"setProblemSetInfo\":\n            State.problemSetInfo[action.key] = action.data\n            break\n\n        case \"clearRedux\":\n            return initState;\n    }\n    return State\n}","import deepClone from \"../../Utils/deepClone\";\nimport {CommonAction, CommonState} from \"../Action/common\";\n\nconst initState: CommonState = {\n    keyValueData: {}\n}\n\nexport const CommonReducer = (state: CommonState = initState, action: CommonAction) => {\n    let State: CommonState = deepClone(state)\n\n    switch (action.type) {\n        case \"setKeyValue\":\n            State.keyValueData[action.key] = action.value\n            break\n\n        case \"clearRedux\":\n            return initState;\n\n        default:\n            break\n    }\n\n    return State\n}","import {combineReducers} from \"redux\";\n\nimport {TableReduce} from \"../Reducer/table\";\nimport {ExamReducer} from \"../Reducer/exam\";\nimport {ConfigReducer} from \"../Reducer/config\";\nimport {ProblemReducer} from \"../Reducer/problem\";\nimport {UserReducer} from \"../Reducer/user\";\nimport {ManageReducer} from \"../Reducer/manage\";\nimport {SubmissionReducer} from \"../Reducer/submission\";\nimport {ContestReducer} from \"../Reducer/contest\";\nimport {ProblemSetReducer} from \"../Reducer/problemSet\";\nimport {CommonReducer} from \"../Reducer/common\";\n\n// 全局创建多个 reducer 在这里合并统一调度\nexport const rootReducers =\n    combineReducers({\n        TableReduce,            // 通用表格部分\n        ExamReducer,            // 考试模块\n        ConfigReducer,          // 全局配置\n        ProblemReducer,         // 题目模块\n        UserReducer,            // 用户模块\n        ManageReducer,          // 管理端\n        SubmissionReducer,\n        ContestReducer,\n        ProblemSetReducer,\n        CommonReducer\n    })","import {applyMiddleware, createStore} from \"redux\";\nimport {rootReducers} from \"./rootReducer\";\nimport thunk from \"redux-thunk\";\n\nimport {composeWithDevTools} from 'redux-devtools-extension';\n\n// 全局就管理一个store\nexport const store = createStore(rootReducers,\n    composeWithDevTools(\n        applyMiddleware(thunk)\n    )\n)","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css';\nimport {Provider} from 'react-redux';\nimport App from './App';\nimport {store} from \"./Redux/Store\";\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n     <Provider store={store}>\n        <App/>\n     </Provider>,\n   // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// 表格中的默认页数\nexport const defaultPageSize = 20\nexport const UrlPrefix = \"/v2\"\nexport const MaxCodeLength = 1024 * 50\n\nexport const PREDEFINED_CHECKERS = [\n    {\n        name: 'lcmp.cpp',\n        description: 'Lines, ignores whitespaces'\n    },\n    {\n        name: 'hcmp.cpp',\n        description: 'Single huge integer'\n    },\n    {\n        name: 'ncmp.cpp',\n        description: 'Single or more int64, ignores whitespaces'\n    },\n    {\n        name: 'nyesno.cpp',\n        description: 'Zero or more yes/no, case insensitive'\n    },\n    {\n        name: 'rcmp4.cpp',\n        description: 'Single or more double, max any error 1E-4'\n    },\n    {\n        name: 'rcmp6.cpp',\n        description: 'Single or more double, max any error 1E-6'\n    },\n    {\n        name: 'rcmp9.cpp',\n        description: 'Single or more double, max any error 1E-9'\n    },\n    {\n        name: 'wcmp.cpp',\n        description: 'Sequence of tokens'\n    },\n    {\n        name: 'yesno.cpp',\n        description: 'Single yes or no, case insensitive'\n    }\n];\n\n\nexport const SPJ_Code = `/*\n此代码需要使用 C++ 编写，可以使用 Testlib 库，\n其用法请参见：https://oi-wiki.org/tools/testlib/\n*/`\n\nexport const SPJ_Config = `{\n  \"compile\": {\n    \"srcName\": \"spj.cc\",\n    \"maxCpuTime\": 5000,\n    \"maxRealTime\": 6000,\n    \"maxMemory\": 262144,\n    \"commands\": [\n      \"/usr/bin/g++ -I/ -DONLINE_JUDGE -O2 -w -fmax-errors=3 -std=c++11 spj.cc -lm -o spj\"\n    ]\n  },\n  \"run\": {\n    \"command\": \"spj\",\n    \"seccompRule\": null,\n    \"maxCpuTimeFactor\": 2,\n    \"maxRealTimeFactor\": 2,\n    \"maxMemoryFactor\": 1,\n    \"envs\": null\n  }\n}`\n\nexport const NEWLINE_CONVERT_INDEX = {\n    DEFAULT: '',\n    DOS2UNIX: 'dos2unix',\n    UNIX2DOS: 'unix2dos'\n};\n\nexport const NEWLINE_CONVERT = {\n    [NEWLINE_CONVERT_INDEX.DOS2UNIX]: {\n        name: NEWLINE_CONVERT_INDEX.DOS2UNIX,\n        description: '将 DOS(CR-LF) 转化为 UNIX(LF)'\n    },\n    [NEWLINE_CONVERT_INDEX.UNIX2DOS]: {\n        name: NEWLINE_CONVERT_INDEX.UNIX2DOS,\n        description: '将 UNIX(LF) 转化为 DOS(CR-LF)'\n    },\n    [NEWLINE_CONVERT_INDEX.DEFAULT]: {\n        name: NEWLINE_CONVERT_INDEX.DEFAULT,\n        description: '不进行转化'\n    }\n};\n\nexport const scoreModeDefault = `{\n    \"key\": \"1\",\n    \"title\": \"作业\",\n    \"score\": 100,\n    \"children\": [\n        {\n            \"key\": \"1-1\",\n            \"title\": \"T1\",\n            \"score\": 50,\n            \"answer\": \"$15$\",\n            \"info\": [\n                [10, \"全部正确\"],\n                [5, \"部分正确\"],\n                [0, \"错误\"]\n            ]\n        },\n        {\n            \"key\": \"1-2\",\n            \"title\": \"T2\",\n            \"score\": 50,\n            \"answer\": \"$64$\",\n            \"info\": [\n                [10, \"全部正确\"],\n                [5, \"部分正确\"],\n                [0, \"错误\"]\n            ]\n        },\n    ]\n}`"],"sourceRoot":""}