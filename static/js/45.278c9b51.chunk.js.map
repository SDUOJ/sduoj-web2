{"version":3,"sources":["Component/common/Table/TableWithPagination.tsx","Component/common/Table/TableWithAllData.tsx","Component/submission/SubmissionList/SubmissionList.tsx","Component/common/Table/TableWithSelection.tsx","../node_modules/antd/es/typography/Link.js","../node_modules/antd/es/typography/Paragraph.js","../node_modules/antd/es/typography/Text.js","../node_modules/antd/es/typography/index.js","../node_modules/@ant-design/icons-svg/es/asn/TeamOutlined.js","../node_modules/@ant-design/icons/es/icons/TeamOutlined.js","Assert/img/champion.svg","../node_modules/@ant-design/icons-svg/es/asn/FileTextOutlined.js","../node_modules/@ant-design/icons/es/icons/FileTextOutlined.js","Component/contest/Rank.tsx"],"names":["connect","state","UState","UserReducer","TState","TableReduce","roles","userInfo","tableData","dispatch","setTableInfo","name","data","type","setDataSource","add","withTranslation","withRouter","props","useState","total","setTotal","setTableDataX","loading","setLoading","PageNow","setPageNow","ck","defaultPageSize","PageSize","setPageSize","searchText","setSearchText","tableVersion","setTableVersion","setTableData","undefined","getInfo","pageNow","pageSize","searchKey","moreProps","propsTableInfo","tableInfo","form","setFieldsValue","pn","ps","sk","fmp","getFieldsValue","API","then","rows","APIRowsTransForm","totalNum","totalPage","useEffect","initRequestProps","useForm","onFinish","values","JSON","stringify","onReset","resetFields","tf","valuesAfter","propsTableVersion","dataSource","useList","title","bordered","size","className","cardProps","extra","search","getForm","placeholder","t","onSearch","text","enterButton","style","width","useFormBtn","marginLeft","onClick","htmlType","grid","itemLayout","renderItem","pagination","onChange","page","current","hideOnSinglePage","showQuickJumper","showLessItems","showSizeChanger","pageSizeOptions","rowKey","columns","rowSelection","React","memo","DragHandle","SortableHandle","cursor","color","SortableItem","SortableElement","XSortableContainer","SortableContainer","onSortEnd","oldIndex","newIndex","arrayMoveImmutable","afterDrag","sortColumns","dataIndex","render","useDrag","concat","components","body","wrapper","useDragHandle","disableAutoscroll","helperClass","row","restProps","index","findIndex","x","nextProps","selectedRowKeys","length","updateTrick","addTableVersion","setSelectedRowKeys","setTopSubmission","submissionID","submissionInfo","setSubmissionModalVis","webSocketOpen","setWebSocketOpen","webSocketQueryList","setWebSocketQueryList","refreshDisable","setRefreshDisable","showSubmission","record","submissionId","problemTitle","TimeLimit","timeLimit","MemoryLimit","memoryLimit","scoreMod","sumScore","testcaseMod","QuerySubmissionAPI","key","caseType","StateList","indexOf","SubmissionMap","append","RunningStep","checkpointNum","publicCheckpointNum","Math","floor","moment","fromNow","columnsAll","problemCodeRender","open","dataHandle","submissionIdHex","checkpointType","checkpointIndex","judgeResult","judgeScore","usedTime","usedMemory","dt","Index","value","result","toString","score","runningNumber","parseInt","nowID","queryList","lessInfo","minWidth","judgeAuth","cApi","rejudge","afterSuccess","icon","message","success","setTimeout","disabled","disableSelection","Item","label","onPressEnter","e","allowClear","RunningResultList","map","Option","isValueEmpty","v","match","charCodeAt","push","submitTime","gmtCreate","TableWithSelection","this","selections","onSelect","changeableRowKeys","newSelectedRowKeys","filter","includes","uesAlldata","Component","__rest","s","p","Object","prototype","hasOwnProperty","call","getOwnPropertySymbols","i","propertyIsEnumerable","Link","_a","ref","ellipsis","rel","baseRef","mergedProps","_extends","target","navigate","Base","component","Paragraph","Text","mergedEllipsis","_typeof","omit","Typography","OriginTypography","Title","TeamOutlined","AntdIcon","_objectSpread","TeamOutlinedSvg","displayName","_path","_path2","_excluded","assign","arguments","source","apply","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","sourceSymbolKeys","SvgChampion","_ref","svgRef","titleId","viewBox","xmlns","height","id","d","fill","ForwardRef","FileTextOutlined","FileTextOutlinedSvg","State","ContestReducer","ContestInfo","contestInfo","afterContestSubmission","allowSliderMove","sliderTime","openSliderMove","setMinWidth","setAllowSliderMove","setExportData","contestId","params","rankInfo","setRankInfo","setData","timeState","TimeRangeState","gmtStart","gmtEnd","SummaryInfo","setSummaryInfo","Date","now","lastSliderTime","setLastSliderTime","ModalVis","setModalVis","sbl_user","setSbl_user","sbl_pro","setSbl_pro","getRank","res","submission","submissions","sort","a","b","abs","problemInfo","problems","summaryInfo","SumNumber","submitNum","acceptNum","beforeSort","ACNumber","penalty","cell","official","convertValue","proId","minTim","problemWeight","min","getDiffSecond","minTime","tries","problemResults","max","proSet","sbm","time","submissionBeforeAC","obj","username","nickname","rank","Cell","features","mode","nowRank","sumIndex","afterSort","problemColumns","paddingLeft","paddingRight","float","marginTop","textAlign","fontWeight","fontSize","span","tableWidth","String","fromCharCode","problemCode","SData","visible","footer","destroyOnClose","onCancel","SubmissionList","btnText","getContestSubmissionList","getContestSubmissionInfo","rowClassName","summary","Summary","Row","colSpan","Icon","Champion","tooltip","TimeDiff"],"mappings":"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","file":"static/js/45.278c9b51.chunk.js","sourcesContent":["import {Button, Card, Form, List, Space, Table} from \"antd\";\nimport React, {Dispatch, useEffect, useState} from \"react\";\nimport {defaultPageSize} from \"../../../Config/constValue\";\nimport {UserState} from \"../../../Type/Iuser\";\nimport {connect} from \"react-redux\";\nimport {withTranslation} from \"react-i18next\";\nimport {withRouter} from \"react-router\";\nimport Search from \"antd/es/input/Search\";\nimport {TableState} from \"../../../Type/ITable\";\nimport {ck} from \"../../../Utils/empty\";\nimport {SizeType} from \"antd/lib/config-provider/SizeContext\";\nimport {ColumnsType} from \"antd/lib/table/interface\";\nimport {useForm} from \"antd/es/form/Form\";\n\nexport interface TableWithPaginationProps {\n    API: any                  // 表格查询数据的接口\n    size: SizeType            // 表格的大小\n    columns: ColumnsType<any> // 表格的列\n    name: string              // 表格名称\n    APIRowsTransForm?: any    // 针对API传输的数据进行转化的函数\n    search?: boolean          // 是否开启搜索功能\n    defaultPageSize?: number  // 表格默认的页大小\n\n    // 面向 可选择的行 开放的接口\n    // setDataSource?: any       // 输出当前表格的数据\n    rowKey?: any              // 作为 key 记录的值\n    rowSelection?: any        // 可选列的相关配置\n\n}\n\nconst TableWithPagination = (props: any) => {\n    const [total, setTotal] = useState<number>(0)                   // 项的总数\n    const [tableData, setTableDataX] = useState()                            // 表格核心数据\n    const [loading, setLoading] = useState(true)                    // 表格的加载状态\n    const [PageNow, setPageNow] = useState<number>(1)               // 当前的页码数\n    const [PageSize, setPageSize] = useState<number>(ck(props.defaultPageSize, defaultPageSize))         // 当前的页大小\n    const [searchText, setSearchText] = useState<string | undefined>()        // 搜索的文本\n    const [tableVersion, setTableVersion] = useState<number>(0)     // 表格版本（控制表格刷新）\n\n    const setTableData = (data: any) => {\n        setTableDataX(data)\n        // 若有 选中行 的相关配置，传递数据进行更新\n        if (props.setDataSource !== undefined && props.name !== undefined)\n            props.setDataSource(data, props.name)\n    }\n    // 这里的所有的参数都只能增量的修改，不能删除，删除需要手动更新 redux\n    const getInfo = (pageNow?: number, pageSize?: number, searchKey?: string, moreProps?: any) => {\n        const propsTableInfo = props.tableData[props.name]?.tableInfo\n        if (propsTableInfo !== undefined) {\n            if (moreProps === undefined && propsTableInfo.moreProps !== undefined){\n                form.setFieldsValue(propsTableInfo.moreProps)\n            }\n            pageNow = pageNow ?? propsTableInfo.pageNow\n            pageSize = pageSize ?? propsTableInfo.pageSize\n            searchKey = searchKey ?? propsTableInfo.searchKey\n            moreProps = moreProps ?? propsTableInfo.moreProps\n        }\n        let pn = pageNow ?? PageNow\n        let ps = pageSize ?? PageSize\n        let sk = searchKey ?? searchText\n        let fmp = moreProps ?? form.getFieldsValue()\n        setPageNow(pn)\n        setPageSize(ps)\n        setSearchText(sk)\n        setLoading(true)\n        props.API({\n            pageNow: pn,\n            pageSize: ps,\n            searchKey: sk,\n            ...fmp\n        }).then((data: any) => {\n            // console.log(\"data\", data)\n            if (data.rows === null) data.rows = []\n            if (props.APIRowsTransForm !== undefined) {\n                setTableData(props.APIRowsTransForm(data.rows))\n            } else setTableData(data.rows)\n            if (data.totalNum !== undefined && data.totalNum !== \"0\") {\n                setTotal(data.totalNum)\n                props.name && props.setTableInfo(props.name, {\n                    total: data.totalNum,\n                    pageNow: pn,\n                    pageSize: ps,\n                    searchKey: sk,\n                    moreProps: fmp\n                })\n            } else {\n                setTotal(ps * data.totalPage);\n                props.name && props.setTableInfo(props.name, {\n                    total: ps * data.totalPage,\n                    pageNow: pn,\n                    pageSize: ps,\n                    searchKey: sk,\n                    moreProps: fmp\n                })\n            }\n            setLoading(false)\n        })\n    }\n\n    useEffect(() => {\n        form.setFieldsValue(props.initRequestProps)\n        getInfo()\n    }, [props.name])\n\n    // 带有表单的筛选\n    const [form] = useForm()\n    const onFinish = () => {\n        const values = form.getFieldsValue()\n        if (JSON.stringify(values) !== \"{}\")\n            getInfo(1, PageSize, undefined, values)\n    };\n    const onReset = () => {\n        const values = form.getFieldsValue()\n        form.resetFields();\n        const tf = props.tableData[props.name]?.tableInfo\n        props.name && props.setTableInfo(props.name, {\n            total: tf.total,\n            pageNow: tf.pageNow,\n            pageSize: tf.pageSize,\n            searchKey: tf.searchKey,\n            moreProps: undefined\n        })\n        const valuesAfter = form.getFieldsValue()\n        // 重置前后若发生改变，则重新加载表格\n        if (JSON.stringify(values) !== JSON.stringify(valuesAfter))\n            getInfo(1, PageSize, undefined, undefined)\n\n    };\n\n\n    useEffect(() => {\n        // 监听表格的版本变化，当版本变更时更新表格\n        const propsTableVersion = props.tableData[props.name]?.tableVersion\n        if (propsTableVersion !== undefined && tableVersion !== propsTableVersion) {\n            // 如果数据被外部应用更新，则用 redux 中的数据更新当前行\n            if (propsTableVersion < 0) {\n                setTableVersion(-propsTableVersion)\n                setTableDataX(props.tableData[props.name]?.dataSource)\n            } else {\n                // 否则，重新进行请求\n                setTableVersion(propsTableVersion)\n                const values = form.getFieldsValue()\n                getInfo(PageNow, PageSize, searchText, values)\n            }\n        }\n    }, [props.tableData, tableVersion])\n\n    return (\n        <>\n            {props.useList && (\n                <Card\n                    title={props.title}\n                    bordered={true}\n                    size={\"default\"}\n                    className={props.cardProps ?? \"zeroBodyPaddingLeft\"}\n                    extra={\n                        (props.search === true || props.getForm !== undefined) && (\n                            <>\n                                {props.search === true && (\n                                    <Search\n                                        key={\"search\"}\n                                        placeholder={props.t(\"searchUser\")}\n                                        onSearch={(text) => {\n                                            setSearchText(text)\n                                            setPageNow(1)\n                                            const values = form.getFieldsValue()\n                                            getInfo(1, PageSize, text, values)\n                                        }}\n                                        enterButton\n                                        style={{width: 300}}\n                                    />\n                                )}\n                                {props.getForm !== undefined && (\n                                    <Form form={form}>\n                                        {props.getForm(onFinish)}\n                                        {props.useFormBtn && (\n                                            <Space style={{marginLeft: \"30px\"}} size={20}>\n                                                <Button type=\"primary\" onClick={onFinish}>\n                                                    筛选\n                                                </Button>\n                                                <Button htmlType=\"button\" onClick={onReset}>\n                                                    重置\n                                                </Button>\n                                            </Space>\n                                        )}\n                                    </Form>\n                                )}\n                            </>\n                        )\n                    }\n                >\n                    <List\n                        grid={props.grid}\n                        itemLayout={\"vertical\"}\n                        loading={loading}\n                        size={props.size}\n                        dataSource={tableData}\n                        renderItem={props.renderItem}\n                        pagination={{\n                            onChange: (page, pageSize) => {\n                                getInfo(page, pageSize)\n                            },\n                            current: PageNow,\n                            pageSize: PageSize,\n                            total: total,\n                            size: \"small\",\n                            hideOnSinglePage: true,\n                            showQuickJumper: true,\n                            showLessItems: true,\n                            showSizeChanger: ck(props.showSizeChanger, true),\n                            pageSizeOptions: [\"5\", \"15\", \"20\", \"50\", \"80\"],\n                        }}\n                    />\n                </Card>\n            )}\n            {!props.useList && (\n                <Card\n                    bordered={false}\n                    size={\"small\"}\n                    extra={\n                        (props.search === true || props.getForm !== undefined) && (\n                            <>\n                                {props.search === true && (\n                                    <Search\n                                        key={\"search\"}\n                                        placeholder={\"搜索\"}\n                                        onSearch={(text) => {\n                                            setSearchText(text)\n                                            setPageNow(1)\n                                            getInfo(1, PageSize, text)\n                                        }}\n                                        enterButton\n                                        style={{width: 300}}\n                                    />\n                                )}\n                                {props.getForm !== undefined && (\n                                    <Form form={form}>\n                                        {props.getForm(onFinish)}\n                                        <Space style={{marginLeft: \"30px\"}} size={20}>\n                                            <Button type=\"primary\" onClick={onFinish}>\n                                                {props.t(\"filtering\")}\n                                            </Button>\n                                            <Button htmlType=\"button\" onClick={onReset}>\n                                                {props.t(\"Reset\")}\n                                            </Button>\n                                        </Space>\n                                    </Form>\n                                )}\n                            </>\n                        )\n                    }\n                >\n                    <Table\n                        rowKey={props.rowKey}\n                        loading={loading}\n                        size={props.size}\n                        columns={props.columns}\n                        rowSelection={props.rowSelection}\n                        dataSource={tableData}\n                        pagination={{\n                            onChange: (page, pageSize) => {\n                                getInfo(page, pageSize)\n                            },\n                            current: PageNow,\n                            pageSize: PageSize,\n                            total: total,\n                            hideOnSinglePage: true,\n                            showQuickJumper: true,\n                            showLessItems: true,\n                            showSizeChanger: ck(props.showSizeChanger, true),\n                            pageSizeOptions: [\"5\", \"15\", \"20\", \"50\", \"80\"],\n                        }}\n                    />\n                </Card>\n            )}\n        </>\n    )\n\n}\n\nconst mapStateToProps = (state: any) => {\n    const UState: UserState = state.UserReducer\n    const TState: TableState = state.TableReduce\n    return {\n        roles: UState.userInfo?.roles,\n        tableData: {...TState.tableData}\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\n    setTableInfo: (name: string, data: any) => dispatch({\n        type: \"setTableInfo\",\n        name: name,\n        data: data\n    }),\n    setDataSource: (data: any, name: string) =>\n        dispatch({type: \"setDataSource\", data: data, name: name, add: false})\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withTranslation()(\n    withRouter(TableWithPagination)\n))\n\n","import {Table} from \"antd\";\nimport React, {Dispatch, useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport {withTranslation} from \"react-i18next\";\nimport {withRouter} from \"react-router\";\nimport {TableState} from \"../../../Type/ITable\";\nimport {SizeType} from \"antd/lib/config-provider/SizeContext\";\nimport {ColumnsType} from \"antd/lib/table/interface\";\nimport {SortableContainer, SortableElement, SortableHandle} from \"react-sortable-hoc\";\nimport {MenuOutlined} from \"@ant-design/icons\";\nimport {arrayMoveImmutable} from \"array-move\";\n\nexport interface TableWithPaginationProps {\n    API: any                  // 表格查询数据的接口\n    size: SizeType            // 表格的大小\n    columns: ColumnsType<any> // 表格的列\n    name: string              // 表格名称\n    APIRowsTransForm?: any    // 针对API传输的数据进行转化的函数\n\n    // 面向 可选择的行 开放的接口\n    rowKey?: any              // 作为 key 记录的值\n\n}\n\nconst TableWithAllData = (props: any) => {\n    const [tableData, setTableDataX] = useState([])                            // 表格核心数据\n    const [loading, setLoading] = useState(true)                    // 表格的加载状态\n    const [tableVersion, setTableVersion] = useState<number>(0)     // 表格版本（控制表格刷新）\n    // const [sortSwitch, setSortSwitch] = useState<boolean>(false);           // 操作是否开启排序模式\n\n\n    const setTableData = (data: any) => {\n        setTableDataX(data)\n        // 若有 选中行 的相关配置，传递数据进行更新\n        if (props.setDataSource !== undefined && props.name !== undefined)\n            props.setDataSource(data, props.name)\n    }\n\n    const getInfo = () => {\n        setLoading(true)\n        props.API().then((data: any) => {\n            // console.log(\"data\", data)\n            if (data === null) data = []\n            if (props.APIRowsTransForm !== undefined) {\n                setTableData(props.APIRowsTransForm(data))\n            } else setTableData(data)\n            setLoading(false)\n        })\n    }\n\n    useEffect(() => {\n        getInfo()\n    }, [props.name])\n\n    useEffect(() => {\n        // 监听表格的版本变化，当版本变更时更新表格\n        const propsTableVersion = props.tableData[props.name]?.tableVersion\n        if (propsTableVersion !== undefined && tableVersion !== propsTableVersion) {\n            // 如果数据被外部应用更新，则用 redux 中的数据更新当前行\n            if (propsTableVersion < 0) {\n                setTableVersion(-propsTableVersion)\n                setTableDataX(props.tableData[props.name]?.dataSource)\n            } else {\n                // 否则，重新进行请求\n                setTableVersion(propsTableVersion)\n                getInfo()\n            }\n        }\n    }, [props.tableData, tableVersion])\n\n    // === 拖拽排序 ===\n    // 可拖拽的排序手柄\n    const DragHandle = SortableHandle(() => <MenuOutlined style={{cursor: 'grab', color: '#999'}}/>);\n    const SortableItem = SortableElement((props: any) => <tr {...props} />);\n    const XSortableContainer = SortableContainer((props: any) => <tbody {...props} />);\n    // 排序结束后\n    const onSortEnd = ({oldIndex, newIndex}: any) => {\n        // 当前排序是有效的\n        if (oldIndex !== newIndex) {\n            // 移动数组中的元素，并设置到当前的状态\n            setTableData(arrayMoveImmutable(tableData, oldIndex, newIndex))\n            props.afterDrag && props.afterDrag(tableData, oldIndex, newIndex)\n        }\n    };\n    const DraggableContainer = (props: any) => {\n        return (\n            <XSortableContainer\n                useDragHandle\n                disableAutoscroll\n                helperClass=\"row-dragging\"\n                onSortEnd={onSortEnd}\n                {...props}\n            />\n        )\n    }\n    const DraggableBodyRow = ({className, style, ...restProps}: any) => {\n        // function findIndex base on Table rowKey props and should always be a right array index\n        const index = tableData.findIndex((x: any) => x[props.rowKey] === restProps['data-row-key']);\n        return <SortableItem index={index} {...restProps} />\n    };\n    const sortColumns: any[] = [\n        {\n            title: \"\",\n            dataIndex: 'sort',\n            width: 50,\n            className: \"drag-visable\",\n            render: () => <DragHandle/>,\n        }\n    ]\n\n    let columns = props.columns;\n    if (props.useDrag) columns = sortColumns.concat(columns)\n\n    return (\n        <Table\n            {...props}\n            rowSelection={props.rowSelection}\n            rowKey={props.rowKey}\n            loading={loading}\n            size={props.size}\n            columns={columns}\n            dataSource={tableData}\n            pagination={false}\n            components={{\n                body: {\n                    wrapper: DraggableContainer,\n                    row: DraggableBodyRow,\n                },\n            }}\n        />\n    )\n\n}\n\nconst mapStateToProps = (state: any) => {\n    const TState: TableState = state.TableReduce\n    return {\n        tableData: {...TState.tableData}\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\n    setTableInfo: (name: string, data: any) => dispatch({\n        type: \"setTableInfo\",\n        name: name,\n        data: data\n    }),\n    setDataSource: (data: any, name: string) =>\n        dispatch({type: \"setDataSource\", data: data, name: name, add: false})\n})\n\nexport default React.memo(connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(withTranslation()(\n        withRouter(TableWithAllData))), (props: any, nextProps: any) => {\n        return props.columns === nextProps.columns &&\n            (props.rowSelection?.selectedRowKeys.length === nextProps.rowSelection?.selectedRowKeys.length) &&\n            props.tableData === nextProps.tableData &&\n            props.updateTrick ===  nextProps.updateTrick\n    }\n)\n\n","import {withTranslation} from \"react-i18next\";\nimport {Button, Card, Form, Input, message, Select, Space} from \"antd\";\nimport {SyncJudging} from \"../SyncJudging\";\nimport cApi from \"../../../Utils/API/c-api\";\nimport {ReloadOutlined} from \"@ant-design/icons\";\nimport {RunningResultList, StateList, SubmissionMap, TopSubmissionInfoType} from \"../../../Type/ISubmission\";\nimport TestCase from \"../TestCase\";\nimport React, {Dispatch, useState} from \"react\";\nimport moment from \"moment\";\nimport TableWithSelection from \"../../common/Table/TableWithSelection\";\nimport ReJudge from \"../Func/ReJudge\";\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router\";\nimport {TableState} from \"../../../Type/ITable\";\nimport {ck, isValueEmpty} from \"../../../Utils/empty\";\nimport {UserState} from \"../../../Type/Iuser\";\nimport judgeAuth from \"../../../Utils/judgeAhtu\";\n\nconst SubmissionList = (props: any) => {\n\n    // 为了动态显示评测点信息，使用 ws 与后端进行链接\n    // ws 是否打开\n    const [webSocketOpen, setWebSocketOpen] = useState<boolean>(false)\n    // ws 发送的信息（在打开时，当前数据的变更将同步发送至 ws）\n    const [webSocketQueryList, setWebSocketQueryList] = useState<string[]>([])\n    const [refreshDisable, setRefreshDisable] = useState<boolean>(false)\n\n    const selectedRowKeys = ck(props.tableData[props.name]?.selectedRowKeys, [])\n    const dataSource = ck(props.tableData[props.name]?.dataSource, [])\n\n    const addCaseInfo = (data: any[]) => {\n\n        const submissionIdHex = data[0]\n        const submissionVersion = data[1]\n        const checkpointType = data[2]\n        const checkpointIndex = data[3]\n        const checkpointId = data[4]\n        const judgeResult = data[5]\n        const judgeScore = data[6]\n        const usedTime = data[7]\n        const usedMemory = data[8]\n\n        let dt = dataSource\n        const Index = dt.findIndex((value: any) => value.submissionId === submissionIdHex)\n        if (Index === -1) return\n        if (checkpointIndex < 0) {\n            dt[Index].result = checkpointIndex.toString()\n            if (checkpointIndex === -1) {\n                dt[Index].result = judgeResult\n                dt[Index].score = judgeScore\n                dt[Index].usedTime = usedTime\n                dt[Index].usedMemory = usedMemory\n            }\n            // 检查还有没有未更新完的\n            let runningNumber = 0\n            for (const x of dt) if (parseInt(x.result) <= 0) runningNumber += 1\n            if (runningNumber === 0) setWebSocketOpen(false)\n        } else {\n            let nowID = 0\n            if (checkpointType === 0) {\n                nowID = checkpointIndex + 1\n            } else if (checkpointType === 1) {\n                nowID = dt[Index].checkpointNum + checkpointIndex + 1\n            }\n            if (dt[Index].RunningStep < nowID) {\n                dt[Index].RunningStep = nowID\n                dt[Index].score += judgeScore\n            }\n        }\n        props.setDataSource(dt, props.name)\n    }\n\n    const showSubmission = (record: any) => {\n        props.setTopSubmission(record.submissionId, {\n            title: record.problemTitle,\n            TimeLimit: record.timeLimit,\n            MemoryLimit: record.memoryLimit,\n            scoreMod: record.sumScore === undefined ? \"disable\" : \"show\",\n            sumScore: record.sumScore,\n            testcaseMod: \"show\",\n            QuerySubmissionAPI: props.QuerySubmissionAPI\n        })\n        props.setSubmissionModalVis(true)\n    }\n\n    const columns = [\n        {\n            title: props.t(\"results\"),\n            dataIndex: \"result\",\n            key: \"result\",\n            render: (text: any, record: any) => {\n                return (\n                    <div onClick={() => {\n                        showSubmission(record)\n                    }}>\n                        <TestCase\n                            type={\"text\"}\n                            caseType={StateList.indexOf(SubmissionMap[text])}\n                            append={\n                                text === \"-2\" ?\n                                    \"(\" + record.RunningStep + \"/\" + (record.checkpointNum + record.publicCheckpointNum) + \")\"\n                                    : \"\"\n                            }\n                        />\n                    </div>\n\n                )\n            }\n        },\n        {\n            title: props.t(\"score\"),\n            dataIndex: \"score\",\n            key: \"score\",\n            render: (text: number, record: any) => {\n                if (record.sumScore === undefined)\n                    return text\n                return Math.floor(text / record.sumScore * 100) + \"%\"\n            }\n        },\n        {\n            title: props.t(\"submissionTime\"),\n            dataIndex: \"submitTime\",\n            key: \"submitTime\",\n            render: (text: any) => {\n                return moment(text).fromNow();\n            }\n        }\n    ]\n\n    const columnsAll = [\n        {\n            title: \"ID\",\n            dataIndex: \"submissionId\",\n            key: \"submissionId\",\n            render: (text: any, record: any) => {\n                return <Button type={\"link\"} size={\"small\"} onClick={() => {\n                    showSubmission(record)\n                }}>\n                    {text}\n                </Button>\n            }\n        },\n        {\n            title: props.t(\"username\"),\n            dataIndex: \"username\",\n            key: \"username\"\n        },\n        {\n            title: props.t(\"problemNo.\"),\n            dataIndex: \"problemCode\",\n            key: \"problemCode\",\n            render: props.problemCodeRender\n        },\n        {\n            title: props.t(\"problemName\"),\n            dataIndex: \"problemTitle\",\n            key: \"problemTitle\"\n        },\n        {\n            title: props.t(\"results\"),\n            dataIndex: \"result\",\n            key: \"result\",\n            width: 170,\n            render: (text: any, record: any) => {\n                return <TestCase\n                    type={\"text\"}\n                    caseType={StateList.indexOf(SubmissionMap[text])}\n                    append={\n                        text === \"-2\" ?\n                            \"(\" + record.RunningStep + \"/\" + (record.checkpointNum + record.publicCheckpointNum) + \")\" :\n                            \"\"\n                    }\n                />\n            }\n        },\n        {\n            title: props.t(\"score\"),\n            dataIndex: \"score\",\n            key: \"score\",\n            render: (text: number, record: any) => {\n                if (record.sumScore === undefined)\n                    return text\n                return Math.floor(text / record.sumScore * 100) + \"%\"\n            }\n        },\n        {\n            title: props.t(\"template\"),\n            dataIndex: \"judgeTemplateTitle\",\n            key: \"judgeTemplateTitle\"\n        },\n        {\n            title: props.t(\"memoryUsage\"),\n            dataIndex: \"usedMemory\",\n            key: \"usedMemory\",\n            render: (text: any) => {\n                return text + \" KB\"\n            }\n        },\n        {\n            title: props.t(\"timeUsage\"),\n            dataIndex: \"usedTime\",\n            key: \"usedTime\",\n            render: (text: any) => {\n                return text + \" ms\"\n            }\n        },\n        {\n            title: props.t(\"submissionTime\"),\n            dataIndex: \"submitTime\",\n            key: \"submitTime\",\n            render: (text: any) => {\n                return moment(text).fromNow();\n            }\n        }\n    ]\n\n    const getForm = (onFinish: any) => {\n        return (\n            <Space size={30}>\n                <Form.Item label={props.t(\"username\")} name={\"username\"}>\n                    <Input\n                        onPressEnter={(e: any) => {\n                            onFinish()\n                        }}\n                        allowClear\n                    />\n                </Form.Item>\n                <Form.Item label={props.t(\"problemNo.\")} name={\"problemCode\"}>\n                    <Input\n                        onPressEnter={(e: any) => {\n                            onFinish()\n                        }}\n                        allowClear\n                    />\n                </Form.Item>\n                <Form.Item label={props.t(\"JudgeResult\")} name={\"judgeResult\"}>\n                    <Select onChange={onFinish} allowClear style={{width: 200}}>\n                        {\n                            RunningResultList.map((value) => {\n                                return <Select.Option value={parseInt(value)}>\n                                    <TestCase type={\"text\"}\n                                              caseType={StateList.indexOf(SubmissionMap[value])}/>\n                                </Select.Option>\n                            })\n                        }\n                    </Select>\n                </Form.Item>\n            </Space>\n        )\n    }\n\n    const API = (data: any) => {\n        if (\"problemCode\" in data && !isValueEmpty(data[\"problemCode\"])) {\n            let v: string = data[\"problemCode\"]\n            if (v.length === 1) {\n                if (v.match(/^[a-z]$/) !== null) v = (v.charCodeAt(0) - 'a'.charCodeAt(0) + 1).toString()\n                if (v.match(/^[A-Z]$/) !== null) v = (v.charCodeAt(0) - 'A'.charCodeAt(0) + 1).toString()\n            } else if (v.match(/^[0-9]{4}$/) !== null) {\n                v = \"SDUOJ-\" + v\n            }\n            data[\"problemCode\"] = v\n        }\n        return props.API(data)\n    }\n\n    return (\n        <>\n            <Card\n                title={\n                    <Space>\n                        {props.title !== undefined ? props.title : props.t(\"submissionRecord\")}\n                        <SyncJudging\n                            open={webSocketOpen}\n                            dataHandle={addCaseInfo}\n                            queryList={webSocketQueryList}/>\n                    </Space>\n                }\n                style={props.lessInfo ? {} : {minWidth: 1200}}\n                className={props.lessInfo ? \"smallBodyPadding\" : \"\"}\n                extra={\n                    <Space>\n                        {props.lessInfo !== true && judgeAuth(props.roles, [\"admin\", \"superadmin\"]) && (\n                            <ReJudge\n                                API={cApi.rejudge}\n                                data={selectedRowKeys}\n                                afterSuccess={() => {\n                                    props.addTableVersion(props.name)\n                                    props.setSelectedRowKeys([], props.name)\n                                }}\n                            />\n                        )}\n                        <Button\n                            icon={<ReloadOutlined/>}\n                            onClick={() => {\n                                setRefreshDisable(true)\n                                props.addTableVersion(props.name)\n                                message.success(props.t(\"refreshSuccessfully\"))\n                                setTimeout(() => {\n                                    setRefreshDisable(false)\n                                }, 3000)\n                            }}\n                            disabled={refreshDisable}\n                        >\n                            {props.t(\"refresh\")}\n                        </Button>\n                    </Space>\n                }\n            >\n                <TableWithSelection\n                    disableSelection={props.lessInfo || !judgeAuth(props.roles, [\"admin\", \"superadmin\"])}\n                    defaultPageSize={props.lessInfo ? 5 : undefined}\n                    showSizeChanger={props.lessInfo ? false : undefined}\n                    columns={props.lessInfo ? columns : columnsAll}\n                    getForm={props.useForm === true ? getForm : undefined}\n                    name={props.name}\n                    size={\"small\"}\n                    rowKey={\"submissionId\"}\n                    API={API}\n                    APIRowsTransForm={(value: any) => {\n                        if (isValueEmpty(value)) value = []\n                        let webSocketQueryList = []\n                        let data: any = []\n                        for (const x of value) {\n                            if (x.judgeResult <= 0) webSocketQueryList.push(x.submissionId)\n                            data.push({\n                                ...x,\n                                score: x.judgeScore,\n                                RunningStep: 0,\n                                result: x.judgeResult.toString(),\n                                // sumScore: ck(x.sumScore, 100),\n                                sumScore: x.sumScore,\n                                submitTime: parseInt(x.gmtCreate),\n                            })\n                        }\n                        if (webSocketQueryList.length !== 0) {\n                            setWebSocketOpen(true)\n                            setWebSocketQueryList(webSocketQueryList)\n                        }\n                        return data\n                    }}\n                />\n            </Card>\n        </>\n    )\n}\n\n\nconst mapStateToProps = (state: any) => {\n    const TState: TableState = state.TableReduce\n    const UState: UserState = state.UserReducer\n    return {\n        tableData: TState.tableData,\n        roles: UState.userInfo?.roles\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\n    addTableVersion: (name: string) => dispatch({\n        type: \"addTableVersion\",\n        name: name,\n    }),\n    setSelectedRowKeys: (data: React.Key[], name: string) =>\n        dispatch({type: \"setSelectedRowKeys\", data: data, name: name}),\n    setDataSource: (data: any, name: string) =>\n        dispatch({type: \"setDataSource\", data: data, name: name, add: true}),\n    setTopSubmission: (submissionID: string, submissionInfo: TopSubmissionInfoType) => dispatch({\n        type: \"setTopSubmission\",\n        submissionID: submissionID,\n        submissionInfo: submissionInfo\n    }),\n    setSubmissionModalVis: (data: boolean) => dispatch({type: \"setSubmissionModalVis\", data: data})\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withTranslation()(\n    withRouter(SubmissionList)\n))\n","import React, {Component, Dispatch} from \"react\";\nimport {withTranslation} from \"react-i18next\";\nimport {withRouter} from \"react-router\";\nimport {connect} from \"react-redux\";\nimport TableWithPagination from \"./TableWithPagination\";\nimport {TableState} from \"../../../Type/ITable\";\nimport {ck} from \"../../../Utils/empty\";\nimport TableWithAllData from \"./TableWithAllData\";\n\n\nclass TableWithSelection extends Component<any, any> {\n\n    componentDidMount() {\n\n    }\n\n    setSelectedRowKeys = (data: any) =>{\n        this.props.setSelectedRowKeys(data, this.props.name)\n    }\n\n    render() {\n        const selectedRowKeys = ck(this.props.tableData[this.props.name]?.selectedRowKeys, [])\n        let rowSelection: any = {\n            selectedRowKeys,\n            onChange: (selectedRowKeys: React.Key[]) => {\n                this.setSelectedRowKeys(selectedRowKeys)\n            },\n            // 多选时的下拉选项\n            selections: [\n                {\n                    key: 'all',\n                    text: this.props.t(\"selectedAll\"),\n                    onSelect: (changeableRowKeys: React.Key[]) => {\n                        let newSelectedRowKeys = changeableRowKeys\n                        newSelectedRowKeys = newSelectedRowKeys.concat(selectedRowKeys.filter((key: React.Key) => {\n                            return !changeableRowKeys.includes(key);\n                        }))\n                        this.setSelectedRowKeys(newSelectedRowKeys)\n                    },\n                },\n                {\n                    key: 'clear',\n                    text: this.props.t(\"clear\"),\n                    onSelect: (changeableRowKeys: React.Key[]) => {\n                        let newSelectedRowKeys = selectedRowKeys.filter((key: React.Key) => {\n                            return !changeableRowKeys.includes(key);\n                        })\n                        this.setSelectedRowKeys(newSelectedRowKeys)\n                    },\n                },\n                {\n                    key: 'invert',\n                    text: this.props.t(\"invert\"),\n                    onSelect: (changeableRowKeys: React.Key[]) => {\n                        let newSelectedRowKeys = changeableRowKeys.filter((key:React.Key) => {\n                            return !selectedRowKeys.includes(key);\n                        });\n                        newSelectedRowKeys = newSelectedRowKeys.concat(selectedRowKeys.filter((key: React.Key) => {\n                            return !changeableRowKeys.includes(key);\n                        }))\n                        this.setSelectedRowKeys(newSelectedRowKeys)\n                    },\n                },\n            ]\n        };\n\n        return (\n            <>\n                {this.props.uesAlldata && (\n                    <TableWithAllData\n                        {... this.props}\n                        rowSelection={this.props.disableSelection ? undefined : rowSelection}\n                    />\n                )}\n                {this.props.uesAlldata !== true && (\n                    <TableWithPagination\n                        {... this.props}\n                        rowSelection={this.props.disableSelection ? undefined : rowSelection}\n                    />\n                )}\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state: any) => {\n    const TState: TableState = state.TableReduce\n    return {\n        tableData: TState.tableData\n    }\n\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\n    setSelectedRowKeys: (data: React.Key[], name: string) =>\n        dispatch({type: \"setSelectedRowKeys\", data: data, name: name}),\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withTranslation()(\n    withRouter(TableWithSelection)\n))\n\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport warning from '../_util/warning';\nimport Base from './Base';\n\nvar Link = function Link(_a, ref) {\n  var ellipsis = _a.ellipsis,\n      rel = _a.rel,\n      restProps = __rest(_a, [\"ellipsis\", \"rel\"]);\n\n  process.env.NODE_ENV !== \"production\" ? warning(_typeof(ellipsis) !== 'object', 'Typography.Link', '`ellipsis` only supports boolean value.') : void 0;\n  var baseRef = React.useRef(null);\n  React.useImperativeHandle(ref, function () {\n    return baseRef.current;\n  });\n\n  var mergedProps = _extends(_extends({}, restProps), {\n    rel: rel === undefined && restProps.target === '_blank' ? 'noopener noreferrer' : rel\n  }); // https://github.com/ant-design/ant-design/issues/26622\n  // @ts-ignore\n\n\n  delete mergedProps.navigate;\n  return /*#__PURE__*/React.createElement(Base, _extends({}, mergedProps, {\n    ref: baseRef,\n    ellipsis: !!ellipsis,\n    component: \"a\"\n  }));\n};\n\nexport default /*#__PURE__*/React.forwardRef(Link);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport Base from './Base';\n\nvar Paragraph = function Paragraph(props, ref) {\n  return /*#__PURE__*/React.createElement(Base, _extends({\n    ref: ref\n  }, props, {\n    component: \"div\"\n  }));\n};\n\nexport default /*#__PURE__*/React.forwardRef(Paragraph);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport warning from '../_util/warning';\nimport Base from './Base';\n\nvar Text = function Text(_a, ref) {\n  var ellipsis = _a.ellipsis,\n      restProps = __rest(_a, [\"ellipsis\"]);\n\n  var mergedEllipsis = React.useMemo(function () {\n    if (ellipsis && _typeof(ellipsis) === 'object') {\n      return omit(ellipsis, ['expandable', 'rows']);\n    }\n\n    return ellipsis;\n  }, [ellipsis]);\n  process.env.NODE_ENV !== \"production\" ? warning(_typeof(ellipsis) !== 'object' || !ellipsis || !('expandable' in ellipsis) && !('rows' in ellipsis), 'Typography.Text', '`ellipsis` do not support `expandable` or `rows` props.') : void 0;\n  return /*#__PURE__*/React.createElement(Base, _extends({\n    ref: ref\n  }, restProps, {\n    ellipsis: mergedEllipsis,\n    component: \"span\"\n  }));\n};\n\nexport default /*#__PURE__*/React.forwardRef(Text);","import Link from './Link';\nimport Paragraph from './Paragraph';\nimport Text from './Text';\nimport Title from './Title';\nimport OriginTypography from './Typography';\nvar Typography = OriginTypography;\nTypography.Text = Text;\nTypography.Link = Link;\nTypography.Title = Title;\nTypography.Paragraph = Paragraph;\nexport default Typography;","// This icon file is generated automatically.\nvar TeamOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M824.2 699.9a301.55 301.55 0 00-86.4-60.4C783.1 602.8 812 546.8 812 484c0-110.8-92.4-201.7-203.2-200-109.1 1.7-197 90.6-197 200 0 62.8 29 118.8 74.2 155.5a300.95 300.95 0 00-86.4 60.4C345 754.6 314 826.8 312 903.8a8 8 0 008 8.2h56c4.3 0 7.9-3.4 8-7.7 1.9-58 25.4-112.3 66.7-153.5A226.62 226.62 0 01612 684c60.9 0 118.2 23.7 161.3 66.8C814.5 792 838 846.3 840 904.3c.1 4.3 3.7 7.7 8 7.7h56a8 8 0 008-8.2c-2-77-33-149.2-87.8-203.9zM612 612c-34.2 0-66.4-13.3-90.5-37.5a126.86 126.86 0 01-37.5-91.8c.3-32.8 13.4-64.5 36.3-88 24-24.6 56.1-38.3 90.4-38.7 33.9-.3 66.8 12.9 91 36.6 24.8 24.3 38.4 56.8 38.4 91.4 0 34.2-13.3 66.3-37.5 90.5A127.3 127.3 0 01612 612zM361.5 510.4c-.9-8.7-1.4-17.5-1.4-26.4 0-15.9 1.5-31.4 4.3-46.5.7-3.6-1.2-7.3-4.5-8.8-13.6-6.1-26.1-14.5-36.9-25.1a127.54 127.54 0 01-38.7-95.4c.9-32.1 13.8-62.6 36.3-85.6 24.7-25.3 57.9-39.1 93.2-38.7 31.9.3 62.7 12.6 86 34.4 7.9 7.4 14.7 15.6 20.4 24.4 2 3.1 5.9 4.4 9.3 3.2 17.6-6.1 36.2-10.4 55.3-12.4 5.6-.6 8.8-6.6 6.3-11.6-32.5-64.3-98.9-108.7-175.7-109.9-110.9-1.7-203.3 89.2-203.3 199.9 0 62.8 28.9 118.8 74.2 155.5-31.8 14.7-61.1 35-86.5 60.4-54.8 54.7-85.8 126.9-87.8 204a8 8 0 008 8.2h56.1c4.3 0 7.9-3.4 8-7.7 1.9-58 25.4-112.3 66.7-153.5 29.4-29.4 65.4-49.8 104.7-59.7 3.9-1 6.5-4.7 6-8.7z\" } }] }, \"name\": \"team\", \"theme\": \"outlined\" };\nexport default TeamOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport TeamOutlinedSvg from \"@ant-design/icons-svg/es/asn/TeamOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar TeamOutlined = function TeamOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: TeamOutlinedSvg\n  }));\n};\n\nTeamOutlined.displayName = 'TeamOutlined';\nexport default /*#__PURE__*/React.forwardRef(TeamOutlined);","var _path, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgChampion(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    t: 1646560118011,\n    className: \"icon\",\n    viewBox: \"0 0 1024 1024\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"p-id\": 1998,\n    width: 200,\n    height: 200,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M877.3632 253.5424h-78.6944V200.192c0-22.0672-17.8688-39.936-39.936-39.936h-482.304c-22.0672 0-39.936 17.8688-39.936 39.936v53.3504H152.1664c-22.0672 0-39.936 17.8688-39.936 39.936v84.0704c0 65.6384 53.248 118.8864 118.8864 118.8864h5.4784c1.9968 142.0288 109.2608 258.56 247.3472 275.0464v89.7536H367.0016a30.8224 30.8224 0 1 0 0 61.6448h295.5264a30.8224 30.8224 0 1 0 0-61.6448h-116.9408v-89.088c140.8-13.9264 251.0336-131.7376 253.0304-275.7632 65.5872-0.1024 118.6816-53.2992 118.6816-118.8864V293.4272c0-22.016-17.8688-39.8848-39.936-39.8848z m-175.1552 213.3504a30.8224 30.8224 0 1 1-61.6448 0v-150.528a30.8224 30.8224 0 1 1 61.6448 0v150.528z\",\n    fill: \"#FCDFAE\",\n    \"p-id\": 1999\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M877.3632 211.7632h-78.6944V158.4128c0-22.0672-17.8688-39.936-39.936-39.936h-482.304c-22.0672 0-39.936 17.8688-39.936 39.936v53.3504H152.1664c-22.0672 0-39.936 17.8688-39.936 39.936v84.0704c0 65.6384 53.248 118.8864 118.8864 118.8864h5.4784c1.9968 142.0288 109.2608 258.56 247.3472 275.0464v89.7536H367.0016a30.8224 30.8224 0 1 0 0 61.6448h295.5264a30.8224 30.8224 0 1 0 0-61.6448h-116.9408v-89.088c140.8-13.9264 251.0336-131.7376 253.0304-275.7632 65.5872-0.1024 118.6816-53.2992 118.6816-118.8864V251.648c0-22.016-17.8688-39.8848-39.936-39.8848z m-175.1552 213.3504a30.8224 30.8224 0 1 1-61.6448 0v-150.528a30.8224 30.8224 0 1 1 61.6448 0v150.528z\",\n    fill: \"#F8B62D\",\n    \"p-id\": 2000\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgChampion);\nexport default __webpack_public_path__ + \"static/media/champion.c6ebe438.svg\";\nexport { ForwardRef as ReactComponent };","// This icon file is generated automatically.\nvar FileTextOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M854.6 288.6L639.4 73.4c-6-6-14.1-9.4-22.6-9.4H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V311.3c0-8.5-3.4-16.7-9.4-22.7zM790.2 326H602V137.8L790.2 326zm1.8 562H232V136h302v216a42 42 0 0042 42h216v494zM504 618H320c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8zM312 490v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H320c-4.4 0-8 3.6-8 8z\" } }] }, \"name\": \"file-text\", \"theme\": \"outlined\" };\nexport default FileTextOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport FileTextOutlinedSvg from \"@ant-design/icons-svg/es/asn/FileTextOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar FileTextOutlined = function FileTextOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: FileTextOutlinedSvg\n  }));\n};\n\nFileTextOutlined.displayName = 'FileTextOutlined';\nexport default /*#__PURE__*/React.forwardRef(FileTextOutlined);","import {withTranslation} from \"react-i18next\";\nimport {withRouter} from \"react-router-dom\";\nimport {Col, Modal, Row, Space, Table, Typography} from \"antd\";\nimport {ContestState} from \"../../Redux/Action/contest\";\nimport React, {Dispatch, useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport cApi from \"Utils/API/c-api\"\nimport \"Assert/css/ContestRank.css\"\nimport {getDiffSecond, TimeDiff, TimeRangeState} from \"../../Utils/Time\";\nimport {ReactComponent as Champion} from \"Assert/img/champion.svg\"\nimport Icon, {FileTextOutlined, TeamOutlined} from \"@ant-design/icons\";\nimport SubmissionList from \"../submission/SubmissionList/SubmissionList\";\n\nconst Rank = (props: any) => {\n    const contestId = props.match.params.contestId\n    const contestInfo = props.ContestInfo[contestId]\n    const [rankInfo, setRankInfo] = useState<any>()\n    const [data, setData] = useState()\n    const timeState = contestInfo !== undefined ? TimeRangeState(contestInfo.gmtStart, contestInfo.gmtEnd) : undefined\n    const [SummaryInfo, setSummaryInfo] = useState<any>({})\n    const [lastSliderTime, setLastSliderTime] = useState<number>(Date.now())\n\n    const [ModalVis, setModalVis] = useState<boolean>(false);\n    const [sbl_user, setSbl_user] = useState<string>(\"\");\n    const [sbl_pro, setSbl_pro] = useState<string>(\"\");\n\n\n    useEffect(() => {\n        // console.log(\"00--------------000000000000\", contestInfo)\n        if (rankInfo === undefined) {\n            cApi.getRank({contestId: contestId}).then((res: any) => {\n                // 设置可以滑动\n                if (res.length > 0 && res[0].submission !== null)\n                    props.setAllowSliderMove(true)\n                res.map((value: any, index: number) => {\n                    if (value.submissions !== null)\n                        value.submissions.sort((a: any, b: any) => {\n                            return parseInt(a[1]) - parseInt(b[1])\n                        })\n                })\n                setRankInfo(res)\n            })\n        }\n    }, [rankInfo, setRankInfo, contestId, timeState])\n\n    useEffect(() => {\n        if (rankInfo !== undefined) {\n            if (props.openSliderMove && Math.abs(Date.now() - lastSliderTime) <= 500) return\n            if (props.openSliderMove) setLastSliderTime(Date.now())\n\n            // console.log(props.sliderTime)\n\n\n            const problemInfo = contestInfo.problems\n            const summaryInfo: any = {}\n            summaryInfo.SumNumber = rankInfo.length\n\n            for (let i = 0; i < problemInfo.length; i++) {\n                summaryInfo[`submit_${i}`] = problemInfo[i].submitNum\n                summaryInfo[`ac_${i}`] = problemInfo[i].acceptNum\n                summaryInfo[`user_submit_${i}`] = 0\n                summaryInfo[`user_ac_${i}`] = 0\n                summaryInfo[`first_ac_${i}`] = parseInt(contestInfo.gmtEnd) + 1\n            }\n\n            // 排序前 进行数据预处理\n            const beforeSort = rankInfo.map((value: any, index: number) => {\n                let sumScore = 0, ACNumber = 0, penalty = 0\n                let cell: any = {}\n                const official = value.official\n\n                const convertValue = (value: any, proId: number) => {\n                    let color = \"\", score = undefined, minTim: any = undefined, className = \"\"\n                    if (value.length !== 0 && parseInt(value[0]) !== 0) {\n                        score = value[1]\n                        sumScore += value[1] * problemInfo[proId].problemWeight\n\n                        color = \"orange\"\n                        if (value[2] === 1) color = \"green\"\n                        if (value[1] === 0) color = \"red\"\n\n                        // 统计数据\n                        summaryInfo[`user_submit_${proId}`] += 1\n\n                        if (value[2] === 1) {\n                            summaryInfo[`user_ac_${proId}`] += 1\n                            if (official === true) {\n                                summaryInfo[`first_ac_${proId}`] = Math.min(\n                                    summaryInfo[`first_ac_${proId}`],\n                                    parseInt(value[0])\n                                )\n                            }\n                            className = \"accepted\"\n                            penalty += 20 * value[3]\n                            minTim = parseInt(value[0])\n                            penalty += getDiffSecond(contestInfo.gmtStart, minTim) / 60\n                            ACNumber += 1\n                        } else className = \"rejected\"\n                    }\n                    cell[`${proId + 1}`] = {\n                        color: color,\n                        score: score,\n                        minTime: minTim,\n                        tries: value[3] + (value[2] === 1),\n                        className: className\n                    }\n                }\n\n                if (value.submissions === null) {\n                    value.problemResults.map((value: any, index: number) => convertValue(value, index))\n                } else {\n                    const sliderTime = Math.max(props.sliderTime, parseInt(contestInfo.gmtStart))\n\n                    let proSet: any = {}\n\n                    for (let i = 0; i < value.submissions.length; i++) {\n                        const sbm = value.submissions[i]\n                        if (!props.afterContestSubmission && parseInt(sbm[1]) > parseInt(contestInfo.gmtEnd)) break\n                        // 控制提交时间筛选\n                        if (props.openSliderMove && parseInt(sbm[1]) > sliderTime) break\n                        const proId = sbm[0]\n\n                        if (proSet[proId] === undefined)\n                            proSet[proId] = {\n                                time: 0,\n                                score: -1,\n                                result: 0,\n                                submission: 0,\n                                submissionBeforeAC: 0\n                            }\n                        // 取最大的分数，分数相同，取最时间小的\n                        const obj = proSet[proId]\n                        if (obj.score < sbm[2] ||\n                            (obj.score === sbm[2] &&\n                                (obj.time > parseInt(sbm[1]) ||\n                                    (obj.result !== 1 && sbm[3] === 1)\n                                )\n                            )) {\n                            obj.time = parseInt(sbm[1])\n                            obj.score = sbm[2]\n                            obj.result = sbm[3]\n                        }\n                        if (obj.result !== 1)\n                            obj.submissionBeforeAC += 1\n                        obj.submission += 1\n                    }\n\n                    for (const x in proSet) {\n                        convertValue([\n                            proSet[x].time.toString(),\n                            proSet[x].score,\n                            proSet[x].result,\n                            proSet[x].submissionBeforeAC,\n                            0\n                        ], parseInt(x) - 1)\n                    }\n                }\n                return {\n                    username: value.username,\n                    nickname: value.nickname,\n                    official: value.official,\n                    rank: index + 1,\n                    sumScore: sumScore,\n                    Cell: cell,\n                    ACNumber: ACNumber,\n                    penalty: penalty,\n                }\n            })\n\n            // 排序\n            beforeSort.sort((a: any, b: any) => {\n                if (contestInfo.features.mode === \"acm\") {\n                    if (a.ACNumber === b.ACNumber) return a.penalty - b.penalty\n                    return b.ACNumber - a.ACNumber\n                } else if (contestInfo.features.mode === \"ioi\") {\n                    return b.sumScore - a.sumScore\n                }\n            })\n\n            const equ = (a: any, b: any) => {\n                if (contestInfo.features.mode === \"acm\") {\n                    return a.ACNumber === b.ACNumber && Math.abs(a.penalty - b.penalty) < 1e-6\n                } else if (contestInfo.features.mode === \"ioi\") {\n                    return a.sumScore === b.sumScore\n                }\n            }\n\n            // 排序并重置排名\n            let nowRank = 1, sumIndex = 0;\n            const afterSort = beforeSort.map((value: any, index: number) => {\n                if (value.official === false) return {...value, rank: \"*\"}\n                else {\n                    sumIndex += 1;\n                    if (index === 0) return {...value, rank: 1}\n                    else {\n                        if (equ(beforeSort[index - 1], value))\n                            return {...value, rank: nowRank}\n                        nowRank = sumIndex\n                        return {...value, rank: nowRank}\n                    }\n                }\n            })\n\n            setSummaryInfo(summaryInfo)\n            setData(afterSort)\n            props.setExportData(afterSort)\n\n        }\n    }, [rankInfo, props.afterContestSubmission, props.sliderTime])\n\n    const problemColumns: any = [{\n        title: \"排名\",\n        dataIndex: \"rank\",\n        width: 80,\n        render: (text: any) => {\n            return <span className={\"center\"}> {text} </span>\n        }\n    }, {\n        title: \"参赛人\",\n        width: 150,\n        render: (text: any, row: any) => {\n            return (\n                <div style={{paddingLeft: 10, paddingRight: 10}}>\n                    <span style={{float: \"left\", marginTop: 10}}>\n                        {/*TODO::like*/}\n                    </span>\n                    <span style={{float: \"right\", textAlign: \"right\"}}>\n                        <div style={{fontWeight: \"bold\"}}>{row.username}</div>\n                        <div style={{color: \"grey\", fontSize: 12}}>{row.nickname}</div>\n                    </span>\n                </div>\n            )\n        }\n    }, {\n        title: \"分数\",\n        width: 100,\n        render: (text: any, row: any) => {\n            return (\n                <>\n                    {contestInfo.features.mode === \"ioi\" && (\n                        <span>{row.sumScore}</span>\n                    )}\n                    {contestInfo.features.mode === \"acm\" && (\n                        <Row>\n                            <Col span={12}><span\n                                style={{fontWeight: \"bold\"}}>{row.ACNumber}</span></Col>\n                            <Col span={11}><span>{Math.floor(row.penalty)}</span></Col>\n                        </Row>\n                    )}\n                </>\n            )\n        }\n    }]\n    let tableWidth = 330\n    const problemWidth = 70\n\n    if (contestInfo !== undefined) {\n        for (const x of contestInfo.problems) {\n            problemColumns.push({\n                title: (\n                    <div className={\"ProHeader\"}>\n                        <div>\n                            <span style={{fontWeight: \"bold\"}}>\n                                {String.fromCharCode('A'.charCodeAt(0) + parseInt(x.problemCode) - 1)}\n                            </span>\n                            {/* TODO 气球颜色 */}\n                        </div>\n                        <div style={{color: \"grey\", fontSize: 12}}>\n                            {x.acceptNum} / {x.submitNum}\n                        </div>\n                    </div>\n                ),\n                width: problemWidth,\n                render: (text: any, row: any) => {\n                    const SData = row.Cell[x.problemCode]\n                    if (SData === undefined) return <></>\n                    return (\n                        <div onClick={() => {\n                            setSbl_user(row.username)\n                            setSbl_pro(x.problemCode)\n                            setModalVis(true)\n                        }}>\n                            {contestInfo.features.mode === \"ioi\" && (\n                                <span style={{\n                                    fontWeight: \"bold\",\n                                    color: SData.color\n                                }}>\n                                    {SData.score}\n                                </span>\n                            )}\n                            {contestInfo.features.mode === \"acm\" && (\n                                <div\n                                    className={Math.abs(SData.minTime - SummaryInfo[`first_ac_${x.problemCode - 1}`]) < 1e-6 ? \"firstAccept\" : SData.className}>\n                                    {SData.minTime !== undefined && (\n                                        <div style={{fontSize: 16}}>\n                                            {Math.floor(getDiffSecond(contestInfo.gmtStart, SData.minTime) / 60)}\n                                        </div>\n                                    )}\n                                    {SData.minTime === undefined && (\n                                        <div style={{fontSize: 16}}>\n                                            &nbsp;&nbsp;\n                                        </div>\n                                    )}\n                                    <div>{SData.tries} {SData.tries === 1 ? \"try\" : \"tries\"}</div>\n                                </div>\n                            )}\n                        </div>\n                    )\n                }\n            })\n            tableWidth += problemWidth\n        }\n        if (props.minWidth !== tableWidth)\n            props.setMinWidth(tableWidth)\n    }\n\n    return (\n        <>\n            <Modal\n                width={1250}\n                visible={ModalVis}\n                footer={false}\n                destroyOnClose={true}\n                onCancel={() => {\n                    setModalVis(false)\n                }}\n            >\n                <SubmissionList\n                    btnText={\"记录-\" + sbl_user + \"-\" + sbl_pro}\n                    name={\"Contest-Rank-SubmissionList-\" + sbl_user + \"-\" + sbl_pro}\n                    API={async (data: any) => {\n                        return cApi.getContestSubmissionList({\n                            ...data,\n                            problemCode: sbl_pro,\n                            username: sbl_user,\n                            contestId: contestId\n                        })\n                    }}\n                    QuerySubmissionAPI={async (submissionId: string) => {\n                        return cApi.getContestSubmissionInfo({contestId: contestId, submissionId: submissionId})\n                    }}\n                />\n            </Modal>\n            <Table\n                className={\"RankTable\"}\n                style={{width: tableWidth, minWidth: tableWidth}}\n                pagination={false}\n                bordered={true}\n                dataSource={data}\n                rowClassName={(row, index) => {\n                    return \"rowBase\"\n                }}\n                columns={problemColumns}\n                summary={() => (\n                    <Table.Summary>\n                        <Table.Summary.Row className={\"RankSummary\"}>\n                            <Table.Summary.Cell index={0} colSpan={2}>\n                                <Space size={50}>\n                                    总结\n                                    <div style={{textAlign: \"left\", fontSize: 12}}>\n                                        <div><FileTextOutlined/> 通过数/提交数</div>\n                                        <div><TeamOutlined/> 通过用户/提交用户</div>\n                                        <div><Icon component={Champion}/> 最早通过</div>\n                                    </div>\n                                </Space>\n                            </Table.Summary.Cell>\n                            {Object.keys(SummaryInfo).length !== 0 && (\n                                <>\n                                    <Table.Summary.Cell index={1}> <TeamOutlined/> {SummaryInfo.SumNumber}\n                                    </Table.Summary.Cell>\n                                    {contestInfo.problems.map((x: any) => {\n                                        const i = parseInt(x.problemCode) - 1\n                                        return (\n                                            <Table.Summary.Cell index={2 + i} className={\"RankSummary-Pro\"}>\n                                                <div>\n                                                    <FileTextOutlined/> {SummaryInfo[`ac_${i}`]}/{SummaryInfo[`submit_${i}`]}\n                                                </div>\n                                                <div>\n                                                    <TeamOutlined/> {SummaryInfo[`user_ac_${i}`]}/{SummaryInfo[`user_submit_${i}`]}\n                                                </div>\n                                                <div>\n                                                    {parseInt(contestInfo.gmtEnd) + 1 !== SummaryInfo[`first_ac_${i}`] && (\n                                                        <div>\n                                                            <Icon component={Champion}/>\n                                                            <Typography.Text ellipsis={{\n                                                                tooltip: TimeDiff(contestInfo.gmtStart, SummaryInfo[`first_ac_${i}`], \"d\", \"h\", \"m\", \"s\"),\n                                                            }} style={{width: 50}}>\n                                                                {TimeDiff(contestInfo.gmtStart, SummaryInfo[`first_ac_${i}`], \"d\", \"h\", \"m\", \"s\")}\n                                                            </Typography.Text>\n                                                        </div>\n                                                    )}\n                                                </div>\n                                            </Table.Summary.Cell>\n                                        )\n                                    })}\n                                </>\n                            )}\n                        </Table.Summary.Row>\n                    </Table.Summary>\n                )}\n            >\n\n            </Table>\n        </>\n    )\n}\n\nconst mapStateToProps = (state: any) => {\n    const State: ContestState = state.ContestReducer\n\n    return {\n        ContestInfo: State.contestInfo,\n        minWidth: State.minWidth,\n        afterContestSubmission: State.afterContestSubmission,\n        allowSliderMove: State.allowSliderMove,\n        sliderTime: State.sliderTime,\n        openSliderMove: State.openSliderMove\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\n    setMinWidth: (data: number) => dispatch({\n        type: \"setMinWidth\", data: data\n    }),\n    setAllowSliderMove: (data: boolean) => dispatch({\n        type: \"setAllowSliderMove\", data: data\n    }),\n    setExportData: (data: any) => dispatch({\n        type: \"setExportData\", data: data\n    })\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withTranslation()(withRouter(Rank)))\n"],"sourceRoot":""}