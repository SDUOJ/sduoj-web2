{"version":3,"sources":["Utils/MarkdownPreview.ts","Utils/MarkdownText.tsx","../node_modules/rc-switch/es/index.js","../node_modules/antd/es/switch/index.js","Component/common/ExportExcel.tsx","Component/contest/API/getContestInfo.ts","Component/common/DTime.tsx","../node_modules/@ant-design/icons-svg/es/asn/TeamOutlined.js","../node_modules/@ant-design/icons/es/icons/TeamOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/LockFilled.js","../node_modules/@ant-design/icons/es/icons/LockFilled.js","Component/contest/exportRank.ts","Component/contest/ContestHeader.tsx","Pages/Client/CContestInfo.tsx"],"names":["host","MarkdownText","props","useState","running","setRunning","nowText","setNowText","useEffect","isValueEmpty","text","code","id","trim","replaceAll","config","mode","cdn","emojiPath","theme","path","hljs","lineNumber","markdown","toc","mark","footnotes","autoSpace","math","inlineDigit","engine","VditorPreview","preview","document","getElementById","MarkdownPreview","then","res","style","overflowY","Switch","React","_ref","ref","_classNames","_ref$prefixCls","prefixCls","className","checked","defaultChecked","disabled","loadingIcon","checkedChildren","unCheckedChildren","onClick","onChange","onKeyDown","restProps","_objectWithoutProperties","_useMergedState","useMergedState","value","defaultValue","_useMergedState2","_slicedToArray","innerChecked","setInnerChecked","triggerChange","newChecked","event","mergedChecked","switchClassName","classNames","_defineProperty","concat","Object","assign","type","role","e","which","KeyCode","LEFT","RIGHT","ret","displayName","__rest","s","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","_a","customizePrefixCls","customizeSize","size","customDisabled","loading","_a$className","_React$useContext","ConfigContext","getPrefixCls","direction","SizeContext","DisabledContext","mergedDisabled","LoadingOutlined","classes","Wave","insertExtraNode","RcSwitch","_extends","__ANT_SWITCH","ExportExcel","handleExportAll","colMap","nowData","fileName","json","map","item","keys","reduce","newData","key","sheet","XLSX","utils","json_to_sheet","openDownloadDialog","sheet2blob","undefined","handleExportAllJson","url","saveName","Blob","URL","createObjectURL","aLink","createElement","href","download","window","MouseEvent","createEvent","initMouseEvent","dispatchEvent","sheetName","workbook","SheetNames","Sheets","wbout","write","bookType","bookSST","buf","ArrayBuffer","view","Uint8Array","charCodeAt","s2ab","this","ButtonType","ButtonProps","getJson","catch","message","error","ButtonText","Component","useContestInfo","contestId","update","contestInfo","useSelector","state","ContestReducer","dispatch","useDispatch","hasUpdate","setHasUpdate","cApi","getContestInfo","data","setTimeout","DTime","Date","now","nowTime","setNowTime","intervalId","setInterval","clearInterval","TimeDiff","time","TeamOutlined","AntdIcon","_objectSpread","icon","TeamOutlinedSvg","LockFilled","LockFilledSvg","a","x","official","y","obj","rank","nickname","username","sumScore","ACNumber","penalty","Cell","score","tries","push","Promise","resolve","connect","State","UserReducer","CState","userInfo","roles","afterContestSubmission","allowSliderMove","sliderTime","openSliderMove","exportData","setAfterContestSubmission","setSliderTime","setOpenSliderMove","withTranslation","withRouter","selectedKey","setSelectedKey","match","params","location","pathname","nowSliderTime","setNowSliderTime","menuData","name","link","UrlPrefix","re","timeState","TimeRangeState","gmtStart","gmtEnd","isPractice","participants","openness","features","history","replace","Math","abs","markdownDescription","marginTop","float","fontWeight","unix2Time","fontSize","paddingRight","contestTitle","color","tipFormatter","min","parseInt","max","span","format","backgroundColor","border","selectedKeys","Item","marginRight","marginBottom","judgeAuth","exportRank","padding","borderRadius","ClockCircleOutlined","participantNum","ContestInfo","minWidth","querySelector","clientWidth","pageWidth","setPageWidth","addEventListener","handleResize","removeEventListener","target","innerWidth","LoginCheck","jump","textAlign","margin","maxWidth","marginLeft","fallback","Loading","routerC_Contest_M","r","exact","component"],"mappings":"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","file":"static/js/41.69a523f9.chunk.js","sourcesContent":["// @ts-ignore\nimport VditorPreview from 'vditor/dist/method.min'\nimport {isValueEmpty} from \"./empty\";\n\nconst runHost = \"https://oj.qd.sdu.edu.cn\"\nconst devHost = \"https://oj.cs.sdu.edu.cn:3000\"\nconst host = process.env.NODE_ENV === 'development' ? devHost : runHost;\n\nexport function MarkdownPreview(code: string | null | undefined, id: string) {\n    if (isValueEmpty(code) || isValueEmpty(code?.trim())) code = \"\"\n    code = code?.replaceAll(/`{3}\\n([-|0-9a-zA-Z])/g, \"```plaintext\\n$1\")\n    // 针对原本 $ 换行的公式，加以修正\n    code = code?.replaceAll(/\\$\\n(.*)\\n\\$/g, \"$ $1 $\")\n    const config = {\n        mode: \"light\",\n        cdn: host + \"/vditor\",\n        emojiPath: host + \"/vditor/dist/images/emoji\",\n        theme: {\n            path: host + \"/vditor/dist/css/content-theme\"\n        },\n        hljs: {\n            lineNumber: false\n        },\n        markdown: {\n            toc: true,\n            mark: true,\n            footnotes: true,\n            autoSpace: true,\n        },\n        math: {\n            inlineDigit: true,\n            engine: 'KaTeX'\n        }\n    }\n    // return VditorPreview.md2html(code, config)\n    return VditorPreview.preview(document.getElementById(id), code, config)\n}\n","import {MarkdownPreview} from \"./MarkdownPreview\";\nimport {useEffect, useState} from \"react\";\nimport {isValueEmpty} from \"./empty\";\n\nconst MarkdownText = (props: any) => {\n\n    const [running, setRunning] = useState<boolean>(false);\n    const [nowText, setNowText] = useState<boolean>(false);\n\n    useEffect(() => {\n        if (!isValueEmpty(props.text) && !running && nowText !== props.text) {\n            setRunning(true)\n            setNowText(props.text)\n            MarkdownPreview(props.text, props.id).then((res: any) => {\n                setRunning(false)\n            })\n        }\n    }, [props.id, props.text, running])\n\n    return (\n        <div id={props.id} style={{overflowY: \"hidden\"}}>\n        </div>\n    )\n}\n\nexport default MarkdownText\n","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport KeyCode from \"rc-util/es/KeyCode\";\nvar Switch = React.forwardRef(function (_ref, ref) {\n  var _classNames;\n\n  var _ref$prefixCls = _ref.prefixCls,\n      prefixCls = _ref$prefixCls === void 0 ? 'rc-switch' : _ref$prefixCls,\n      className = _ref.className,\n      checked = _ref.checked,\n      defaultChecked = _ref.defaultChecked,\n      disabled = _ref.disabled,\n      loadingIcon = _ref.loadingIcon,\n      checkedChildren = _ref.checkedChildren,\n      unCheckedChildren = _ref.unCheckedChildren,\n      onClick = _ref.onClick,\n      onChange = _ref.onChange,\n      onKeyDown = _ref.onKeyDown,\n      restProps = _objectWithoutProperties(_ref, [\"prefixCls\", \"className\", \"checked\", \"defaultChecked\", \"disabled\", \"loadingIcon\", \"checkedChildren\", \"unCheckedChildren\", \"onClick\", \"onChange\", \"onKeyDown\"]);\n\n  var _useMergedState = useMergedState(false, {\n    value: checked,\n    defaultValue: defaultChecked\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      innerChecked = _useMergedState2[0],\n      setInnerChecked = _useMergedState2[1];\n\n  function triggerChange(newChecked, event) {\n    var mergedChecked = innerChecked;\n\n    if (!disabled) {\n      mergedChecked = newChecked;\n      setInnerChecked(mergedChecked);\n      onChange === null || onChange === void 0 ? void 0 : onChange(mergedChecked, event);\n    }\n\n    return mergedChecked;\n  }\n\n  function onInternalKeyDown(e) {\n    if (e.which === KeyCode.LEFT) {\n      triggerChange(false, e);\n    } else if (e.which === KeyCode.RIGHT) {\n      triggerChange(true, e);\n    }\n\n    onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(e);\n  }\n\n  function onInternalClick(e) {\n    var ret = triggerChange(!innerChecked, e); // [Legacy] trigger onClick with value\n\n    onClick === null || onClick === void 0 ? void 0 : onClick(ret, e);\n  }\n\n  var switchClassName = classNames(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-checked\"), innerChecked), _defineProperty(_classNames, \"\".concat(prefixCls, \"-disabled\"), disabled), _classNames));\n  return React.createElement(\"button\", Object.assign({}, restProps, {\n    type: \"button\",\n    role: \"switch\",\n    \"aria-checked\": innerChecked,\n    disabled: disabled,\n    className: switchClassName,\n    ref: ref,\n    onKeyDown: onInternalKeyDown,\n    onClick: onInternalClick\n  }), loadingIcon, React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-inner\")\n  }, innerChecked ? checkedChildren : unCheckedChildren));\n});\nSwitch.displayName = 'Switch';\nexport default Switch;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport LoadingOutlined from \"@ant-design/icons/es/icons/LoadingOutlined\";\nimport classNames from 'classnames';\nimport RcSwitch from 'rc-switch';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport DisabledContext from '../config-provider/DisabledContext';\nimport SizeContext from '../config-provider/SizeContext';\nimport warning from '../_util/warning';\nimport Wave from '../_util/wave';\nvar Switch = /*#__PURE__*/React.forwardRef(function (_a, ref) {\n  var _classNames;\n\n  var customizePrefixCls = _a.prefixCls,\n      customizeSize = _a.size,\n      customDisabled = _a.disabled,\n      loading = _a.loading,\n      _a$className = _a.className,\n      className = _a$className === void 0 ? '' : _a$className,\n      props = __rest(_a, [\"prefixCls\", \"size\", \"disabled\", \"loading\", \"className\"]);\n\n  process.env.NODE_ENV !== \"production\" ? warning('checked' in props || !('value' in props), 'Switch', '`value` is not a valid prop, do you mean `checked`?') : void 0;\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var size = React.useContext(SizeContext); // ===================== Disabled =====================\n\n  var disabled = React.useContext(DisabledContext);\n  var mergedDisabled = customDisabled || disabled || loading;\n  var prefixCls = getPrefixCls('switch', customizePrefixCls);\n  var loadingIcon = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-handle\")\n  }, loading && /*#__PURE__*/React.createElement(LoadingOutlined, {\n    className: \"\".concat(prefixCls, \"-loading-icon\")\n  }));\n  var classes = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-small\"), (customizeSize || size) === 'small'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-loading\"), loading), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className);\n  return /*#__PURE__*/React.createElement(Wave, {\n    insertExtraNode: true\n  }, /*#__PURE__*/React.createElement(RcSwitch, _extends({}, props, {\n    prefixCls: prefixCls,\n    className: classes,\n    disabled: mergedDisabled,\n    ref: ref,\n    loadingIcon: loadingIcon\n  })));\n});\nSwitch.__ANT_SWITCH = true;\n\nif (process.env.NODE_ENV !== 'production') {\n  Switch.displayName = 'Switch';\n}\n\nexport default Switch;","import {Component} from \"react\";\nimport {Button, message} from \"antd\";\nimport XLSX from \"xlsx\";\nimport {ButtonType} from \"antd/lib/button/button\";\n\ninterface IButtonText {\n    ButtonText: any\n    ButtonType: ButtonType\n    ButtonProps?: any\n    fileName: string\n    colMap?: any\n    nowData?: any\n    getJson?: any\n}\n\nclass ExportExcel extends Component<IButtonText, any> {\n\n    handleExportAll = (colMap: any, nowData: any, fileName: string) => {\n        const json = nowData.map((item: any) => {\n            return Object.keys(item).reduce((newData: any, key) => {\n                newData[colMap[key] || key] = item[key]\n                return newData\n            }, {})\n        });\n        // console.log(\"json\", json)\n        const sheet = XLSX.utils.json_to_sheet(json);\n        this.openDownloadDialog(this.sheet2blob(sheet, undefined), fileName + `.xlsx`);\n    }\n\n    handleExportAllJson = (json: any, fileName: string) => {\n        const sheet = XLSX.utils.json_to_sheet(json);\n        this.openDownloadDialog(this.sheet2blob(sheet, undefined), fileName + `.xlsx`);\n    }\n\n    openDownloadDialog = (url: any, saveName: any) => {\n        if (typeof url === 'object' && url instanceof Blob) {\n            url = URL.createObjectURL(url); // 创建blob地址\n        }\n        var aLink = document.createElement('a');\n        aLink.href = url;\n        aLink.download = saveName || ''; // HTML5新增的属性，指定保存文件名，可以不要后缀，注意，file:///模式下不会生效\n        var event;\n        if (window.MouseEvent) event = new MouseEvent('click');\n        else {\n            event = document.createEvent('MouseEvents');\n            event.initMouseEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n        }\n        aLink.dispatchEvent(event);\n    }\n\n    sheet2blob = (sheet: any, sheetName: any) => {\n        sheetName = sheetName || 'sheet1';\n        let workbook: any = {\n            SheetNames: [sheetName],\n            Sheets: {}\n        };\n        workbook.Sheets[sheetName] = sheet; // 生成excel的配置项\n\n        let wopts: any = {\n            bookType: 'xlsx', // 要生成的文件类型\n            bookSST: false, // 是否生成Shared String Table，官方解释是，如果开启生成速度会下降，但在低版本IOS设备上有更好的兼容性\n            type: 'binary'\n        };\n        let wbout = XLSX.write(workbook, wopts);\n\n        // 字符串转ArrayBuffer\n        function s2ab(s: any) {\n            let buf = new ArrayBuffer(s.length);\n            let view = new Uint8Array(buf);\n            for (let i = 0; i !== s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\n            return buf;\n        }\n\n        return new Blob([s2ab(wbout)], {type: \"application/octet-stream\"});\n    }\n\n    render() {\n        return (\n            <Button\n                type={this.props.ButtonType}\n                {...this.props.ButtonProps}\n                onClick={() => {\n                    if (this.props.getJson !== undefined) {\n                        this.props.getJson().then((json: any) => {\n                            this.handleExportAllJson(json, this.props.fileName)\n                        }).catch((e: any) => {\n                            // console.log(e)\n                            message.error(e)\n                        })\n                    } else {\n                        const nowData = this.props.nowData()\n                        const colMap = this.props.colMap(nowData)\n                        this.handleExportAll(colMap, nowData, this.props.fileName)\n                    }\n                }}\n            >\n                {this.props.ButtonText}\n            </Button>\n        )\n    }\n}\n\nexport default ExportExcel","import {useDispatch, useSelector} from \"react-redux\";\nimport cApi from \"Utils/API/c-api\"\nimport {useEffect, useState} from \"react\";\n\nconst useContestInfo = (contestId: string, update?: boolean) => {\n    const contestInfo = useSelector((state: any) => {\n        return state.ContestReducer.contestInfo[contestId]\n    })\n    const dispatch = useDispatch()\n\n    const [hasUpdate, setHasUpdate] = useState(false)\n\n    useEffect(() => {\n        if(update === false || hasUpdate) return\n        if (contestInfo === undefined || update === true) {\n            setHasUpdate(true)\n            cApi.getContestInfo({contestId: contestId}).then((res: any) => {\n                dispatch({\n                    type: \"setContestInfo\",\n                    key: contestId,\n                    data: res\n                })\n            }).catch(()=>{\n                setTimeout(()=>{\n                    setHasUpdate(false)\n                }, 3000)\n            })\n        }\n    }, [contestInfo, update])\n    return update === false ? undefined : contestInfo\n}\n\nexport default useContestInfo","import {useEffect, useState} from \"react\";\nimport {TimeDiff} from \"../../Utils/Time\";\n\nconst DTime = (props: any)=>{\n\n    const [nowTime, setNowTime] = useState<number>(Date.now())\n\n    const update = () => {\n        setNowTime(Date.now())\n    }\n\n    useEffect(() => {\n        let intervalId = setInterval(() => update(), 1000)\n        return () => clearInterval(intervalId)\n    })\n\n    return (\n        <>\n            {props.type === \"before\" && TimeDiff(props.time, nowTime)}\n            {props.type === \"after\" && TimeDiff(nowTime, props.time)}\n        </>\n    )\n}\n\nexport default DTime","// This icon file is generated automatically.\nvar TeamOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M824.2 699.9a301.55 301.55 0 00-86.4-60.4C783.1 602.8 812 546.8 812 484c0-110.8-92.4-201.7-203.2-200-109.1 1.7-197 90.6-197 200 0 62.8 29 118.8 74.2 155.5a300.95 300.95 0 00-86.4 60.4C345 754.6 314 826.8 312 903.8a8 8 0 008 8.2h56c4.3 0 7.9-3.4 8-7.7 1.9-58 25.4-112.3 66.7-153.5A226.62 226.62 0 01612 684c60.9 0 118.2 23.7 161.3 66.8C814.5 792 838 846.3 840 904.3c.1 4.3 3.7 7.7 8 7.7h56a8 8 0 008-8.2c-2-77-33-149.2-87.8-203.9zM612 612c-34.2 0-66.4-13.3-90.5-37.5a126.86 126.86 0 01-37.5-91.8c.3-32.8 13.4-64.5 36.3-88 24-24.6 56.1-38.3 90.4-38.7 33.9-.3 66.8 12.9 91 36.6 24.8 24.3 38.4 56.8 38.4 91.4 0 34.2-13.3 66.3-37.5 90.5A127.3 127.3 0 01612 612zM361.5 510.4c-.9-8.7-1.4-17.5-1.4-26.4 0-15.9 1.5-31.4 4.3-46.5.7-3.6-1.2-7.3-4.5-8.8-13.6-6.1-26.1-14.5-36.9-25.1a127.54 127.54 0 01-38.7-95.4c.9-32.1 13.8-62.6 36.3-85.6 24.7-25.3 57.9-39.1 93.2-38.7 31.9.3 62.7 12.6 86 34.4 7.9 7.4 14.7 15.6 20.4 24.4 2 3.1 5.9 4.4 9.3 3.2 17.6-6.1 36.2-10.4 55.3-12.4 5.6-.6 8.8-6.6 6.3-11.6-32.5-64.3-98.9-108.7-175.7-109.9-110.9-1.7-203.3 89.2-203.3 199.9 0 62.8 28.9 118.8 74.2 155.5-31.8 14.7-61.1 35-86.5 60.4-54.8 54.7-85.8 126.9-87.8 204a8 8 0 008 8.2h56.1c4.3 0 7.9-3.4 8-7.7 1.9-58 25.4-112.3 66.7-153.5 29.4-29.4 65.4-49.8 104.7-59.7 3.9-1 6.5-4.7 6-8.7z\" } }] }, \"name\": \"team\", \"theme\": \"outlined\" };\nexport default TeamOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport TeamOutlinedSvg from \"@ant-design/icons-svg/es/asn/TeamOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar TeamOutlined = function TeamOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: TeamOutlinedSvg\n  }));\n};\n\nTeamOutlined.displayName = 'TeamOutlined';\nexport default /*#__PURE__*/React.forwardRef(TeamOutlined);","// This icon file is generated automatically.\nvar LockFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M832 464h-68V240c0-70.7-57.3-128-128-128H388c-70.7 0-128 57.3-128 128v224h-68c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V496c0-17.7-14.3-32-32-32zM540 701v53c0 4.4-3.6 8-8 8h-40c-4.4 0-8-3.6-8-8v-53a48.01 48.01 0 1156 0zm152-237H332V240c0-30.9 25.1-56 56-56h248c30.9 0 56 25.1 56 56v224z\" } }] }, \"name\": \"lock\", \"theme\": \"filled\" };\nexport default LockFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport LockFilledSvg from \"@ant-design/icons-svg/es/asn/LockFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar LockFilled = function LockFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: LockFilledSvg\n  }));\n};\n\nLockFilled.displayName = 'LockFilled';\nexport default /*#__PURE__*/React.forwardRef(LockFilled);","export default async function exportRank(data: any) {\n    let res: any = []\n    for (const x of data) {\n        if (x.official === true) {\n            let obj: any = {\n                \"排名\": x.rank,\n                \"姓名\": x.nickname,\n                \"学号\": x.username,\n                \"总分\": x.sumScore,\n                \"过题数\": x.ACNumber,\n                \"罚时\": x.penalty,\n            }\n            for (const y in x.Cell) {\n                obj[\"题目\" + y + \"-分数\"] = x.Cell[y].score\n                obj[\"题目\" + y + \"-提交次数\"] = x.Cell[y].tries\n                obj[\"题目\" + y + \"-通过情况\"] = x.Cell[y].className\n            }\n            res.push(obj)\n        }\n    }\n    return Promise.resolve(res)\n}\n","import {withTranslation} from \"react-i18next\";\nimport {withRouter} from \"react-router-dom\";\nimport {Alert, Card, Col, Divider, Menu, Row, Slider, Space, Switch} from \"antd\";\nimport React, {Dispatch, useEffect, useState} from \"react\";\nimport getContestInfo from \"./API/getContestInfo\";\nimport {TimeDiff, TimeRangeState, unix2Time} from \"../../Utils/Time\";\nimport Countdown from \"antd/lib/statistic/Countdown\";\nimport {ClockCircleOutlined, LockFilled, TeamOutlined} from \"@ant-design/icons\";\nimport {ContestState, setAfterContestSubmission} from \"../../Redux/Action/contest\";\nimport {connect} from \"react-redux\";\nimport {UserState} from \"../../Type/Iuser\";\nimport {isValueEmpty} from \"../../Utils/empty\";\nimport DTime from \"../common/DTime\";\nimport judgeAuth from \"../../Utils/judgeAhtu\";\nimport {UrlPrefix} from \"../../Config/constValue\";\nimport ExportExcel from \"../common/ExportExcel\";\nimport exportRank from \"./exportRank\";\nimport MarkdownText from \"../../Utils/MarkdownText\";\n\nconst ContestHeader = (props: any) => {\n\n    const [selectedKey, setSelectedKey] = useState<string>(\"\")\n    const contestId = props.match.params.contestId\n    const url = props.location.pathname\n    const contestInfo = getContestInfo(contestId)\n    const [nowSliderTime, setNowSliderTime] = useState<number>(Date.now())\n\n    // console.log(contestInfo)\n\n    const menuData = [\n        {name: \"Register\", link: UrlPrefix + \"/contest/\" + contestId + \"/register\", re: /\\/contest\\/.*\\/register/g},\n        {name: \"Overview\", link: UrlPrefix + \"/contest/\" + contestId + \"/overview\", re: /\\/contest\\/.*\\/overview/g},\n        {name: \"Problem\", link: UrlPrefix + \"/contest/\" + contestId + \"/problem/1\", re: /\\/contest\\/.*\\/problem\\/.*/g},\n        {name: \"Status\", link: UrlPrefix + \"/contest/\" + contestId + \"/submission\", re: /\\/contest\\/.*\\/submission/g},\n        {name: \"Rank\", link: UrlPrefix + \"/contest/\" + contestId + \"/rank\", re: /\\/contest\\/.*\\/rank/g},\n    ]\n\n\n    const timeState = contestInfo !== undefined ? TimeRangeState(contestInfo.gmtStart, contestInfo.gmtEnd) : undefined\n    const isPractice = contestInfo !== undefined ? (contestInfo.participants.indexOf(props.username) !== -1) : undefined\n    const openness = contestInfo !== undefined ? contestInfo.features.openness : undefined\n\n    useEffect(() => {\n        if (url.match(/\\/contest\\/[0-9]*\\/?$/g) !== null && openness !== undefined && isPractice !== undefined) {\n            // 在私有模式下，率先跳转到注册页面\n            if (openness === \"private\" && !isPractice) props.history.replace(menuData[0].link)\n            else props.history.replace(menuData[1].link)\n        }\n        // 若已经注册，则不能访问注册页面\n        if (url.match(menuData[0].re) !== null && isPractice) props.history.replace(menuData[1].link)\n        menuData.map((value) => {\n            if (url.match(value.re) !== null) setSelectedKey(value.name)\n        })\n    }, [url, openness, isPractice])\n\n\n    useEffect(() => {\n        if (Math.abs(nowSliderTime - props.sliderTime) >= 1000 * 60) {\n            props.setSliderTime(nowSliderTime)\n        }\n    }, [nowSliderTime, props.sliderTime])\n\n    return (\n        <>\n            {contestInfo !== undefined && (\n                <>\n                    {!isValueEmpty(contestInfo.markdownDescription)\n                        && !isValueEmpty(contestInfo.markdownDescription.trim()) && (\n                            <Alert\n                                message={\n                                    <MarkdownText id={\"contest-markdownDescription\"}\n                                                  text={contestInfo?.markdownDescription}/>\n                                }\n                                type=\"info\"\n                            />\n                        )}\n                    <Card style={{marginTop: 25}}>\n                        <div className={\"center\"}>\n                            <span style={{float: \"left\"}}>\n                                <span style={{fontWeight: \"bold\"}}>开始时间：</span>\n                                {unix2Time(contestInfo.gmtStart)}\n                            </span>\n                            <span style={{fontWeight: \"bold\", fontSize: \"1.75rem\"}}>\n                                <span style={{paddingRight: 10}}>{contestInfo.contestTitle}</span>\n                                {contestInfo.features.openness === \"private\" && (\n                                    <LockFilled style={{color: \"red\"}}/>\n                                )}\n                                {contestInfo.features.openness === \"protected\" && (\n                                    <LockFilled style={{color: \"orange\"}}/>\n                                )}\n                            </span>\n                            <span style={{float: \"right\"}}>\n                                <span style={{fontWeight: \"bold\"}}>结束时间：</span>\n                                {unix2Time(contestInfo.gmtEnd)}\n                            </span>\n                        </div>\n                        {timeState !== \"wait\" && (\n                            <Slider\n                                style={{marginTop: 25}}\n                                tipFormatter={null}\n                                min={parseInt(contestInfo.gmtStart)}\n                                max={parseInt(contestInfo.gmtEnd)}\n                                value={\n                                    props.openSliderMove ? nowSliderTime :\n                                        Math.max(Math.min(Date.now(), parseInt(contestInfo.gmtEnd)), parseInt(contestInfo.gmtStart))\n                                }\n                                onChange={props.openSliderMove ? setNowSliderTime : undefined}\n                            />\n                        )}\n                        <div style={{marginTop: 15}} className={\"center\"}>\n                            <Row>\n                                <Col span={8}>\n                                    {timeState === \"running\" && (\n                                        <span style={{float: \"left\"}}>\n                                    <span style={{fontWeight: \"bold\"}}>已用时间：</span>\n                                    <DTime type={\"before\"} time={contestInfo.gmtStart}/>\n                                </span>\n                                    )}\n                                </Col>\n                                <Col span={8}>\n                                    {timeState === \"wait\" && (\n                                        <span style={{color: \"blue\"}}>\n                                    <Space>\n                                        距离开始还有：\n                                        <Countdown\n                                            className={\"contestHeaderTimer\"}\n                                            value={parseInt(contestInfo.gmtStart)}\n                                            format=\"H 时 m 分 s 秒\"\n                                        />\n                                    </Space>\n                                </span>\n                                    )}\n                                    {timeState === \"running\" && (\n                                        <span style={{color: \"red\"}}>进行中</span>\n                                    )}\n                                    {timeState === \"end\" && (\n                                        <span style={{color: \"green\"}}>已结束</span>\n                                    )}\n                                </Col>\n                                <Col span={8}>\n                                    {timeState === \"running\" && (\n                                        <span style={{float: \"right\"}}>\n                                    <span style={{fontWeight: \"bold\"}}>剩余时间：</span>\n                                    <DTime type={\"after\"} time={contestInfo.gmtEnd}/>\n                                </span>\n                                    )}\n                                </Col>\n                            </Row>\n                        </div>\n                    </Card>\n\n                </>\n            )}\n            <Row style={{backgroundColor: \"white\", border: \"1px solid #dcdee2\"}}>\n                <Col span={10}>\n                    <Menu\n                        mode=\"horizontal\"\n                        theme={\"light\"}\n                        style={{border: 0}}\n                        selectedKeys={[selectedKey]}\n                    >\n                        {menuData.map((value) => {\n                            if (timeState === \"wait\" && value.name !== \"Register\") return\n                            if (isPractice && value.name === \"Register\") return\n                            if (openness === \"private\" && isPractice === false && value.name !== \"Register\") return\n                            return (\n                                <Menu.Item key={value.name} onClick={() => {\n                                    setSelectedKey(value.name)\n                                    props.history.push(value.link)\n                                }}\n                                >\n                                    {props.t(value.name)}\n                                </Menu.Item>\n                            )\n                        })}\n                    </Menu>\n                </Col>\n                <Col span={14}>\n                    {contestInfo !== undefined && (\n                        <Space size={10} style={{\n                            marginTop: \"12px\",\n                            marginRight: \"30px\",\n                            marginBottom: \"12px\",\n                            float: \"right\",\n                            color: \"grey\"\n                        }}>\n                            {props.openSliderMove && (\n                                <>\n                                    {TimeDiff(contestInfo.gmtStart, nowSliderTime)}\n                                    <Divider type={\"vertical\"}/>\n                                </>\n                            )}\n                            {props.allowSliderMove === true && selectedKey === \"Rank\" && (\n                                <>\n                                    历史回放\n                                    <Switch\n                                        checked={props.openSliderMove}\n                                        onChange={props.setOpenSliderMove}\n                                        checkedChildren={\"启用\"}\n                                        unCheckedChildren={\"关闭\"}\n                                    />\n                                    <Divider type={\"vertical\"}/>\n                                </>\n                            )}\n                            {judgeAuth(props.roles, [\"admin\", \"superadmin\"]) &&\n                                timeState === \"end\" && selectedKey === \"Rank\" && (\n                                    <>\n                                        赛后提交\n                                        <Switch\n                                            checked={props.afterContestSubmission}\n                                            onChange={props.setAfterContestSubmission}\n                                            checkedChildren={\"显示\"}\n                                            unCheckedChildren={\"不显示\"}\n                                        />\n                                        <Divider type={\"vertical\"}/>\n                                    </>\n                                )}\n                            {judgeAuth(props.roles, [\"admin\", \"superadmin\"]) &&\n                                selectedKey === \"Rank\" && (\n                                    <>\n                                        <ExportExcel\n                                            ButtonProps={{size: \"small\"}}\n                                            ButtonText={\"导出\"}\n                                            ButtonType={\"link\"}\n                                            getJson={() => exportRank(props.exportData)}\n                                            fileName={contestInfo.contestTitle + \"_\" + Date.now() + \"_结果导出\"}\n                                        />\n                                        <Divider type={\"vertical\"}/>\n                                    </>\n                                )}\n                            {contestInfo.features.mode === \"acm\" && (\n                                <span style={{\n                                    backgroundColor: \"#3676b6\",\n                                    color: \"#fff\",\n                                    padding: \"0 10px\",\n                                    borderRadius: \".75rem\"\n                                }}>ACM</span>\n                            )}\n                            {contestInfo.features.mode === \"ioi\" && (\n                                <span style={{\n                                    backgroundColor: \"#ea517f\",\n                                    color: \"#fff\",\n                                    padding: \"0 10px\",\n                                    borderRadius: \".75rem\"\n                                }}>IOI</span>\n                            )}\n                            {contestInfo.features.mode === \"oi\" && (\n                                <span style={{\n                                    backgroundColor: \"#f8df72\",\n                                    color: \"#fff\",\n                                    padding: \"0 10px\",\n                                    borderRadius: \".75rem\"\n                                }}>OI</span>\n                            )}\n                            <Divider type={\"vertical\"}/>\n                            <span><ClockCircleOutlined/> {TimeDiff(contestInfo.gmtStart, contestInfo.gmtEnd)}</span>\n                            <Divider type={\"vertical\"}/>\n                            <span><TeamOutlined/> {contestInfo.participantNum}</span>\n                        </Space>\n                    )}\n                </Col>\n            </Row>\n        </>\n    )\n}\n\nconst mapStateToProps = (state: any) => {\n    const State: UserState = state.UserReducer\n    const CState: ContestState = state.ContestReducer\n    return {\n        username: State.userInfo?.username,\n        roles: State.userInfo?.roles,\n        afterContestSubmission: CState.afterContestSubmission,\n        allowSliderMove: CState.allowSliderMove,\n        sliderTime: CState.sliderTime,\n        openSliderMove: CState.openSliderMove,\n        exportData: CState.exportData\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\n    setAfterContestSubmission: (data: boolean) => dispatch({\n        type: \"setAfterContestSubmission\",\n        data: data\n    }),\n    setSliderTime: (data: number) => dispatch({\n        type: \"setSliderTime\", data: data\n    }),\n    setOpenSliderMove: (data: boolean) => dispatch({\n        type: \"setOpenSliderMove\", data: data\n    })\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withTranslation()(withRouter(ContestHeader)))\n","import {withTranslation} from \"react-i18next\";\nimport {Route, withRouter} from \"react-router-dom\";\nimport ContestHeader from \"../../Component/contest/ContestHeader\";\nimport {routerC_Contest_M} from \"../../Config/router/routerC\";\nimport React, {Dispatch, Suspense, useEffect, useState} from \"react\";\nimport Loading from \"../../Utils/Loading\";\nimport LoginCheck from \"../../Component/common/LoginCheck\";\nimport {ContestState} from \"../../Redux/Action/contest\";\nimport {connect} from \"react-redux\";\nimport {TimeRangeState} from \"../../Utils/Time\";\n\n\nconst CContestInfo = (props: any) => {\n    const contestId = props.match.params.contestId\n    const contestInfo = props.ContestInfo[contestId]\n    const timeState = contestInfo !== undefined ? TimeRangeState(contestInfo.gmtStart, contestInfo.gmtEnd) : undefined\n    let minWidth = 500\n\n    const [pageWidth, setPageWidth] = useState<number>(document.querySelector('body')?.clientWidth as number)\n\n    useEffect(() => {\n        window.addEventListener('resize', handleResize)\n        return () => {\n            window.removeEventListener('resize', handleResize)\n        }\n    },)\n    const handleResize = (e: any) => {\n        setPageWidth(e.target.innerWidth)\n    }\n\n    if (props.location.pathname.match(/\\/contest\\/.*\\/rank/g) !== null) {\n        minWidth = Math.max(500, (props.minWidth ?? 0) + 100)\n    }\n    return (\n        <>\n            <LoginCheck jump={true}/>\n            <div style={minWidth <= 1500 ? {textAlign: \"center\", margin: \"0 auto\"} : undefined}>\n                <div style={minWidth <= 1500 ? {\n                    textAlign: \"left\",\n                    maxWidth: \"1500px\",\n                    margin: \"0 auto\"\n                } : {\n                    textAlign: \"left\",\n                    maxWidth: \"1500px\",\n                    marginLeft: Math.max(0, (pageWidth as number - minWidth) / 2)\n                }}>\n                    <ContestHeader/>\n                    {contestInfo !== undefined && timeState !== \"wait\" && (\n                        <div style={{marginTop: 25}}>\n                            <Suspense fallback={<Loading/>}>\n                                {\n                                    routerC_Contest_M.map((r) => {\n                                        return (\n                                            <Route key={r.id} path={r.path} exact={r.exact}\n                                                   component={r.component}/>\n                                        )\n                                    })\n                                }\n                            </Suspense>\n                        </div>\n                    )}\n                </div>\n\n            </div>\n        </>\n    )\n}\nconst mapStateToProps = (state: any) => {\n    const State: ContestState = state.ContestReducer\n    return {\n        ContestInfo: State.contestInfo,\n        minWidth: State.minWidth\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withTranslation()(withRouter(CContestInfo)))\n"],"sourceRoot":""}