{"version":3,"sources":["Utils/MarkdownPreview.ts","Utils/MarkdownText.tsx","Component/contest/ContestList.tsx","../node_modules/@ant-design/icons-svg/es/asn/TeamOutlined.js","../node_modules/@ant-design/icons/es/icons/TeamOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/LockFilled.js","../node_modules/@ant-design/icons/es/icons/LockFilled.js","Component/common/GroupUserListCard.tsx","Component/problemSet/ProblemSetList.tsx","Pages/Client/CGroupInfo.tsx"],"names":["host","MarkdownText","props","useState","running","setRunning","nowText","setNowText","useEffect","isValueEmpty","text","code","id","trim","replaceAll","config","mode","cdn","emojiPath","theme","path","hljs","lineNumber","markdown","toc","mark","footnotes","autoSpace","math","inlineDigit","engine","VditorPreview","preview","document","getElementById","MarkdownPreview","then","res","style","overflowY","withTranslation","withRouter","undefined","myGroup","setMyGroup","cApi","getMyGroup","className","useList","title","t","API","data","a","getContestList","apiProp","size","getForm","onFinish","useGroup","Item","label","name","onChange","width","defaultValue","Option","value","map","val","groupId","useFormBtn","defaultPageSize","renderItem","item","Meta","avatar","textAlign","fontSize","moment","parseInt","gmtStart","format","color","type","marginRight","onClick","history","push","UrlPrefix","contestId","contestTitle","features","openness","description","backgroundColor","padding","borderRadius","TimeDiff","gmtEnd","participantNum","TimeRangeState","isPublic","TeamOutlined","ref","React","AntdIcon","_objectSpread","icon","TeamOutlinedSvg","displayName","LockFilled","LockFilledSvg","GroupUserListCard","searchKey","setSearchKey","pageNow","setPageNow","pageSize","setPageSize","useTranslation","bordered","extra","Search","onSearch","grid","gutter","column","lg","xl","md","sm","xs","margin","boxShadow","username","email","nickname","dataSource","members","filter","indexOf","pagination","total","length","pageSizeOptions","hideOnSinglePage","showQuickJumper","showLessItems","current","TableWithPagination","tag","columns","dataIndex","render","v","r","psid","paras","getProblemSetList","connect","state","keyValueData","CommonReducer","dispatch","setKeyValueData","key","match","params","groupInfo","setGroupInfo","activeKey","setActiveKey","psActiveKey","setPsActiveKey","psSum","setPsSum","psTabItems","setPsTabItems","keyValueData_g","keyValueData_ps","getGroupInfo","getProblemSetLabelList","score","tb","x","children","act2","sum","maxWidth","Title","level","status","QuitGroupBtn","groupName","JoinGroupBtn","marginTop","atk","TabPane","tab","ContestList"],"mappings":"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","file":"static/js/47.bd21c22e.chunk.js","sourcesContent":["// @ts-ignore\nimport VditorPreview from 'vditor/dist/method.min'\nimport {isValueEmpty} from \"./empty\";\n\nconst runHost = \"https://oj.qd.sdu.edu.cn\"\nconst devHost = \"https://oj.cs.sdu.edu.cn:3000\"\nconst host = process.env.NODE_ENV === 'development' ? devHost : runHost;\n\nexport function MarkdownPreview(code: string | null | undefined, id: string) {\n    if (isValueEmpty(code) || isValueEmpty(code?.trim())) code = \"\"\n    code = code?.replaceAll(/`{3}\\n([-|0-9a-zA-Z])/g, \"```plaintext\\n$1\")\n    // 针对原本 $ 换行的公式，加以修正\n    code = code?.replaceAll(/\\$\\n(.*)\\n\\$/g, \"$ $1 $\")\n    const config = {\n        mode: \"light\",\n        cdn: host + \"/vditor\",\n        emojiPath: host + \"/vditor/dist/images/emoji\",\n        theme: {\n            path: host + \"/vditor/dist/css/content-theme\"\n        },\n        hljs: {\n            lineNumber: false\n        },\n        markdown: {\n            toc: true,\n            mark: true,\n            footnotes: true,\n            autoSpace: true,\n        },\n        math: {\n            inlineDigit: true,\n            engine: 'KaTeX'\n        }\n    }\n    // return VditorPreview.md2html(code, config)\n    return VditorPreview.preview(document.getElementById(id), code, config)\n}\n","import {MarkdownPreview} from \"./MarkdownPreview\";\nimport {useEffect, useState} from \"react\";\nimport {isValueEmpty} from \"./empty\";\n\nconst MarkdownText = (props: any) => {\n\n    const [running, setRunning] = useState<boolean>(false);\n    const [nowText, setNowText] = useState<boolean>(false);\n\n    useEffect(() => {\n        if (!isValueEmpty(props.text) && !running && nowText !== props.text) {\n            setRunning(true)\n            setNowText(props.text)\n            MarkdownPreview(props.text, props.id).then((res: any) => {\n                setRunning(false)\n            })\n        }\n    }, [props.id, props.text, running])\n\n    return (\n        <div id={props.id} style={{overflowY: \"hidden\"}}>\n        </div>\n    )\n}\n\nexport default MarkdownText\n","import cApi from \"../../Utils/API/c-api\";\nimport {Divider, Form, List, Select, Space, Tag} from \"antd\";\nimport moment from \"moment\";\nimport {ClockCircleOutlined, LockFilled, TeamOutlined} from \"@ant-design/icons\";\nimport {TimeDiff, TimeRangeState} from \"../../Utils/Time\";\nimport React, {useEffect, useState} from \"react\";\nimport {withRouter} from \"react-router-dom\";\nimport {UrlPrefix} from \"../../Config/constValue\";\nimport TableWithPagination from \"../common/Table/TableWithPagination\";\nimport {withTranslation} from \"react-i18next\";\n\nconst ContestList = (props: any) => {\n    const [myGroup, setMyGroup] = useState<any>(undefined)\n\n    useEffect(() => {\n        cApi.getMyGroup().then((res: any) => {\n            setMyGroup(res)\n        })\n    }, [])\n\n    return (\n        <>\n            <div className={\"ListPage\"}>\n                <TableWithPagination\n                    useList={true}\n                    title={props.t(\"contestList\")}\n                    API={async (data: any) => {\n                        return cApi.getContestList({...data, ...props.apiProp})\n                    }}\n                    size={\"small\"}\n                    getForm={(onFinish: any) => {\n                        return (\n                            <Space size={30}>\n                                {props.useGroup === undefined && myGroup !== undefined && (\n                                    <Form.Item label={props.t(\"group\")} name={\"groupId\"}>\n                                        <Select onChange={onFinish} style={{width: 200}}\n                                                defaultValue={\"\"}>\n                                            <Select.Option value={\"\"}>{props.t(\"All\")}</Select.Option>\n                                            {myGroup.map((val: any) => {\n                                                return (\n                                                    <Select.Option value={val.groupId}>\n                                                        {val.groupId}: {val.title}\n                                                    </Select.Option>\n                                                )\n                                            })}\n                                        </Select>\n                                    </Form.Item>\n                                )}\n                                <Form.Item label={props.t(\"contestRules\")} name={\"mode\"}>\n                                    <Select onChange={onFinish} style={{width: 80}}\n                                            defaultValue={\"\"}>\n                                        <Select.Option value={\"\"}>{props.t(\"All\")}</Select.Option>\n                                        <Select.Option value={\"acm\"}>ACM</Select.Option>\n                                        <Select.Option value={\"ioi\"}>IOI</Select.Option>\n                                        <Select.Option value={\"oi\"}>OI</Select.Option>\n                                    </Select>\n                                </Form.Item>\n                            </Space>\n                        )\n                    }}\n                    useFormBtn={false}\n                    defaultPageSize={15}\n                    renderItem={(item: any) => {\n                        return (\n                            <List.Item\n                                key={item.contestId}\n                            >\n                                <List.Item.Meta\n                                    avatar={\n                                        <div style={{}}>\n                                            <div style={{textAlign: \"center\", fontSize: \"30px\"}}>\n                                                {moment(parseInt(item.gmtStart)).format(\"DD\")}\n                                            </div>\n                                            <div style={{color: \"#aaa\"}}>\n                                                {moment(parseInt(item.gmtStart)).format(\"YYYY-MM\")}\n                                            </div>\n                                        </div>\n                                    }\n                                    title={\n                                        <>\n                                            <a type={\"text\"} style={{marginRight: 10}}\n                                               onClick={() => {\n                                                   props.history.push(UrlPrefix + \"/contest/\" + item.contestId)\n                                               }}>{item.contestTitle}</a>\n                                            {item.features.openness === \"private\" && (\n                                                <LockFilled style={{color: \"red\"}}/>\n                                            )}\n                                            {item.features.openness === \"protected\" && (\n                                                <LockFilled style={{color: \"orange\"}}/>\n                                            )}\n                                        </>\n                                    }\n                                    description={\n                                        <Space size={10}>\n                                            {item.features.mode === \"acm\" && (\n                                                <span style={{\n                                                    backgroundColor: \"#3676b6\",\n                                                    color: \"#fff\",\n                                                    padding: \"0 10px\",\n                                                    borderRadius: \".75rem\"\n                                                }}>ACM</span>\n                                            )}\n                                            {item.features.mode === \"ioi\" && (\n                                                <span style={{\n                                                    backgroundColor: \"#ea517f\",\n                                                    color: \"#fff\",\n                                                    padding: \"0 10px\",\n                                                    borderRadius: \".75rem\"\n                                                }}>IOI</span>\n                                            )}\n                                            {item.features.mode === \"oi\" && (\n                                                <span style={{\n                                                    backgroundColor: \"#f8df72\",\n                                                    color: \"#fff\",\n                                                    padding: \"0 10px\",\n                                                    borderRadius: \".75rem\"\n                                                }}>OI</span>\n                                            )}\n                                            <Divider type={\"vertical\"}/>\n                                            <span>{moment(parseInt(item.gmtStart)).format(\"HH:mm:ss\")}</span>\n                                            <Divider type={\"vertical\"}/>\n                                            <span><ClockCircleOutlined/> {TimeDiff(item.gmtStart, item.gmtEnd)}</span>\n                                            <Divider type={\"vertical\"}/>\n                                            <span><TeamOutlined/> {item.participantNum}</span>\n                                            <Divider type={\"vertical\"}/>\n                                            {TimeRangeState(item.gmtStart, item.gmtEnd) === \"end\" && (\n                                                <Tag color={\"green\"}>{props.t(\"end\")}</Tag>\n                                            )}\n                                            {TimeRangeState(item.gmtStart, item.gmtEnd) === \"running\" && (\n                                                <Tag color={\"orange\"}>{props.t(\"running\")}</Tag>\n                                            )}\n                                            {item.isPublic === 0 && (\n                                                <Tag color={\"red\"}>{props.t(\"private\")}</Tag>\n                                            )}\n                                        </Space>\n\n                                    }\n                                />\n                            </List.Item>\n                        )\n                    }}\n                    name={props.name ?? \"ContestList\"}\n                />\n            </div>\n        </>\n    )\n}\n\nexport default withTranslation()(withRouter(ContestList))\n","// This icon file is generated automatically.\nvar TeamOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M824.2 699.9a301.55 301.55 0 00-86.4-60.4C783.1 602.8 812 546.8 812 484c0-110.8-92.4-201.7-203.2-200-109.1 1.7-197 90.6-197 200 0 62.8 29 118.8 74.2 155.5a300.95 300.95 0 00-86.4 60.4C345 754.6 314 826.8 312 903.8a8 8 0 008 8.2h56c4.3 0 7.9-3.4 8-7.7 1.9-58 25.4-112.3 66.7-153.5A226.62 226.62 0 01612 684c60.9 0 118.2 23.7 161.3 66.8C814.5 792 838 846.3 840 904.3c.1 4.3 3.7 7.7 8 7.7h56a8 8 0 008-8.2c-2-77-33-149.2-87.8-203.9zM612 612c-34.2 0-66.4-13.3-90.5-37.5a126.86 126.86 0 01-37.5-91.8c.3-32.8 13.4-64.5 36.3-88 24-24.6 56.1-38.3 90.4-38.7 33.9-.3 66.8 12.9 91 36.6 24.8 24.3 38.4 56.8 38.4 91.4 0 34.2-13.3 66.3-37.5 90.5A127.3 127.3 0 01612 612zM361.5 510.4c-.9-8.7-1.4-17.5-1.4-26.4 0-15.9 1.5-31.4 4.3-46.5.7-3.6-1.2-7.3-4.5-8.8-13.6-6.1-26.1-14.5-36.9-25.1a127.54 127.54 0 01-38.7-95.4c.9-32.1 13.8-62.6 36.3-85.6 24.7-25.3 57.9-39.1 93.2-38.7 31.9.3 62.7 12.6 86 34.4 7.9 7.4 14.7 15.6 20.4 24.4 2 3.1 5.9 4.4 9.3 3.2 17.6-6.1 36.2-10.4 55.3-12.4 5.6-.6 8.8-6.6 6.3-11.6-32.5-64.3-98.9-108.7-175.7-109.9-110.9-1.7-203.3 89.2-203.3 199.9 0 62.8 28.9 118.8 74.2 155.5-31.8 14.7-61.1 35-86.5 60.4-54.8 54.7-85.8 126.9-87.8 204a8 8 0 008 8.2h56.1c4.3 0 7.9-3.4 8-7.7 1.9-58 25.4-112.3 66.7-153.5 29.4-29.4 65.4-49.8 104.7-59.7 3.9-1 6.5-4.7 6-8.7z\" } }] }, \"name\": \"team\", \"theme\": \"outlined\" };\nexport default TeamOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport TeamOutlinedSvg from \"@ant-design/icons-svg/es/asn/TeamOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar TeamOutlined = function TeamOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: TeamOutlinedSvg\n  }));\n};\n\nTeamOutlined.displayName = 'TeamOutlined';\nexport default /*#__PURE__*/React.forwardRef(TeamOutlined);","// This icon file is generated automatically.\nvar LockFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M832 464h-68V240c0-70.7-57.3-128-128-128H388c-70.7 0-128 57.3-128 128v224h-68c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V496c0-17.7-14.3-32-32-32zM540 701v53c0 4.4-3.6 8-8 8h-40c-4.4 0-8-3.6-8-8v-53a48.01 48.01 0 1156 0zm152-237H332V240c0-30.9 25.1-56 56-56h248c30.9 0 56 25.1 56 56v224z\" } }] }, \"name\": \"lock\", \"theme\": \"filled\" };\nexport default LockFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport LockFilledSvg from \"@ant-design/icons-svg/es/asn/LockFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar LockFilled = function LockFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: LockFilledSvg\n  }));\n};\n\nLockFilled.displayName = 'LockFilled';\nexport default /*#__PURE__*/React.forwardRef(LockFilled);","import Search from \"antd/es/input/Search\";\nimport {Card, List, Space} from \"antd\";\nimport UserAvatar from \"../user/Avatar\";\nimport {isValueEmpty} from \"../../Utils/empty\";\nimport React, {useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport \"./GroupUserListCard.css\"\n\nconst GroupUserListCard = (props: any) => {\n\n    const [searchKey, setSearchKey] = useState<string>()\n    const [pageNow, setPageNow] = useState<number>(1)\n    const [pageSize, setPageSize] = useState<number>(24)\n\n    const {t} = useTranslation()\n\n    return (\n        <>\n            <Card\n                bordered={false}\n                extra={\n                    <Space>\n                        <div>{t(\"search\")}:</div>\n                        <Search\n                            key={\"search\"}\n                            onSearch={(text) => {\n                                setSearchKey(text)\n                                setPageNow(1)\n                            }}\n                            style={{width: 300}}\n                        />\n                    </Space>\n                }\n            >\n                <List\n                    bordered={false}\n                    grid={{gutter: 8, column: 6, lg: 6, xl: 6, md: 4, sm: 4, xs: 2}}\n                    renderItem={(item: any) => {\n                        return (\n                            <List.Item.Meta\n                                style={{\n                                    padding: 8,\n                                    margin: 6,\n                                    boxShadow: '0 0 3px rgba(0, 0, 0, 0.3)',\n                                    borderRadius: '10px'\n                                }}\n                                title={item.username}\n                                avatar={<UserAvatar email={item.email}/>}\n                                description={item.nickname}\n                                className={\"group-user-list\"}\n                            />\n                        )\n                    }}\n                    dataSource={props.members.filter((item: any) => {\n                        if (isValueEmpty(searchKey)) return true;\n                        return item.username.indexOf(searchKey) !== -1 || item.nickname.indexOf(searchKey) !== -1\n                    })}\n                    pagination={{\n                        total: props.members.length,\n                        size: \"small\",\n                        pageSizeOptions: [\"24\", \"48\", \"72\"],\n                        defaultPageSize: 24,\n                        hideOnSinglePage: true,\n                        showQuickJumper: true,\n                        showLessItems: true,\n                        current: pageNow,\n                        pageSize: pageSize,\n                        onChange: (pageNow, pageSize) => {\n                            setPageNow(pageNow)\n                            setPageSize(pageSize)\n                        }\n                    }}\n                >\n                </List>\n            </Card>\n        </>\n    )\n}\n\nexport default GroupUserListCard\n","import TableWithPagination from \"../common/Table/TableWithPagination\";\nimport cApi from \"../../Utils/API/c-api\";\nimport {Button} from \"antd\";\nimport {withRouter} from \"react-router-dom\";\n\nconst ProblemSetList = (props: any) => {\n    return (\n        <>\n\n            <TableWithPagination\n                name={`ProblemSetList-group-${props.groupId}-tag-${props.tag}`}\n                columns={[\n                    {title: \"ID\", dataIndex: \"psid\"},\n                    {\n                        title: \"标题\", dataIndex: \"name\", render: (v: any, r: any) => {\n                            return <Button type={\"text\"} size={\"small\"} onClick={() => {\n                                props.history.push(`/v2/problemSet/${r.psid}`)\n                            }}>\n                                {v}\n                            </Button>\n                        }\n                    },\n                    {title: \"分数\", dataIndex: \"global_score\"},\n                ]}\n                API={(paras: any) => {\n                    return cApi.getProblemSetList({...paras, groupId: props.groupId, tag: props.tag})\n                }}\n                size={\"small\"}\n            />\n        </>\n    )\n}\n\nexport default withRouter(ProblemSetList)\n","import {withRouter} from \"react-router-dom\";\nimport {Card, Tabs, Tag} from \"antd\";\nimport React, {Dispatch, useEffect, useState} from \"react\";\nimport cApi from \"Utils/API/c-api\"\nimport Title from \"antd/es/typography/Title\";\nimport {isValueEmpty} from \"../../Utils/empty\";\nimport ContestList from \"../../Component/contest/ContestList\";\nimport QuitGroupBtn from \"../../Component/group/QuitGroupBtn\";\nimport JoinGroupBtn from \"../../Component/group/JoinGroupBtn\";\nimport {connect} from \"react-redux\";\nimport {CommonState} from \"../../Redux/Action/common\";\nimport GroupUserListCard from \"../../Component/common/GroupUserListCard\";\nimport ProblemSetList from \"../../Component/problemSet/ProblemSetList\";\nimport {useTranslation} from \"react-i18next\";\nimport MarkdownText from \"../../Utils/MarkdownText\";\n\n\nconst CGroupInfo = (props: any) => {\n    const groupId = props.match.params.groupId;\n    const [groupInfo, setGroupInfo] = useState<any>();\n    const [activeKey, setActiveKey] = useState<string>(\"Announcement\")\n    const [psActiveKey, setPsActiveKey] = useState<string>()\n    const [psSum, setPsSum] = useState<string>()\n    const [psTabItems, setPsTabItems] = useState<any>()\n    const {t} = useTranslation()\n\n\n    useEffect(() => {\n        const keyValueData_g = props.keyValueData[\"Group-C-activeKey-\" + groupId]\n        const keyValueData_ps = props.keyValueData[`Group-C-activeKey-${groupId}-ProblemSet`]\n\n        cApi.getGroupInfo({groupId: groupId}).then((value: any) => {\n            setGroupInfo(value)\n        })\n        const act = keyValueData_g\n        if (act !== undefined)\n            setActiveKey(act)\n\n        cApi.getProblemSetLabelList({groupId: groupId}).then((res: any) => {\n            const label = res.label;\n            const score = res.score;\n            const tb: any = []\n            for (let x of label) {\n                tb.push({\n                    key: x,\n                    label: x + `(${score[x]}${t(\"point\")})`,\n                    children: <ProblemSetList groupId={groupId} tag={x}/>\n                })\n            }\n            const act2 = keyValueData_ps\n            if (label.length !== 0) {\n                if (act2 !== undefined) setPsActiveKey(act2)\n                else setPsActiveKey(label[0])\n            }\n            setPsTabItems(tb)\n            setPsSum(res.sum);\n        })\n\n    }, [groupId])\n\n    return (\n        <>\n            <div style={{textAlign: \"center\", margin: \"0 auto\"}}>\n                <div style={{textAlign: \"left\", maxWidth: \"1500px\", margin: \"0 auto\"}}>\n\n                    <div>\n                        <Card\n                            title={\n                                <Title level={2}>{groupInfo?.title}\n                                    <span style={{color: \"grey\"}}> (Group ID: {groupInfo?.groupId})</span>\n                                </Title>\n                            }\n                            extra={\n                                <div>\n                                    {groupInfo?.status === 1 && (\n                                        <Tag color={\"green\"}>{t(\"ApplicationInProgress\")}</Tag>\n                                    )}\n                                    {groupInfo?.status === 2 && (\n                                        <QuitGroupBtn groupId={groupInfo?.groupId} groupName={groupInfo?.title}/>\n                                    )}\n                                    {groupInfo?.status === 3 && (\n                                        <Tag color={\"orange\"}>{t(\"ApplicationRejected\")}</Tag>\n                                    )}\n                                    {(groupInfo?.status === 0 || groupInfo?.status === 3) && groupInfo?.openness !== 2 && (\n                                        <JoinGroupBtn groupId={groupInfo?.groupId} groupName={groupInfo?.title}/>\n                                    )}\n                                    {groupInfo?.status === 0 && groupInfo?.openness === 2 && (\n                                        <Tag color={\"red\"}>{t(\"private\")}</Tag>\n                                    )}\n                                </div>\n                            }\n                            style={{marginTop: 25}}>\n\n                            <Tabs activeKey={activeKey} onChange={(atk) => {\n                                setActiveKey(atk)\n                                props.setKeyValueData(\"Group-C-activeKey-\" + groupId, atk)\n                            }}>\n                                <Tabs.TabPane tab={t(\"Announcement\")} key=\"Announcement\">\n                                    <MarkdownText\n                                        id={\"AnnouncementMD\"}\n                                        text={isValueEmpty(groupInfo?.markdown) ? t(\"notAvailable\") : groupInfo?.markdown}/>\n                                </Tabs.TabPane>\n                                {!isValueEmpty(psTabItems) && psTabItems.length !== 0 && (\n                                    <Tabs.TabPane tab={`${t(\"problemSet\")}(${psSum}${t(\"point\")})`} key=\"practice\">\n                                        <Tabs activeKey={psActiveKey} onChange={(v: string) => {\n                                            setPsActiveKey(v)\n                                            props.setKeyValueData(`Group-C-activeKey-${groupId}-ProblemSet`, v)\n                                        }}>\n                                            {psTabItems.map((item: any) => {\n                                                return (\n                                                    <Tabs.TabPane tab={item.label} key={item.key}>\n                                                        {item.children}\n                                                    </Tabs.TabPane>\n                                                )\n                                            })}\n                                        </Tabs>\n                                    </Tabs.TabPane>\n                                )}\n                                <Tabs.TabPane tab={t(\"contest\")} key=\"contest\">\n                                    <ContestList\n                                        name={\"GroupInfo-\" + groupId + \"-ContestList\"}\n                                        apiProp={{groupId: groupId}}\n                                        useGroup={false}\n                                    />\n                                </Tabs.TabPane>\n                                <Tabs.TabPane tab={t(\"user\")} key={\"member\"}>\n                                    {groupInfo !== undefined && (\n                                        <GroupUserListCard members={groupInfo.members}/>\n                                    )}\n                                </Tabs.TabPane>\n                            </Tabs>\n                        </Card>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nconst mapStateToProps = (state: any) => {\n    const State: CommonState = state.CommonReducer\n    return {\n        keyValueData: State.keyValueData\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\n    setKeyValueData: (key: string, value: any) => dispatch({\n        type: \"setKeyValue\",\n        key: key,\n        value: value\n    }),\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withRouter(CGroupInfo))\n"],"sourceRoot":""}