{"version":3,"sources":["Component/user/Form/Item/ItemPassword.tsx","Component/user/Form/Item/ItemCaptcha.tsx","Component/user/Form/Item/ItemUsername.tsx","Component/user/Form/Item/ItemEmail.tsx","Utils/getUrlParams.ts","Assert/img/sdu-logo.jpg","Component/user/Form/Register.tsx","Component/user/Form/Binding.tsx","Pages/Client/CThirdPartyLogin.tsx"],"names":["withTranslation","props","firstPassProps","name","label","t","newpass","oldpass","Item","rules","required","message","hasFeedback","Password","undefined","noConfirm","dependencies","getFieldValue","validator","_","value","Promise","reject","resolve","useState","image","setImage","getCaptcha","CApi","then","data","captcha","setImgId","captchaId","useEffect","content","span","onChange","e","setCaptcha","target","offset","src","height","icon","onClick","map","editable","notRequired","ExistCheck","isExist","username","catch","disabled","bordered","canSend","setCanSend","modalVis","setModalVis","imgId","email","setEmail","intervalId","setInterval","clearInterval","needVerify","notCheck","type","title","visible","maskClosable","destroyOnClose","onOk","sendVerificationEmail","res","success","onCancel","addonAfter","getEmail","error","getUrlParams","url","obj","index","indexOf","params","substr","parr","split","arr","withRouter","useForm","form","token","setFieldsValue","ModalForm","trigger","button","autoFocusFirstInput","modalProps","width","okText","onFinish","values","a","Object","assign","thirdPartyRegister","login","history","push","UrlPrefix","register","ItemUsername","ItemPassword","ItemEmail","validateFields","thirdPartyBinding","CThirdPartyLogin","context","state","loading","thirdParty","info","sduId","paras","this","location","search","thirdPartyLogin","ticket","resData","user","sduRealName","setState","className","style","tip","textAlign","margin","SDU_Logo","preview","fontWeight","direction","size","block","Component","connect","dispatch","testLogin","testLoginTodo"],"mappings":"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","file":"static/js/47.0d29c6a8.chunk.js","sourcesContent":["import {Form, Input} from \"antd\";\nimport React from \"react\";\nimport {withTranslation} from \"react-i18next\";\n\nconst ItemPassword = (props: any) => {\n    let firstPassProps = {name: \"password\", label: props.t(\"password\")}\n    if (props.newpass === true) firstPassProps = {name: \"newPassword\", label: props.t(\"NewPassword\")}\n    if (props.oldpass === true) firstPassProps = {name: \"password\", label: props.t(\"OldPassword\")}\n    return (\n        <>\n            <Form.Item {...firstPassProps}\n                       rules={[\n                           {required: true, message: props.t(\"passwordEmpty\")},\n                       ]}\n                       hasFeedback>\n                <Input.Password/>\n            </Form.Item>\n            {\n                props.oldpass === undefined && props.noConfirm !== true && (\n                    <Form.Item\n                        name=\"confirm\"\n                        label={\n                            props.t(\"confirm\" + (props.newpass ? \"New\" : \"\") + \"Password\")\n                        }\n                        dependencies={[firstPassProps.name]}\n                        hasFeedback\n                        rules={[\n                            {required: true, message: props.t(\"passwordEmptyConfirm\")},\n                            ({getFieldValue}) => ({\n                                validator(_, value) {\n                                    if (!value || getFieldValue(firstPassProps.name) === value)\n                                        return Promise.resolve();\n                                    return Promise.reject(props.t(\"passwordDifferent\"));\n                                },\n                            }),\n                        ]}>\n                        <Input.Password/>\n                    </Form.Item>\n                )\n            }\n        </>\n    )\n}\n\nexport default withTranslation()(ItemPassword)","import {Button, Col, Form, Image, Input, Row} from \"antd\";\nimport React, {useEffect, useState} from \"react\";\nimport {withTranslation} from \"react-i18next\";\nimport CApi from \"Utils/API/c-api\"\nimport {RedoOutlined} from \"@ant-design/icons\"\n\nconst ItemCaptcha = (props: any) => {\n\n    const [image, setImage] = useState<string>()\n\n    const getCaptcha = () => {\n        CApi.getCaptcha().then((data: any) => {\n            setImage(data.captcha)\n            props.setImgId(data.captchaId)\n        })\n    }\n\n    useEffect(() => {\n        getCaptcha()\n    }, [])\n\n    const content = (\n        <Row>\n            <Col span={14}>\n                <Input onChange={(e) => {\n                    if (props.setCaptcha !== undefined)\n                        props.setCaptcha(e.target.value)\n                }}/>\n            </Col>\n            <Col offset={1} span={8}>\n                <Image src={image} height={32}/>\n            </Col>\n            <Col span={1}>\n                <Button\n                    icon={<RedoOutlined/>}\n                    onClick={() => {\n                        getCaptcha()\n                    }}/>\n            </Col>\n        </Row>\n    )\n\n    return (\n        <>\n            {\n                [''].map(() => {\n                    if (props.setCaptcha !== undefined) {\n                        return content\n                    } else {\n                        return (\n                            <Form.Item\n                                name=\"captcha\"\n                                label={props.t(\"captcha\")}\n                                rules={[\n                                    {required: true},\n                                ]}\n                            >\n                                {content}\n                            </Form.Item>\n                        )\n                    }\n                })\n            }\n        </>\n    )\n}\n\nexport default withTranslation()(ItemCaptcha)\n","import {Form, Input} from \"antd\";\nimport React from \"react\";\nimport {withTranslation} from \"react-i18next\";\nimport CApi from \"../../../../Utils/API/c-api\";\n\nconst ItemUsername = (props: any) => {\n    return (\n        <Form.Item\n            name=\"username\"\n            label={props.t(\"username\")}\n            rules={\n                [\n                    {\n                        required:\n                            props.editable !== false && props.notRequired !== true,\n                        message: props.t(\"usernameEmpty\")\n                    },\n                    ({getFieldValue}) => ({\n                        validator(_, value) {\n                            if (props.ExistCheck === true) {\n                                return CApi.isExist({username: value}).then((data: any) => {\n                                    if (data === false) return Promise.resolve()\n                                    else if (data === true) return Promise.reject(\"用户名已存在\")\n                                    return Promise.reject(\"检验失败\")\n                                }).catch((e: any) => {\n                                    return Promise.reject(e)\n                                })\n                            }\n                            return Promise.resolve()\n                        },\n                    }),\n                ]\n            }\n            hasFeedback>\n            <Input\n                disabled={props.editable === false}\n                bordered={props.editable}\n            />\n        </Form.Item>\n    )\n}\n\nexport default withTranslation()(ItemUsername)","import {Button, Form, Input, message, Modal} from \"antd\";\nimport React, {useEffect, useState} from \"react\";\nimport {withTranslation} from \"react-i18next\";\nimport CApi from \"Utils/API/c-api\"\nimport ItemCaptcha from \"./ItemCaptcha\";\n\nexport interface ItemEmailProps {\n    needVerify: boolean\n    editable: boolean\n    getEmail: any\n}\n\nconst ItemEmail = (props: ItemEmailProps & any) => {\n    const [canSend, setCanSend] = useState<number>(0);\n    const [modalVis, setModalVis] = useState<boolean>(false);\n    const [imgId, setImgId] = useState<string>(\"\")\n    const [captcha, setCaptcha] = useState<string>(\"\")\n    const [email, setEmail] = useState<string>(\"\")\n\n    const reduce = () => {\n        if (canSend > 0) {\n            setCanSend(canSend - 1)\n        }\n    }\n\n    useEffect(() => {\n        let intervalId = setInterval(() => reduce(), 1000)\n        return () => clearInterval(intervalId)\n    })\n\n    return (\n        <>\n            {props.needVerify === false && (\n                <Form.Item name=\"email\" label={props.t(\"email\")}\n                           rules={props.notCheck !== true ? [\n                               {type: 'email', message: props.t('emailError')},\n                               {required: props.editable !== false}\n                           ] : undefined}\n                           hasFeedback>\n                    <Input\n                        disabled={props.editable === false}\n                        bordered={props.editable !== false}\n                    />\n                </Form.Item>\n            )}\n            {props.needVerify === true && (\n                <>\n                    <Modal\n                        title={\"人机身份认证\"}\n                        visible={modalVis}\n                        maskClosable={false}\n                        destroyOnClose={true}\n                        onOk={() => {\n                            CApi.sendVerificationEmail({\n                                email: email,\n                                captcha: captcha,\n                                captchaId: imgId\n                            }).then((res) => {\n                                message.success(\"验证码已发送至您的邮箱\")\n                                setCanSend(60);\n                                setModalVis(false)\n                            })\n                        }}\n                        onCancel={() => {\n                            setModalVis(false)\n                        }}\n                    >\n                        <ItemCaptcha\n                            setImgId={setImgId}\n                            setCaptcha={setCaptcha}\n                        />\n                    </Modal>\n                    <Form.Item\n                        name=\"email\"\n                        label={props.t(\"new email\")}\n                        rules={[\n                            {type: 'email', message: props.t('emailError'),},\n                            {required: true},\n                            ({getFieldValue}) => ({\n                                validator(_, value) {\n                                    return CApi.isExist({email: value}).then((data: any) => {\n                                        if (data === false) return Promise.resolve()\n                                        else if (data === true) return Promise.reject(\"邮箱已存在\")\n                                        return Promise.reject(\"检验失败\")\n                                    }).catch((e: any) => {\n                                        return Promise.reject(e)\n                                    })\n                                },\n                            }),\n                        ]}>\n                        <Input\n                            disabled={props.editable === false || canSend > 0}\n                            bordered={props.editable !== false}\n                            addonAfter={\n                                <Button\n                                    type={\"text\"}\n                                    disabled={canSend !== 0}\n                                    onClick={() => {\n                                        props.getEmail().then((data: string) => {\n                                            setEmail(data)\n                                            setModalVis(true)\n                                        }).catch(() => {\n                                            message.error(\"邮箱不合法\")\n                                        })\n                                    }}\n                                >\n                                    {(canSend !== 0 ? canSend + \"s\" : props.t(\"Verify\"))}\n                                </Button>\n                            }/>\n                    </Form.Item>\n                    <Form.Item name=\"emailCode\" label={props.t(\"emailCode\")}\n                               rules={[{required: true}]}>\n                        <Input/>\n                    </Form.Item>\n                </>\n            )}\n        </>\n    )\n}\n\nexport default withTranslation()(ItemEmail)\n","export function getUrlParams(url: string) {\n    let obj: any = {},\n        index = url.indexOf('?'), // 看url有没有参数\n        params = url.substr(index + 1); // 截取url参数部分 id = 1 & type = 2\n\n    if (index !== -1) { // 有参数时\n        let parr = params.split('&');  // 将参数分割成数组 [\"id = 1 \", \" type = 2\"]\n        for (let i of parr) {           // 遍历数组\n            let arr = i.split('=');  // 1） i id = 1   arr = [id, 1]  2）i type = 2  arr = [type, 2]\n            obj[arr[0]] = arr[1];  // obj[arr[0]] = id, obj.id = 1   obj[arr[0]] = type, obj.type = 2\n        }\n    }\n    return obj\n}","export default __webpack_public_path__ + \"static/media/sdu-logo.9fcfaf04.jpg\";","import {ModalForm} from \"@ant-design/pro-form\";\nimport {message} from \"antd\";\nimport ItemUsername from \"./Item/ItemUsername\";\nimport ItemPassword from \"./Item/ItemPassword\";\nimport ItemEmail from \"./Item/ItemEmail\";\nimport React, {useEffect} from \"react\";\nimport {useForm} from \"antd/es/form/Form\";\nimport CApi from \"Utils/API/c-api\"\nimport {withRouter} from \"react-router-dom\";\nimport {UrlPrefix} from \"../../../Config/constValue\";\n\n\nconst Register = (props: any) => {\n    const [form] = useForm()\n\n    useEffect(() => {\n        if (props.token !== undefined)\n            form.setFieldsValue({username: props.username})\n    }, [props, form])\n\n    return (\n        <ModalForm<any>\n            title={props.token !== undefined ? \"注册并绑定\" : \"用户注册\"}\n            trigger={props.button}\n            autoFocusFirstInput\n            modalProps={{\n                maskClosable: false,\n                destroyOnClose: true,\n                width: 500,\n                okText: \"提交\"\n            }}\n            form={form}\n            onFinish={async (values) => {\n                if (props.token !== undefined) {\n                    Object.assign(values, {token: props.token})\n                    return CApi.thirdPartyRegister(values).then((res: any) => {\n                        CApi.login(values).then(() => {\n                            props.history.push(UrlPrefix + \"/home\")\n                        })\n                        message.success('注册成功');\n                        return true;\n                    })\n                } else {\n                    return CApi.register(values).then((res: any) => {\n                        CApi.login(values).then(() => {\n                            props.history.push(UrlPrefix + \"/home\")\n                        })\n                        message.success('注册成功');\n                        return true;\n                    })\n                }\n            }}\n        >\n            <ItemUsername ExistCheck={true} editable={props.token === undefined}/>\n            <ItemPassword/>\n            <ItemEmail needVerify={true} getEmail={() => {\n                return form.validateFields([\"email\"]).then((data: any) => {\n                    return Promise.resolve(data.email)\n                }).catch(() => Promise.reject())\n            }}/>\n        </ModalForm>\n    )\n}\n\nexport default withRouter(Register)\n","import {ModalForm} from \"@ant-design/pro-form\";\nimport {message} from \"antd\";\nimport ItemUsername from \"./Item/ItemUsername\";\nimport ItemPassword from \"./Item/ItemPassword\";\nimport React from \"react\";\nimport {useForm} from \"antd/es/form/Form\";\nimport CApi from \"Utils/API/c-api\"\nimport {withTranslation} from \"react-i18next\";\nimport {withRouter} from \"react-router\";\nimport {UrlPrefix} from \"../../../Config/constValue\";\n\nconst Binding = (props: any) => {\n    const [form] = useForm()\n    return (\n        <ModalForm<any>\n            title=\"绑定已有账号\"\n            trigger={props.button}\n            autoFocusFirstInput\n            modalProps={{\n                maskClosable: false,\n                destroyOnClose: true,\n                width: 500,\n                okText: \"提交\"\n            }}\n            form={form}\n            onFinish={async (values) => {\n                Object.assign(values, {token: props.token})\n                return CApi.thirdPartyBinding(values).then((res: any) => {\n                    props.history.push(UrlPrefix + \"/home\")\n                    message.success('绑定成功');\n                    return true;\n                })\n            }}\n        >\n            <ItemUsername/>\n            <ItemPassword noConfirm={true}/>\n        </ModalForm>\n    )\n}\n\n\nexport default withTranslation()(\n    withRouter(Binding)\n)","import React, {Component, Dispatch} from \"react\";\nimport {Button, Card, Image, message, Space, Spin} from \"antd\";\nimport {connect} from \"react-redux\";\nimport {withTranslation} from \"react-i18next\";\nimport {withRouter} from \"react-router\";\nimport {getUrlParams} from \"../../Utils/getUrlParams\";\nimport CApi from \"../../Utils/API/c-api\";\nimport SDU_Logo from \"../../Assert/img/sdu-logo.jpg\";\nimport {testLoginTodo} from \"../../Redux/Action/user\";\nimport Register from \"../../Component/user/Form/Register\";\nimport Binding from \"../../Component/user/Form/Binding\";\nimport {UrlPrefix} from \"../../Config/constValue\";\n\n\nclass CThirdPartyLogin extends Component<any, any> {\n\n\n    constructor(props: any, context: any) {\n        super(props, context);\n        this.state = {\n            loading: true,\n            thirdParty: \"\",\n            info: \"\",\n            token: \"\",\n            sduId: \"\"\n        }\n    }\n\n    componentDidMount() {\n        const paras = getUrlParams(this.props.location.search)\n        CApi.thirdPartyLogin({\n            thirdParty: paras.thirdParty,\n            ticket: paras.ticket\n        }).then((resData: any) => {\n            message.success(this.props.t(\"certificationSuccess\"))\n            if (resData.user === null) {\n                // 之前没有绑定账号，现在进行绑定\n                let obj: any = {\n                    loading: false,\n                    thirdParty: resData.thirdParty,\n                    token: resData.token\n                }\n                if (resData.thirdParty === \"SDUCAS\") {\n                    Object.assign(obj, {\n                        info: resData.sduRealName + \" (\" + resData.sduId + \")\",\n                        sduId: resData.sduId\n                    })\n                }\n                this.setState(obj)\n            } else {\n                this.props.history.push(UrlPrefix + \"/home\")\n            }\n        })\n    }\n\n    render() {\n        return (\n            <div className={\"center\"} style={{width: 450}}>\n                {\n                    [''].map(() => {\n                        if (this.state.loading === true) {\n                            return (\n                                <Spin tip={this.props.t(\"certificationIn...\")}>\n                                    <div style={{textAlign: \"center\", margin: \"0 auto\"}}>\n                                        <div>\n                                            <Image width={200} src={SDU_Logo} preview={false}/>\n                                        </div>\n                                    </div>\n                                </Spin>\n                            )\n                        } else {\n                            return (\n                                <>\n                                    <Card title={\n                                        (\n                                            <span>\n                                                {this.props.t(\"firstTimeUse\")}\n                                                <span style={{fontWeight: \"bold\"}}>{this.state.thirdParty}</span>\n                                                {this.props.t(\"login,BindingOperationRequired\")}\n                                            </span>\n                                        )\n                                    }>\n\n                                        <Space direction={\"vertical\"} size={15}>\n                                            <div style={{textAlign: \"left\"}}>\n                                                {this.props.t(\"certificationInformation:\")}<span\n                                                style={{fontWeight: \"bold\"}}>{this.state.info}</span>\n                                            </div>\n                                            <div style={{textAlign: \"left\"}}>\n                                                {this.props.t(\"statuteOfLimitationsCurrentCertification\")}<span\n                                                style={{fontWeight: \"bold\"}}>{this.props.t(\"5Minutes\")}</span>{this.props.t(\"validWithin\")}\n                                            </div>\n                                            <Register token={this.state.token} username={this.state.sduId} button={\n                                                <Button block={true} type={\"primary\"}>{this.props.t(\"registerAsANewUserAndBind\")}</Button>\n                                            }/>\n                                            <Binding token={this.state.token} button={\n                                                <Button block={true} type={\"primary\"}>{this.props.t(\"bindExistingAccounts\")}</Button>\n                                            }/>\n                                        </Space>\n\n                                    </Card>\n                                </>\n                            )\n                        }\n                    })\n                }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: any) => {\n    return {}\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\n    testLogin: () => dispatch(testLoginTodo())\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(\n    withTranslation()(\n        withRouter(CThirdPartyLogin)\n    ))\n"],"sourceRoot":""}